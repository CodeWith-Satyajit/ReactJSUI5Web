var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React, { forwardRef } from 'react';
import { createUseStyles } from 'react-jss';
import { Card } from '../../webComponents';
import styles from './AnalyticalCard.jss';
const useStyles = createUseStyles(styles, { name: 'AnalyticalCard' });
/**
 * The `AnalyticalCard` is mainly used for data visualization. It consists of two areas â€“ a header area and a chart area with a visual representation of the data.<br />
 */
const AnalyticalCard = forwardRef((props, ref) => {
    const { children, header } = props, rest = __rest(props, ["children", "header"]);
    const classes = useStyles();
    return (React.createElement(Card, Object.assign({ ref: ref }, rest),
        header,
        React.createElement("div", { className: classes.content, role: "group" }, children)));
});
AnalyticalCard.displayName = 'AnalyticalCard';
export { AnalyticalCard };
