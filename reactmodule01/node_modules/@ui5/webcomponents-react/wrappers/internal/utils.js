import { Children, cloneElement, Fragment } from 'react';
export function flattenFragments(children, depth = 1) {
    const flatChildren = [];
    const removeFragments = (element, level = 0, key = []) => {
        var _a;
        if (!element) {
            return;
        }
        if (Array.isArray(element)) {
            Children.toArray(element).forEach((child, index) => {
                removeFragments(child, level + 1, [...key, index]);
            });
            return;
        }
        if (element.type === Fragment && level <= depth) {
            Children.toArray((_a = element.props) === null || _a === void 0 ? void 0 : _a.children).forEach((item, index) => {
                removeFragments(item, level + 1, [...key, index]);
            });
        }
        else if (typeof element === 'string' || typeof element === 'number') {
            flatChildren.push(element);
        }
        else {
            flatChildren.push(cloneElement(element, { key: key.join('.') }));
        }
    };
    removeFragments(children);
    return flatChildren;
}
