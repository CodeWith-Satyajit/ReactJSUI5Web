import { useSyncRef } from '@ui5/webcomponents-react-base';
import React, { forwardRef, useContext, useEffect } from 'react';
import { VariantManagementContext } from '../../internal/VariantManagementContext';
import { StandardListItem } from '../../webComponents/StandardListItem';
/**
 * The `VariantItem` describes a variant/view of the `VariantManagement` component.
 */
const VariantItem = forwardRef((props, ref) => {
    const { isDefault, author, favorite, global, labelReadOnly, applyAutomatically, readOnly, selected, children, hideDelete } = props;
    const { selectVariantItem } = useContext(VariantManagementContext);
    const [componentRef, consolidatedRef] = useSyncRef(ref);
    useEffect(() => {
        if (selected) {
            selectVariantItem(Object.assign(Object.assign({}, props), { variantItem: consolidatedRef.current }));
        }
    }, [selected]);
    return (React.createElement(StandardListItem, Object.assign({}, props, { ref: componentRef, "data-is-default": isDefault, "data-author": author, "data-favorite": favorite, "data-global": global, "data-label-read-only": labelReadOnly, "data-apply-automatically": applyAutomatically, "data-read-only": readOnly, "data-children": children, "data-hide-delete": hideDelete })));
});
VariantItem.displayName = 'VariantItem';
export { VariantItem };
