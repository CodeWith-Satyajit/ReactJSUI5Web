import clsx from 'clsx';
import React, { useEffect, useMemo, useRef, useState } from 'react';
import { createUseStyles } from 'react-jss';
import { AvatarSize } from '../../enums/AvatarSize';
const styles = {
    base: {
        alignSelf: 'center',
        opacity: 0
    },
    hidden: {
        opacity: 0
    },
    visible: {
        transition: 'opacity 0.5s',
        opacity: 1
    },
    imageContainer: {
        display: 'inline-block',
        verticalAlign: 'middle',
        maxHeight: '3rem',
        width: '3rem',
        maxWidth: '3rem'
    },
    image: {
        width: '100%',
        height: '100%'
    }
};
const useStyles = createUseStyles(styles, {
    name: 'CollapsedAvatar'
});
export const CollapsedAvatar = (props) => {
    const { image, imageShapeCircle, style } = props;
    const classes = useStyles();
    const [isMounted, setIsMounted] = useState(false);
    const domRef = useRef(null);
    const avatarContent = useMemo(() => {
        var _a, _b;
        if (!image)
            return null;
        if (typeof image === 'string') {
            return (React.createElement("span", { className: classes.imageContainer, style: { borderRadius: imageShapeCircle ? '50%' : 0, overflow: 'hidden' } },
                React.createElement("img", { className: classes.image, src: image, alt: "Object Page Image" })));
        }
        else {
            return React.cloneElement(image, {
                size: AvatarSize.S,
                className: ((_a = image.props) === null || _a === void 0 ? void 0 : _a.className)
                    ? `${classes.imageContainer} ${(_b = image.props) === null || _b === void 0 ? void 0 : _b.className}`
                    : classes.imageContainer
            });
        }
    }, [image, imageShapeCircle]);
    useEffect(() => {
        setIsMounted(true);
    }, []);
    const containerClasses = clsx(classes.base, isMounted ? classes.visible : classes.hidden);
    return (React.createElement("div", { ref: domRef, className: containerClasses, style: style, "data-component-name": "ObjectPageCollapsedAvatar" }, avatarContent));
};
