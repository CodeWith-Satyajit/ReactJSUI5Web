var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import { ThemingParameters } from '@ui5/webcomponents-react-base';
import clsx from 'clsx';
import React, { forwardRef } from 'react';
import { createUseStyles } from 'react-jss';
import { CustomThemingParameters } from '../../themes/CustomVariables';
const styles = {
    objectPageSubSection: {
        padding: '1rem 0',
        '&:focus': {
            outline: `${ThemingParameters.sapContent_FocusWidth} ${ThemingParameters.sapContent_FocusStyle} ${ThemingParameters.sapContent_FocusColor}`,
            outlineOffset: `calc(-1 * ${ThemingParameters.sapContent_FocusWidth})`
        }
    },
    subSectionTitle: {
        fontFamily: CustomThemingParameters.ObjectPageSectionTitleFontFamily,
        fontSize: ThemingParameters.sapFontHeader5Size,
        color: ThemingParameters.sapGroup_TitleTextColor,
        marginBottom: '0.5rem'
    },
    subSectionContent: {
        backgroundColor: CustomThemingParameters.ObjectPageSubSectionBackgroundColor,
        borderRadius: CustomThemingParameters.ObjectPageSubSectionBorderRadius,
        padding: '0 0.5rem'
    }
};
const useStyles = createUseStyles(styles, { name: 'ObjectPageSubSection' });
/**
 * Second-level information container of an `ObjectPage`.<br />
 * __Note:__ This component should only be used inside an `ObjectPageSection` component.
 */
const ObjectPageSubSection = forwardRef((props, ref) => {
    const { children, id, titleText, className, style } = props, rest = __rest(props, ["children", "id", "titleText", "className", "style"]);
    const htmlId = `ObjectPageSubSection-${id}`;
    const classes = useStyles();
    const subSectionClassName = clsx(classes.objectPageSubSection, className);
    return (React.createElement("div", Object.assign({ ref: ref, role: "region", style: style, tabIndex: -1 }, rest, { className: subSectionClassName, id: htmlId }),
        React.createElement("div", { role: "heading", "aria-level": 4, className: classes.subSectionTitle, "data-component-name": "ObjectPageSubSectionTitleText" }, titleText),
        React.createElement("div", { className: classes.subSectionContent, "data-component-name": "ObjectPageSubSectionContent" }, children)));
});
ObjectPageSubSection.displayName = 'ObjectPageSubSection';
export { ObjectPageSubSection };
