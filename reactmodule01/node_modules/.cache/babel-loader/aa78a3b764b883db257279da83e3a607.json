{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { useVirtualizer } from '@tanstack/react-virtual';\nimport { debounce, enrichEventWithDetails, useI18nBundle, useIsomorphicId, useIsomorphicLayoutEffect, useIsRTL } from '@ui5/webcomponents-react-base';\nimport clsx from 'clsx';\nimport React, { forwardRef, useCallback, useEffect, useMemo, useRef } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { useColumnOrder, useExpanded, useFilters, useGlobalFilter, useGroupBy, useResizeColumns, useRowSelect, useSortBy, useTable } from 'react-table';\nimport { GlobalStyleClasses, TableScaleWidthMode, TableSelectionBehavior, TableSelectionMode, TableVisibleRowCountMode } from '../../enums';\nimport { COLLAPSE_NODE, COLLAPSE_PRESS_SPACE, EXPAND_NODE, EXPAND_PRESS_SPACE, INVALID_TABLE, SELECT_PRESS_SPACE, UNSELECT_PRESS_SPACE } from '../../i18n/i18n-defaults';\nimport { FlexBox } from '../FlexBox';\nimport { Text } from '../Text';\nimport styles from './AnayticalTable.jss';\nimport { ColumnHeaderContainer } from './ColumnHeader/ColumnHeaderContainer';\nimport { DefaultColumn } from './defaults/Column';\nimport { DefaultLoadingComponent } from './defaults/LoadingComponent';\nimport { TablePlaceholder } from './defaults/LoadingComponent/TablePlaceholder';\nimport { DefaultNoDataComponent } from './defaults/NoDataComponent';\nimport { useA11y } from './hooks/useA11y';\nimport { useDragAndDrop } from './hooks/useDragAndDrop';\nimport { useDynamicColumnWidths } from './hooks/useDynamicColumnWidths';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\nimport { usePopIn } from './hooks/usePopIn';\nimport { useResizeColumnsConfig } from './hooks/useResizeColumnsConfig';\nimport { useRowHighlight } from './hooks/useRowHighlight';\nimport { useRowNavigationIndicators } from './hooks/useRowNavigationIndicator';\nimport { useRowSelectionColumn } from './hooks/useRowSelectionColumn';\nimport { useSelectionChangeCallback } from './hooks/useSelectionChangeCallback';\nimport { useSingleRowStateSelection } from './hooks/useSingleRowStateSelection';\nimport { useStyling } from './hooks/useStyling';\nimport { useTableScrollHandles } from './hooks/useTableScrollHandles';\nimport { useToggleRowExpand } from './hooks/useToggleRowExpand';\nimport { useVisibleColumnsWidth } from './hooks/useVisibleColumnsWidth';\nimport { VerticalScrollbar } from './scrollbars/VerticalScrollbar';\nimport { VirtualTableBody } from './TableBody/VirtualTableBody';\nimport { VirtualTableBodyContainer } from './TableBody/VirtualTableBodyContainer';\nimport { stateReducer } from './tableReducer/stateReducer';\nimport { TitleBar } from './TitleBar';\nimport { orderByFn, tagNamesWhichShouldNotSelectARow } from './util';\nimport { VerticalResizer } from './VerticalResizer';\n// When a sorted column is removed from the visible columns array (e.g. when \"popped-in\"), it doesn't clean up the sorted columns leading to an undefined `sortType`.\nconst sortTypesFallback = {\n  undefined: () => undefined\n};\nconst useStyles = createUseStyles(styles, {\n  name: 'AnalyticalTable'\n});\n/**\n * The `AnalyticalTable` provides a set of convenient functions for responsive table design, including virtualization of rows and columns, infinite scrolling and customizable columns that will, unless otherwise defined, distribute the available space equally among themselves.\n * It also provides several possibilities for working with the data, including sorting, filtering, grouping and aggregation.\n */\nconst AnalyticalTable = forwardRef((props, ref) => {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\n  const {\n      alternateRowColor,\n      alwaysShowSubComponent,\n      adjustTableHeightOnPopIn,\n      className,\n      columnOrder,\n      columns,\n      data: rawData,\n      extension,\n      filterable,\n      globalFilterValue,\n      groupBy,\n      groupable,\n      header,\n      headerRowHeight,\n      highlightField,\n      infiniteScroll,\n      infiniteScrollThreshold,\n      isTreeTable,\n      loading,\n      markNavigatedRow,\n      minRows,\n      noDataText,\n      overscanCount,\n      overscanCountHorizontal,\n      portalContainer,\n      retainColumnWidth,\n      reactTableOptions,\n      renderRowSubComponent,\n      rowHeight,\n      scaleWidthMode,\n      selectedRowIds,\n      selectionBehavior,\n      selectionMode,\n      showOverlay,\n      sortable,\n      style,\n      subRowsKey,\n      tableHooks,\n      tableInstance,\n      visibleRowCountMode,\n      visibleRows,\n      withNavigationHighlight,\n      withRowHighlight,\n      onColumnsReorder,\n      onGroup,\n      onLoadMore,\n      onRowClick,\n      onRowExpandChange,\n      onRowSelect,\n      onSort,\n      onTableScroll,\n      LoadingComponent,\n      NoDataComponent,\n      scaleXFactor\n    } = props,\n    rest = __rest(props, [\"alternateRowColor\", \"alwaysShowSubComponent\", \"adjustTableHeightOnPopIn\", \"className\", \"columnOrder\", \"columns\", \"data\", \"extension\", \"filterable\", \"globalFilterValue\", \"groupBy\", \"groupable\", \"header\", \"headerRowHeight\", \"highlightField\", \"infiniteScroll\", \"infiniteScrollThreshold\", \"isTreeTable\", \"loading\", \"markNavigatedRow\", \"minRows\", \"noDataText\", \"overscanCount\", \"overscanCountHorizontal\", \"portalContainer\", \"retainColumnWidth\", \"reactTableOptions\", \"renderRowSubComponent\", \"rowHeight\", \"scaleWidthMode\", \"selectedRowIds\", \"selectionBehavior\", \"selectionMode\", \"showOverlay\", \"sortable\", \"style\", \"subRowsKey\", \"tableHooks\", \"tableInstance\", \"visibleRowCountMode\", \"visibleRows\", \"withNavigationHighlight\", \"withRowHighlight\", \"onColumnsReorder\", \"onGroup\", \"onLoadMore\", \"onRowClick\", \"onRowExpandChange\", \"onRowSelect\", \"onSort\", \"onTableScroll\", \"LoadingComponent\", \"NoDataComponent\", \"scaleXFactor\"]);\n  const uniqueId = useIsomorphicId();\n  const i18nBundle = useI18nBundle('@ui5/webcomponents-react');\n  const titleBarId = useRef(`titlebar-${uniqueId}`).current;\n  const invalidTableTextId = useRef(`invalidTableText-${uniqueId}`).current;\n  const classes = useStyles();\n  const [analyticalTableRef, scrollToRef] = useTableScrollHandles(ref);\n  const tableRef = useRef(null);\n  const isRtl = useIsRTL(analyticalTableRef);\n  const getSubRows = useCallback(row => row.subRows || row[subRowsKey] || [], [subRowsKey]);\n  const data = useMemo(() => {\n    if (rawData.length === 0) {\n      return rawData;\n    }\n    if (minRows > rawData.length) {\n      const missingRows = minRows - rawData.length;\n      const emptyRows = Array.from({\n        length: missingRows\n      }, (v, i) => i).map(() => ({\n        emptyRow: true\n      }));\n      return [...rawData, ...emptyRows];\n    }\n    return rawData;\n  }, [rawData, minRows]);\n  const invalidTableA11yText = i18nBundle.getText(INVALID_TABLE);\n  const tableInstanceRef = useRef(null);\n  tableInstanceRef.current = useTable(Object.assign({\n    columns,\n    data,\n    defaultColumn: DefaultColumn,\n    orderByFn,\n    getSubRows,\n    stateReducer,\n    disableFilters: !filterable,\n    disableSortBy: !sortable,\n    disableGroupBy: isTreeTable || renderRowSubComponent ? true : !groupable,\n    selectSubRows: false,\n    sortTypes: sortTypesFallback,\n    webComponentsReactProperties: {\n      translatableTexts: {\n        expandA11yText: i18nBundle.getText(EXPAND_PRESS_SPACE),\n        collapseA11yText: i18nBundle.getText(COLLAPSE_PRESS_SPACE),\n        selectA11yText: i18nBundle.getText(SELECT_PRESS_SPACE),\n        unselectA11yText: i18nBundle.getText(UNSELECT_PRESS_SPACE),\n        expandNodeA11yText: i18nBundle.getText(EXPAND_NODE),\n        collapseNodeA11yText: i18nBundle.getText(COLLAPSE_NODE)\n      },\n      tagNamesWhichShouldNotSelectARow,\n      tableRef,\n      selectionMode,\n      selectionBehavior,\n      classes,\n      onRowSelect: onRowSelect,\n      onRowClick,\n      onRowExpandChange,\n      isTreeTable,\n      alternateRowColor,\n      scaleWidthMode,\n      loading,\n      withRowHighlight,\n      highlightField,\n      withNavigationHighlight,\n      markNavigatedRow,\n      renderRowSubComponent,\n      alwaysShowSubComponent,\n      scrollToRef,\n      showOverlay,\n      uniqueId,\n      scaleXFactor\n    }\n  }, reactTableOptions), useFilters, useGlobalFilter, useColumnOrder, useGroupBy, useSortBy, useExpanded, useRowSelect, useResizeColumns, useResizeColumnsConfig, useRowSelectionColumn, useSingleRowStateSelection, useSelectionChangeCallback, useRowHighlight, useRowNavigationIndicators, useDynamicColumnWidths, useStyling, useToggleRowExpand, useA11y, usePopIn, useVisibleColumnsWidth, useKeyboardNavigation, ...tableHooks);\n  const {\n    getTableProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state: tableState,\n    columns: tableInternalColumns,\n    setColumnOrder,\n    dispatch,\n    totalColumnsWidth,\n    visibleColumns,\n    visibleColumnsWidth,\n    setGroupBy,\n    setGlobalFilter\n  } = tableInstanceRef.current;\n  if (tableInstance && {}.hasOwnProperty.call(tableInstance, 'current')) {\n    tableInstance.current = tableInstanceRef.current;\n  }\n  if (typeof tableInstance === 'function') {\n    tableInstance(tableInstanceRef.current);\n  }\n  const titleBarRef = useRef(null);\n  const extensionRef = useRef(null);\n  const headerRef = useRef(null);\n  const extensionsHeight = ((_b = (_a = titleBarRef.current) === null || _a === void 0 ? void 0 : _a.offsetHeight) !== null && _b !== void 0 ? _b : 0) + ((_d = (_c = extensionRef.current) === null || _c === void 0 ? void 0 : _c.offsetHeight) !== null && _d !== void 0 ? _d : 0) + ((_f = (_e = headerRef.current) === null || _e === void 0 ? void 0 : _e.offsetHeight) !== null && _f !== void 0 ? _f : 0);\n  const calcRowHeight = parseInt(getComputedStyle((_g = tableRef.current) !== null && _g !== void 0 ? _g : document.body).getPropertyValue('--sapWcrAnalyticalTableRowHeight') || '44');\n  const internalRowHeight = rowHeight !== null && rowHeight !== void 0 ? rowHeight : calcRowHeight;\n  const internalHeaderRowHeight = headerRowHeight !== null && headerRowHeight !== void 0 ? headerRowHeight : internalRowHeight;\n  const popInRowHeight = ((_h = tableState === null || tableState === void 0 ? void 0 : tableState.popInColumns) === null || _h === void 0 ? void 0 : _h.length) > 0 ? internalRowHeight + tableState.popInColumns.length * (internalRowHeight + 16) : internalRowHeight;\n  const internalVisibleRowCount = (_j = tableState.visibleRows) !== null && _j !== void 0 ? _j : visibleRows;\n  const updateTableClientWidth = useCallback(() => {\n    if (tableRef.current) {\n      dispatch({\n        type: 'TABLE_RESIZE',\n        payload: {\n          tableClientWidth: tableRef.current.clientWidth\n        }\n      });\n    }\n  }, [tableRef.current]);\n  const updateRowsCount = useCallback(() => {\n    var _a, _b, _c, _d;\n    if (visibleRowCountMode === TableVisibleRowCountMode.Auto && ((_a = analyticalTableRef.current) === null || _a === void 0 ? void 0 : _a.parentElement)) {\n      const parentElement = (_b = analyticalTableRef.current) === null || _b === void 0 ? void 0 : _b.parentElement;\n      const tableYPosition = parentElement && getComputedStyle(parentElement).position === 'relative' && ((_c = analyticalTableRef.current) === null || _c === void 0 ? void 0 : _c.offsetTop) ? (_d = analyticalTableRef.current) === null || _d === void 0 ? void 0 : _d.offsetTop : 0;\n      const parentHeight = parentElement === null || parentElement === void 0 ? void 0 : parentElement.getBoundingClientRect().height;\n      const tableHeight = parentHeight ? parentHeight - tableYPosition : 0;\n      const rowCount = Math.max(1, Math.floor((tableHeight - extensionsHeight) / popInRowHeight));\n      dispatch({\n        type: 'VISIBLE_ROWS',\n        payload: {\n          visibleRows: rowCount\n        }\n      });\n    }\n  }, [(_l = (_k = analyticalTableRef.current) === null || _k === void 0 ? void 0 : _k.parentElement) === null || _l === void 0 ? void 0 : _l.getBoundingClientRect().height, (_m = analyticalTableRef.current) === null || _m === void 0 ? void 0 : _m.getBoundingClientRect().y, extensionsHeight, popInRowHeight, visibleRowCountMode]);\n  useEffect(() => {\n    setGlobalFilter(globalFilterValue);\n  }, [globalFilterValue, setGlobalFilter]);\n  useEffect(() => {\n    var _a, _b;\n    const debouncedWidthObserverFn = debounce(updateTableClientWidth, 500);\n    const tableWidthObserver = new ResizeObserver(debouncedWidthObserverFn);\n    tableWidthObserver.observe(tableRef.current);\n    const debouncedHeightObserverFn = debounce(updateRowsCount, 500);\n    const parentHeightObserver = new ResizeObserver(debouncedHeightObserverFn);\n    if ((_a = analyticalTableRef.current) === null || _a === void 0 ? void 0 : _a.parentElement) {\n      parentHeightObserver.observe((_b = analyticalTableRef.current) === null || _b === void 0 ? void 0 : _b.parentElement);\n    }\n    return () => {\n      debouncedHeightObserverFn.cancel();\n      debouncedWidthObserverFn.cancel();\n      tableWidthObserver.disconnect();\n      parentHeightObserver.disconnect();\n    };\n  }, [updateTableClientWidth, updateRowsCount]);\n  useIsomorphicLayoutEffect(() => {\n    dispatch({\n      type: 'IS_RTL',\n      payload: {\n        isRtl\n      }\n    });\n  }, [isRtl]);\n  useIsomorphicLayoutEffect(() => {\n    updateTableClientWidth();\n  }, [updateTableClientWidth]);\n  useIsomorphicLayoutEffect(() => {\n    updateRowsCount();\n  }, [updateRowsCount]);\n  useEffect(() => {\n    if (tableState.visibleRows !== undefined && visibleRowCountMode === TableVisibleRowCountMode.Fixed) {\n      dispatch({\n        type: 'VISIBLE_ROWS',\n        payload: {\n          visibleRows: undefined\n        }\n      });\n    }\n  }, [visibleRowCountMode, tableState.visibleRows]);\n  useEffect(() => {\n    setGroupBy(groupBy);\n  }, [groupBy, setGroupBy]);\n  useEffect(() => {\n    dispatch({\n      type: 'SET_SELECTED_ROW_IDS',\n      payload: {\n        selectedRowIds\n      }\n    });\n  }, [selectedRowIds]);\n  useEffect(() => {\n    var _a;\n    if ((tableState === null || tableState === void 0 ? void 0 : tableState.interactiveRowsHavePopIn) && (!(tableState === null || tableState === void 0 ? void 0 : tableState.popInColumns) || ((_a = tableState === null || tableState === void 0 ? void 0 : tableState.popInColumns) === null || _a === void 0 ? void 0 : _a.length) === 0)) {\n      dispatch({\n        type: 'WITH_POPIN',\n        payload: false\n      });\n    }\n  }, [tableState === null || tableState === void 0 ? void 0 : tableState.interactiveRowsHavePopIn, (_o = tableState === null || tableState === void 0 ? void 0 : tableState.popInColumns) === null || _o === void 0 ? void 0 : _o.length]);\n  const tableBodyHeight = useMemo(() => {\n    const rowNum = rows.length < internalVisibleRowCount ? Math.max(rows.length, minRows) : internalVisibleRowCount;\n    const rowHeight = visibleRowCountMode === TableVisibleRowCountMode.Auto || (tableState === null || tableState === void 0 ? void 0 : tableState.interactiveRowsHavePopIn) || adjustTableHeightOnPopIn ? popInRowHeight : internalRowHeight;\n    return rowHeight * rowNum;\n  }, [internalRowHeight, rows.length, internalVisibleRowCount, minRows, popInRowHeight, visibleRowCountMode, tableState === null || tableState === void 0 ? void 0 : tableState.interactiveRowsHavePopIn, adjustTableHeightOnPopIn]);\n  // scroll bar detection\n  useEffect(() => {\n    const visibleRowCount = rows.length < internalVisibleRowCount ? Math.max(rows.length, minRows) : internalVisibleRowCount;\n    if (popInRowHeight !== internalRowHeight) {\n      dispatch({\n        type: 'TABLE_SCROLLING_ENABLED',\n        payload: {\n          isScrollable: visibleRowCount * popInRowHeight > tableBodyHeight || rows.length > visibleRowCount\n        }\n      });\n    } else {\n      dispatch({\n        type: 'TABLE_SCROLLING_ENABLED',\n        payload: {\n          isScrollable: rows.length > visibleRowCount\n        }\n      });\n    }\n  }, [rows.length, minRows, internalVisibleRowCount, popInRowHeight, tableBodyHeight]);\n  const noDataStyles = {\n    height: `${tableBodyHeight}px`,\n    width: totalColumnsWidth ? `${totalColumnsWidth}px` : '100%'\n  };\n  const onGroupByChanged = useCallback(e => {\n    const {\n      column,\n      isGrouped\n    } = e.detail;\n    let groupedColumns = [];\n    if (isGrouped) {\n      groupedColumns = [...tableState.groupBy, column.id];\n    } else {\n      groupedColumns = tableState.groupBy.filter(group => group !== column.id);\n    }\n    setGroupBy(groupedColumns);\n    onGroup(enrichEventWithDetails(e, {\n      column,\n      groupedColumns\n    }));\n  }, [tableState.groupBy, onGroup, setGroupBy]);\n  useEffect(() => {\n    if ((columnOrder === null || columnOrder === void 0 ? void 0 : columnOrder.length) > 0) {\n      setColumnOrder(columnOrder);\n    }\n  }, [columnOrder]);\n  const [dragOver, handleDragEnter, handleDragStart, handleDragOver, handleOnDrop, handleOnDragEnd] = useDragAndDrop(onColumnsReorder, isRtl, setColumnOrder, tableState.columnOrder, tableState.columnResizing, tableInternalColumns);\n  const inlineStyle = useMemo(() => {\n    const tableStyles = {\n      maxWidth: '100%',\n      overflowX: 'auto',\n      display: 'flex',\n      flexDirection: 'column'\n    };\n    if (!!rowHeight) {\n      tableStyles['--sapWcrAnalyticalTableRowHeight'] = `${rowHeight}px`;\n      tableStyles['--sapWcrAnalyticalTableHeaderRowHeight'] = `${rowHeight}px`;\n    }\n    if (!!headerRowHeight) {\n      tableStyles['--sapWcrAnalyticalTableHeaderRowHeight'] = `${headerRowHeight}px`;\n    }\n    if (tableState.tableClientWidth > 0) {\n      return Object.assign(Object.assign({}, tableStyles), style);\n    }\n    return Object.assign(Object.assign(Object.assign({}, tableStyles), style), {\n      visibility: 'hidden'\n    });\n  }, [tableState.tableClientWidth, style, rowHeight, headerRowHeight]);\n  useEffect(() => {\n    var _a;\n    if (retainColumnWidth && ((_a = tableState.columnResizing) === null || _a === void 0 ? void 0 : _a.isResizingColumn) && tableState.tableColResized == null) {\n      dispatch({\n        type: 'TABLE_COL_RESIZED',\n        payload: true\n      });\n    }\n    if (tableState.tableColResized && !retainColumnWidth) {\n      dispatch({\n        type: 'TABLE_COL_RESIZED',\n        payload: undefined\n      });\n    }\n  }, [tableState.columnResizing, retainColumnWidth, tableState.tableColResized]);\n  const parentRef = useRef(null);\n  const verticalScrollBarRef = useRef(null);\n  const handleBodyScroll = e => {\n    if (typeof onTableScroll === 'function') {\n      onTableScroll(e);\n    }\n    if (verticalScrollBarRef.current && verticalScrollBarRef.current.scrollTop !== parentRef.current.scrollTop) {\n      if (!parentRef.current.isExternalVerticalScroll) {\n        verticalScrollBarRef.current.scrollTop = parentRef.current.scrollTop;\n        verticalScrollBarRef.current.isExternalVerticalScroll = true;\n      }\n      parentRef.current.isExternalVerticalScroll = false;\n    }\n  };\n  const handleVerticalScrollBarScroll = () => {\n    if (!verticalScrollBarRef.current.isExternalVerticalScroll) {\n      parentRef.current.scrollTop = verticalScrollBarRef.current.scrollTop;\n      parentRef.current.isExternalVerticalScroll = true;\n    }\n    verticalScrollBarRef.current.isExternalVerticalScroll = false;\n  };\n  const tableClasses = clsx(classes.table, GlobalStyleClasses.sapScrollBar, withNavigationHighlight && classes.hasNavigationIndicator);\n  const columnVirtualizer = useVirtualizer({\n    count: visibleColumnsWidth.length,\n    getScrollElement: () => tableRef.current,\n    estimateSize: useCallback(index => {\n      return visibleColumnsWidth[index];\n    }, [visibleColumnsWidth]),\n    horizontal: true,\n    overscan: overscanCountHorizontal\n  });\n  scrollToRef.current = Object.assign(Object.assign({}, scrollToRef.current), {\n    horizontalScrollToOffset: columnVirtualizer.scrollToOffset,\n    horizontalScrollToIndex: columnVirtualizer.scrollToIndex\n  });\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", Object.assign({\n    className: className,\n    style: inlineStyle,\n    ref: analyticalTableRef\n  }, rest), header && React.createElement(TitleBar, {\n    ref: titleBarRef,\n    titleBarId: titleBarId\n  }, header), extension && React.createElement(\"div\", {\n    ref: extensionRef\n  }, extension), React.createElement(FlexBox, {\n    className: classes.tableContainerWithScrollBar,\n    \"data-component-name\": \"AnalyticalTableContainerWithScrollbar\"\n  }, showOverlay && React.createElement(React.Fragment, null, React.createElement(\"span\", {\n    id: invalidTableTextId,\n    className: classes.hiddenA11yText,\n    \"aria-hidden\": true\n  }, invalidTableA11yText), React.createElement(\"div\", {\n    tabIndex: 0,\n    \"aria-labelledby\": `${titleBarId} ${invalidTableTextId}`,\n    role: \"region\",\n    \"data-component-name\": \"AnalyticalTableOverlay\",\n    className: classes.overlay\n  })), React.createElement(\"div\", Object.assign({\n    \"aria-labelledby\": titleBarId\n  }, getTableProps(), {\n    tabIndex: showOverlay ? -1 : 0,\n    role: \"grid\",\n    \"aria-rowcount\": rows.length,\n    \"aria-colcount\": visibleColumns.length,\n    \"data-per-page\": internalVisibleRowCount,\n    \"data-component-name\": \"AnalyticalTableContainer\",\n    ref: tableRef,\n    \"data-native-scrollbar\": props['data-native-scrollbar'],\n    className: tableClasses\n  }), React.createElement(\"div\", {\n    className: classes.tableHeaderBackgroundElement\n  }), React.createElement(\"div\", {\n    className: classes.tableBodyBackgroundElement\n  }), headerGroups.map(headerGroup => {\n    let headerProps = {};\n    if (headerGroup.getHeaderGroupProps) {\n      headerProps = headerGroup.getHeaderGroupProps();\n    }\n    return tableRef.current && React.createElement(ColumnHeaderContainer, {\n      ref: headerRef,\n      key: headerProps.key,\n      resizeInfo: tableState.columnResizing,\n      headerProps: headerProps,\n      headerGroup: headerGroup,\n      onSort: onSort,\n      onGroupByChanged: onGroupByChanged,\n      onDragStart: handleDragStart,\n      onDragOver: handleDragOver,\n      onDrop: handleOnDrop,\n      onDragEnter: handleDragEnter,\n      onDragEnd: handleOnDragEnd,\n      dragOver: dragOver,\n      isRtl: isRtl,\n      portalContainer: portalContainer,\n      uniqueId: uniqueId,\n      columnVirtualizer: columnVirtualizer,\n      scaleXFactor: scaleXFactor\n    });\n  }), loading && (rawData === null || rawData === void 0 ? void 0 : rawData.length) > 0 && React.createElement(LoadingComponent, {\n    style: {\n      width: `${totalColumnsWidth}px`\n    }\n  }), loading && (rawData === null || rawData === void 0 ? void 0 : rawData.length) === 0 && React.createElement(TablePlaceholder, {\n    columns: visibleColumns,\n    rows: minRows,\n    style: noDataStyles\n  }), !loading && (rawData === null || rawData === void 0 ? void 0 : rawData.length) === 0 && React.createElement(NoDataComponent, {\n    noDataText: noDataText,\n    className: classes.noDataContainer,\n    style: noDataStyles\n  }), (rawData === null || rawData === void 0 ? void 0 : rawData.length) > 0 && tableRef.current && React.createElement(VirtualTableBodyContainer, {\n    tableBodyHeight: tableBodyHeight,\n    totalColumnsWidth: totalColumnsWidth,\n    parentRef: parentRef,\n    classes: classes,\n    infiniteScroll: infiniteScroll,\n    infiniteScrollThreshold: infiniteScrollThreshold,\n    onLoadMore: onLoadMore,\n    internalRowHeight: internalRowHeight,\n    popInRowHeight: popInRowHeight,\n    rows: rows,\n    handleExternalScroll: handleBodyScroll,\n    visibleRows: internalVisibleRowCount,\n    dataLength: data === null || data === void 0 ? void 0 : data.length\n  }, React.createElement(VirtualTableBody, {\n    classes: classes,\n    prepareRow: prepareRow,\n    rows: rows,\n    minRows: minRows,\n    scrollToRef: scrollToRef,\n    isTreeTable: isTreeTable,\n    internalRowHeight: internalRowHeight,\n    popInRowHeight: popInRowHeight,\n    visibleRows: internalVisibleRowCount,\n    alternateRowColor: alternateRowColor,\n    overscanCount: overscanCount,\n    parentRef: parentRef,\n    visibleColumns: visibleColumns,\n    renderRowSubComponent: renderRowSubComponent,\n    alwaysShowSubComponent: alwaysShowSubComponent,\n    markNavigatedRow: markNavigatedRow,\n    isRtl: isRtl,\n    subComponentsHeight: tableState.subComponentsHeight,\n    dispatch: dispatch,\n    columnVirtualizer: columnVirtualizer\n  }))), (tableState.isScrollable === undefined || tableState.isScrollable) && React.createElement(VerticalScrollbar, {\n    tableBodyHeight: tableBodyHeight,\n    internalRowHeight: internalHeaderRowHeight,\n    popInRowHeight: popInRowHeight,\n    tableRef: tableRef,\n    minRows: minRows,\n    rows: rows,\n    handleVerticalScrollBarScroll: handleVerticalScrollBarScroll,\n    ref: verticalScrollBarRef,\n    \"data-native-scrollbar\": props['data-native-scrollbar']\n  })), visibleRowCountMode === TableVisibleRowCountMode.Interactive && React.createElement(VerticalResizer, {\n    popInRowHeight: popInRowHeight,\n    hasPopInColumns: ((_p = tableState === null || tableState === void 0 ? void 0 : tableState.popInColumns) === null || _p === void 0 ? void 0 : _p.length) > 0,\n    analyticalTableRef: analyticalTableRef,\n    dispatch: dispatch,\n    extensionsHeight: extensionsHeight,\n    internalRowHeight: internalRowHeight,\n    portalContainer: portalContainer\n  })), React.createElement(Text, {\n    \"aria-hidden\": \"true\",\n    id: `smartScaleModeHelper-${uniqueId}`,\n    className: classes.hiddenSmartColMeasure\n  }, ''));\n});\nAnalyticalTable.displayName = 'AnalyticalTable';\nAnalyticalTable.defaultProps = {\n  infiniteScrollThreshold: 20,\n  loading: false,\n  sortable: true,\n  filterable: false,\n  groupable: false,\n  selectionMode: TableSelectionMode.None,\n  selectionBehavior: TableSelectionBehavior.Row,\n  scaleWidthMode: TableScaleWidthMode.Default,\n  data: [],\n  columns: [],\n  minRows: 5,\n  groupBy: [],\n  NoDataComponent: DefaultNoDataComponent,\n  LoadingComponent: DefaultLoadingComponent,\n  noDataText: 'No Data',\n  reactTableOptions: {},\n  tableHooks: [],\n  visibleRows: 15,\n  subRowsKey: 'subRows',\n  highlightField: 'status',\n  markNavigatedRow: () => false,\n  selectedRowIds: {},\n  onGroup: () => {},\n  onRowExpandChange: () => {},\n  isTreeTable: false,\n  alternateRowColor: false,\n  overscanCountHorizontal: 5,\n  visibleRowCountMode: TableVisibleRowCountMode.Fixed,\n  alwaysShowSubComponent: false,\n  portalContainer: document.body\n};\nexport { AnalyticalTable };","map":{"version":3,"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","useVirtualizer","debounce","enrichEventWithDetails","useI18nBundle","useIsomorphicId","useIsomorphicLayoutEffect","useIsRTL","clsx","React","forwardRef","useCallback","useEffect","useMemo","useRef","createUseStyles","useColumnOrder","useExpanded","useFilters","useGlobalFilter","useGroupBy","useResizeColumns","useRowSelect","useSortBy","useTable","GlobalStyleClasses","TableScaleWidthMode","TableSelectionBehavior","TableSelectionMode","TableVisibleRowCountMode","COLLAPSE_NODE","COLLAPSE_PRESS_SPACE","EXPAND_NODE","EXPAND_PRESS_SPACE","INVALID_TABLE","SELECT_PRESS_SPACE","UNSELECT_PRESS_SPACE","FlexBox","Text","styles","ColumnHeaderContainer","DefaultColumn","DefaultLoadingComponent","TablePlaceholder","DefaultNoDataComponent","useA11y","useDragAndDrop","useDynamicColumnWidths","useKeyboardNavigation","usePopIn","useResizeColumnsConfig","useRowHighlight","useRowNavigationIndicators","useRowSelectionColumn","useSelectionChangeCallback","useSingleRowStateSelection","useStyling","useTableScrollHandles","useToggleRowExpand","useVisibleColumnsWidth","VerticalScrollbar","VirtualTableBody","VirtualTableBodyContainer","stateReducer","TitleBar","orderByFn","tagNamesWhichShouldNotSelectARow","VerticalResizer","sortTypesFallback","undefined","useStyles","name","AnalyticalTable","props","ref","_a","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","alternateRowColor","alwaysShowSubComponent","adjustTableHeightOnPopIn","className","columnOrder","columns","data","rawData","extension","filterable","globalFilterValue","groupBy","groupable","header","headerRowHeight","highlightField","infiniteScroll","infiniteScrollThreshold","isTreeTable","loading","markNavigatedRow","minRows","noDataText","overscanCount","overscanCountHorizontal","portalContainer","retainColumnWidth","reactTableOptions","renderRowSubComponent","rowHeight","scaleWidthMode","selectedRowIds","selectionBehavior","selectionMode","showOverlay","sortable","style","subRowsKey","tableHooks","tableInstance","visibleRowCountMode","visibleRows","withNavigationHighlight","withRowHighlight","onColumnsReorder","onGroup","onLoadMore","onRowClick","onRowExpandChange","onRowSelect","onSort","onTableScroll","LoadingComponent","NoDataComponent","scaleXFactor","rest","uniqueId","i18nBundle","titleBarId","current","invalidTableTextId","classes","analyticalTableRef","scrollToRef","tableRef","isRtl","getSubRows","row","subRows","missingRows","emptyRows","Array","from","v","map","emptyRow","invalidTableA11yText","getText","tableInstanceRef","assign","defaultColumn","disableFilters","disableSortBy","disableGroupBy","selectSubRows","sortTypes","webComponentsReactProperties","translatableTexts","expandA11yText","collapseA11yText","selectA11yText","unselectA11yText","expandNodeA11yText","collapseNodeA11yText","getTableProps","headerGroups","rows","prepareRow","state","tableState","tableInternalColumns","setColumnOrder","dispatch","totalColumnsWidth","visibleColumns","visibleColumnsWidth","setGroupBy","setGlobalFilter","titleBarRef","extensionRef","headerRef","extensionsHeight","offsetHeight","calcRowHeight","parseInt","getComputedStyle","document","body","getPropertyValue","internalRowHeight","internalHeaderRowHeight","popInRowHeight","popInColumns","internalVisibleRowCount","updateTableClientWidth","type","payload","tableClientWidth","clientWidth","updateRowsCount","Auto","parentElement","tableYPosition","position","offsetTop","parentHeight","getBoundingClientRect","height","tableHeight","rowCount","Math","max","floor","y","debouncedWidthObserverFn","tableWidthObserver","ResizeObserver","observe","debouncedHeightObserverFn","parentHeightObserver","cancel","disconnect","Fixed","interactiveRowsHavePopIn","tableBodyHeight","rowNum","visibleRowCount","isScrollable","noDataStyles","width","onGroupByChanged","column","isGrouped","detail","groupedColumns","id","filter","group","dragOver","handleDragEnter","handleDragStart","handleDragOver","handleOnDrop","handleOnDragEnd","columnResizing","inlineStyle","tableStyles","maxWidth","overflowX","display","flexDirection","visibility","isResizingColumn","tableColResized","parentRef","verticalScrollBarRef","handleBodyScroll","scrollTop","isExternalVerticalScroll","handleVerticalScrollBarScroll","tableClasses","table","sapScrollBar","hasNavigationIndicator","columnVirtualizer","count","getScrollElement","estimateSize","index","horizontal","overscan","horizontalScrollToOffset","scrollToOffset","horizontalScrollToIndex","scrollToIndex","createElement","Fragment","tableContainerWithScrollBar","hiddenA11yText","tabIndex","role","overlay","tableHeaderBackgroundElement","tableBodyBackgroundElement","headerGroup","headerProps","getHeaderGroupProps","key","resizeInfo","onDragStart","onDragOver","onDrop","onDragEnter","onDragEnd","noDataContainer","handleExternalScroll","dataLength","subComponentsHeight","Interactive","hasPopInColumns","hiddenSmartColMeasure","displayName","defaultProps","None","Row","Default"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/index.js"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { useVirtualizer } from '@tanstack/react-virtual';\nimport { debounce, enrichEventWithDetails, useI18nBundle, useIsomorphicId, useIsomorphicLayoutEffect, useIsRTL } from '@ui5/webcomponents-react-base';\nimport clsx from 'clsx';\nimport React, { forwardRef, useCallback, useEffect, useMemo, useRef } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { useColumnOrder, useExpanded, useFilters, useGlobalFilter, useGroupBy, useResizeColumns, useRowSelect, useSortBy, useTable } from 'react-table';\nimport { GlobalStyleClasses, TableScaleWidthMode, TableSelectionBehavior, TableSelectionMode, TableVisibleRowCountMode } from '../../enums';\nimport { COLLAPSE_NODE, COLLAPSE_PRESS_SPACE, EXPAND_NODE, EXPAND_PRESS_SPACE, INVALID_TABLE, SELECT_PRESS_SPACE, UNSELECT_PRESS_SPACE } from '../../i18n/i18n-defaults';\nimport { FlexBox } from '../FlexBox';\nimport { Text } from '../Text';\nimport styles from './AnayticalTable.jss';\nimport { ColumnHeaderContainer } from './ColumnHeader/ColumnHeaderContainer';\nimport { DefaultColumn } from './defaults/Column';\nimport { DefaultLoadingComponent } from './defaults/LoadingComponent';\nimport { TablePlaceholder } from './defaults/LoadingComponent/TablePlaceholder';\nimport { DefaultNoDataComponent } from './defaults/NoDataComponent';\nimport { useA11y } from './hooks/useA11y';\nimport { useDragAndDrop } from './hooks/useDragAndDrop';\nimport { useDynamicColumnWidths } from './hooks/useDynamicColumnWidths';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\nimport { usePopIn } from './hooks/usePopIn';\nimport { useResizeColumnsConfig } from './hooks/useResizeColumnsConfig';\nimport { useRowHighlight } from './hooks/useRowHighlight';\nimport { useRowNavigationIndicators } from './hooks/useRowNavigationIndicator';\nimport { useRowSelectionColumn } from './hooks/useRowSelectionColumn';\nimport { useSelectionChangeCallback } from './hooks/useSelectionChangeCallback';\nimport { useSingleRowStateSelection } from './hooks/useSingleRowStateSelection';\nimport { useStyling } from './hooks/useStyling';\nimport { useTableScrollHandles } from './hooks/useTableScrollHandles';\nimport { useToggleRowExpand } from './hooks/useToggleRowExpand';\nimport { useVisibleColumnsWidth } from './hooks/useVisibleColumnsWidth';\nimport { VerticalScrollbar } from './scrollbars/VerticalScrollbar';\nimport { VirtualTableBody } from './TableBody/VirtualTableBody';\nimport { VirtualTableBodyContainer } from './TableBody/VirtualTableBodyContainer';\nimport { stateReducer } from './tableReducer/stateReducer';\nimport { TitleBar } from './TitleBar';\nimport { orderByFn, tagNamesWhichShouldNotSelectARow } from './util';\nimport { VerticalResizer } from './VerticalResizer';\n// When a sorted column is removed from the visible columns array (e.g. when \"popped-in\"), it doesn't clean up the sorted columns leading to an undefined `sortType`.\nconst sortTypesFallback = {\n    undefined: () => undefined\n};\nconst useStyles = createUseStyles(styles, { name: 'AnalyticalTable' });\n/**\n * The `AnalyticalTable` provides a set of convenient functions for responsive table design, including virtualization of rows and columns, infinite scrolling and customizable columns that will, unless otherwise defined, distribute the available space equally among themselves.\n * It also provides several possibilities for working with the data, including sorting, filtering, grouping and aggregation.\n */\nconst AnalyticalTable = forwardRef((props, ref) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\n    const { alternateRowColor, alwaysShowSubComponent, adjustTableHeightOnPopIn, className, columnOrder, columns, data: rawData, extension, filterable, globalFilterValue, groupBy, groupable, header, headerRowHeight, highlightField, infiniteScroll, infiniteScrollThreshold, isTreeTable, loading, markNavigatedRow, minRows, noDataText, overscanCount, overscanCountHorizontal, portalContainer, retainColumnWidth, reactTableOptions, renderRowSubComponent, rowHeight, scaleWidthMode, selectedRowIds, selectionBehavior, selectionMode, showOverlay, sortable, style, subRowsKey, tableHooks, tableInstance, visibleRowCountMode, visibleRows, withNavigationHighlight, withRowHighlight, onColumnsReorder, onGroup, onLoadMore, onRowClick, onRowExpandChange, onRowSelect, onSort, onTableScroll, LoadingComponent, NoDataComponent, scaleXFactor } = props, rest = __rest(props, [\"alternateRowColor\", \"alwaysShowSubComponent\", \"adjustTableHeightOnPopIn\", \"className\", \"columnOrder\", \"columns\", \"data\", \"extension\", \"filterable\", \"globalFilterValue\", \"groupBy\", \"groupable\", \"header\", \"headerRowHeight\", \"highlightField\", \"infiniteScroll\", \"infiniteScrollThreshold\", \"isTreeTable\", \"loading\", \"markNavigatedRow\", \"minRows\", \"noDataText\", \"overscanCount\", \"overscanCountHorizontal\", \"portalContainer\", \"retainColumnWidth\", \"reactTableOptions\", \"renderRowSubComponent\", \"rowHeight\", \"scaleWidthMode\", \"selectedRowIds\", \"selectionBehavior\", \"selectionMode\", \"showOverlay\", \"sortable\", \"style\", \"subRowsKey\", \"tableHooks\", \"tableInstance\", \"visibleRowCountMode\", \"visibleRows\", \"withNavigationHighlight\", \"withRowHighlight\", \"onColumnsReorder\", \"onGroup\", \"onLoadMore\", \"onRowClick\", \"onRowExpandChange\", \"onRowSelect\", \"onSort\", \"onTableScroll\", \"LoadingComponent\", \"NoDataComponent\", \"scaleXFactor\"]);\n    const uniqueId = useIsomorphicId();\n    const i18nBundle = useI18nBundle('@ui5/webcomponents-react');\n    const titleBarId = useRef(`titlebar-${uniqueId}`).current;\n    const invalidTableTextId = useRef(`invalidTableText-${uniqueId}`).current;\n    const classes = useStyles();\n    const [analyticalTableRef, scrollToRef] = useTableScrollHandles(ref);\n    const tableRef = useRef(null);\n    const isRtl = useIsRTL(analyticalTableRef);\n    const getSubRows = useCallback((row) => row.subRows || row[subRowsKey] || [], [subRowsKey]);\n    const data = useMemo(() => {\n        if (rawData.length === 0) {\n            return rawData;\n        }\n        if (minRows > rawData.length) {\n            const missingRows = minRows - rawData.length;\n            const emptyRows = Array.from({ length: missingRows }, (v, i) => i).map(() => ({ emptyRow: true }));\n            return [...rawData, ...emptyRows];\n        }\n        return rawData;\n    }, [rawData, minRows]);\n    const invalidTableA11yText = i18nBundle.getText(INVALID_TABLE);\n    const tableInstanceRef = useRef(null);\n    tableInstanceRef.current = useTable(Object.assign({ columns,\n        data, defaultColumn: DefaultColumn, orderByFn,\n        getSubRows,\n        stateReducer, disableFilters: !filterable, disableSortBy: !sortable, disableGroupBy: isTreeTable || renderRowSubComponent ? true : !groupable, selectSubRows: false, sortTypes: sortTypesFallback, webComponentsReactProperties: {\n            translatableTexts: {\n                expandA11yText: i18nBundle.getText(EXPAND_PRESS_SPACE),\n                collapseA11yText: i18nBundle.getText(COLLAPSE_PRESS_SPACE),\n                selectA11yText: i18nBundle.getText(SELECT_PRESS_SPACE),\n                unselectA11yText: i18nBundle.getText(UNSELECT_PRESS_SPACE),\n                expandNodeA11yText: i18nBundle.getText(EXPAND_NODE),\n                collapseNodeA11yText: i18nBundle.getText(COLLAPSE_NODE)\n            },\n            tagNamesWhichShouldNotSelectARow,\n            tableRef,\n            selectionMode,\n            selectionBehavior,\n            classes,\n            onRowSelect: onRowSelect,\n            onRowClick,\n            onRowExpandChange,\n            isTreeTable,\n            alternateRowColor,\n            scaleWidthMode,\n            loading,\n            withRowHighlight,\n            highlightField,\n            withNavigationHighlight,\n            markNavigatedRow,\n            renderRowSubComponent,\n            alwaysShowSubComponent,\n            scrollToRef,\n            showOverlay,\n            uniqueId,\n            scaleXFactor\n        } }, reactTableOptions), useFilters, useGlobalFilter, useColumnOrder, useGroupBy, useSortBy, useExpanded, useRowSelect, useResizeColumns, useResizeColumnsConfig, useRowSelectionColumn, useSingleRowStateSelection, useSelectionChangeCallback, useRowHighlight, useRowNavigationIndicators, useDynamicColumnWidths, useStyling, useToggleRowExpand, useA11y, usePopIn, useVisibleColumnsWidth, useKeyboardNavigation, ...tableHooks);\n    const { getTableProps, headerGroups, rows, prepareRow, state: tableState, columns: tableInternalColumns, setColumnOrder, dispatch, totalColumnsWidth, visibleColumns, visibleColumnsWidth, setGroupBy, setGlobalFilter } = tableInstanceRef.current;\n    if (tableInstance && {}.hasOwnProperty.call(tableInstance, 'current')) {\n        tableInstance.current = tableInstanceRef.current;\n    }\n    if (typeof tableInstance === 'function') {\n        tableInstance(tableInstanceRef.current);\n    }\n    const titleBarRef = useRef(null);\n    const extensionRef = useRef(null);\n    const headerRef = useRef(null);\n    const extensionsHeight = ((_b = (_a = titleBarRef.current) === null || _a === void 0 ? void 0 : _a.offsetHeight) !== null && _b !== void 0 ? _b : 0) +\n        ((_d = (_c = extensionRef.current) === null || _c === void 0 ? void 0 : _c.offsetHeight) !== null && _d !== void 0 ? _d : 0) +\n        ((_f = (_e = headerRef.current) === null || _e === void 0 ? void 0 : _e.offsetHeight) !== null && _f !== void 0 ? _f : 0);\n    const calcRowHeight = parseInt(getComputedStyle((_g = tableRef.current) !== null && _g !== void 0 ? _g : document.body).getPropertyValue('--sapWcrAnalyticalTableRowHeight') || '44');\n    const internalRowHeight = rowHeight !== null && rowHeight !== void 0 ? rowHeight : calcRowHeight;\n    const internalHeaderRowHeight = headerRowHeight !== null && headerRowHeight !== void 0 ? headerRowHeight : internalRowHeight;\n    const popInRowHeight = ((_h = tableState === null || tableState === void 0 ? void 0 : tableState.popInColumns) === null || _h === void 0 ? void 0 : _h.length) > 0\n        ? internalRowHeight + tableState.popInColumns.length * (internalRowHeight + 16)\n        : internalRowHeight;\n    const internalVisibleRowCount = (_j = tableState.visibleRows) !== null && _j !== void 0 ? _j : visibleRows;\n    const updateTableClientWidth = useCallback(() => {\n        if (tableRef.current) {\n            dispatch({ type: 'TABLE_RESIZE', payload: { tableClientWidth: tableRef.current.clientWidth } });\n        }\n    }, [tableRef.current]);\n    const updateRowsCount = useCallback(() => {\n        var _a, _b, _c, _d;\n        if (visibleRowCountMode === TableVisibleRowCountMode.Auto && ((_a = analyticalTableRef.current) === null || _a === void 0 ? void 0 : _a.parentElement)) {\n            const parentElement = (_b = analyticalTableRef.current) === null || _b === void 0 ? void 0 : _b.parentElement;\n            const tableYPosition = parentElement &&\n                getComputedStyle(parentElement).position === 'relative' &&\n                ((_c = analyticalTableRef.current) === null || _c === void 0 ? void 0 : _c.offsetTop)\n                ? (_d = analyticalTableRef.current) === null || _d === void 0 ? void 0 : _d.offsetTop\n                : 0;\n            const parentHeight = parentElement === null || parentElement === void 0 ? void 0 : parentElement.getBoundingClientRect().height;\n            const tableHeight = parentHeight ? parentHeight - tableYPosition : 0;\n            const rowCount = Math.max(1, Math.floor((tableHeight - extensionsHeight) / popInRowHeight));\n            dispatch({\n                type: 'VISIBLE_ROWS',\n                payload: { visibleRows: rowCount }\n            });\n        }\n    }, [\n        (_l = (_k = analyticalTableRef.current) === null || _k === void 0 ? void 0 : _k.parentElement) === null || _l === void 0 ? void 0 : _l.getBoundingClientRect().height,\n        (_m = analyticalTableRef.current) === null || _m === void 0 ? void 0 : _m.getBoundingClientRect().y,\n        extensionsHeight,\n        popInRowHeight,\n        visibleRowCountMode\n    ]);\n    useEffect(() => {\n        setGlobalFilter(globalFilterValue);\n    }, [globalFilterValue, setGlobalFilter]);\n    useEffect(() => {\n        var _a, _b;\n        const debouncedWidthObserverFn = debounce(updateTableClientWidth, 500);\n        const tableWidthObserver = new ResizeObserver(debouncedWidthObserverFn);\n        tableWidthObserver.observe(tableRef.current);\n        const debouncedHeightObserverFn = debounce(updateRowsCount, 500);\n        const parentHeightObserver = new ResizeObserver(debouncedHeightObserverFn);\n        if ((_a = analyticalTableRef.current) === null || _a === void 0 ? void 0 : _a.parentElement) {\n            parentHeightObserver.observe((_b = analyticalTableRef.current) === null || _b === void 0 ? void 0 : _b.parentElement);\n        }\n        return () => {\n            debouncedHeightObserverFn.cancel();\n            debouncedWidthObserverFn.cancel();\n            tableWidthObserver.disconnect();\n            parentHeightObserver.disconnect();\n        };\n    }, [updateTableClientWidth, updateRowsCount]);\n    useIsomorphicLayoutEffect(() => {\n        dispatch({ type: 'IS_RTL', payload: { isRtl } });\n    }, [isRtl]);\n    useIsomorphicLayoutEffect(() => {\n        updateTableClientWidth();\n    }, [updateTableClientWidth]);\n    useIsomorphicLayoutEffect(() => {\n        updateRowsCount();\n    }, [updateRowsCount]);\n    useEffect(() => {\n        if (tableState.visibleRows !== undefined && visibleRowCountMode === TableVisibleRowCountMode.Fixed) {\n            dispatch({\n                type: 'VISIBLE_ROWS',\n                payload: { visibleRows: undefined }\n            });\n        }\n    }, [visibleRowCountMode, tableState.visibleRows]);\n    useEffect(() => {\n        setGroupBy(groupBy);\n    }, [groupBy, setGroupBy]);\n    useEffect(() => {\n        dispatch({ type: 'SET_SELECTED_ROW_IDS', payload: { selectedRowIds } });\n    }, [selectedRowIds]);\n    useEffect(() => {\n        var _a;\n        if ((tableState === null || tableState === void 0 ? void 0 : tableState.interactiveRowsHavePopIn) && (!(tableState === null || tableState === void 0 ? void 0 : tableState.popInColumns) || ((_a = tableState === null || tableState === void 0 ? void 0 : tableState.popInColumns) === null || _a === void 0 ? void 0 : _a.length) === 0)) {\n            dispatch({ type: 'WITH_POPIN', payload: false });\n        }\n    }, [tableState === null || tableState === void 0 ? void 0 : tableState.interactiveRowsHavePopIn, (_o = tableState === null || tableState === void 0 ? void 0 : tableState.popInColumns) === null || _o === void 0 ? void 0 : _o.length]);\n    const tableBodyHeight = useMemo(() => {\n        const rowNum = rows.length < internalVisibleRowCount ? Math.max(rows.length, minRows) : internalVisibleRowCount;\n        const rowHeight = visibleRowCountMode === TableVisibleRowCountMode.Auto ||\n            (tableState === null || tableState === void 0 ? void 0 : tableState.interactiveRowsHavePopIn) ||\n            adjustTableHeightOnPopIn\n            ? popInRowHeight\n            : internalRowHeight;\n        return rowHeight * rowNum;\n    }, [\n        internalRowHeight,\n        rows.length,\n        internalVisibleRowCount,\n        minRows,\n        popInRowHeight,\n        visibleRowCountMode,\n        tableState === null || tableState === void 0 ? void 0 : tableState.interactiveRowsHavePopIn,\n        adjustTableHeightOnPopIn\n    ]);\n    // scroll bar detection\n    useEffect(() => {\n        const visibleRowCount = rows.length < internalVisibleRowCount ? Math.max(rows.length, minRows) : internalVisibleRowCount;\n        if (popInRowHeight !== internalRowHeight) {\n            dispatch({\n                type: 'TABLE_SCROLLING_ENABLED',\n                payload: { isScrollable: visibleRowCount * popInRowHeight > tableBodyHeight || rows.length > visibleRowCount }\n            });\n        }\n        else {\n            dispatch({ type: 'TABLE_SCROLLING_ENABLED', payload: { isScrollable: rows.length > visibleRowCount } });\n        }\n    }, [rows.length, minRows, internalVisibleRowCount, popInRowHeight, tableBodyHeight]);\n    const noDataStyles = {\n        height: `${tableBodyHeight}px`,\n        width: totalColumnsWidth ? `${totalColumnsWidth}px` : '100%'\n    };\n    const onGroupByChanged = useCallback((e) => {\n        const { column, isGrouped } = e.detail;\n        let groupedColumns = [];\n        if (isGrouped) {\n            groupedColumns = [...tableState.groupBy, column.id];\n        }\n        else {\n            groupedColumns = tableState.groupBy.filter((group) => group !== column.id);\n        }\n        setGroupBy(groupedColumns);\n        onGroup(enrichEventWithDetails(e, {\n            column,\n            groupedColumns\n        }));\n    }, [tableState.groupBy, onGroup, setGroupBy]);\n    useEffect(() => {\n        if ((columnOrder === null || columnOrder === void 0 ? void 0 : columnOrder.length) > 0) {\n            setColumnOrder(columnOrder);\n        }\n    }, [columnOrder]);\n    const [dragOver, handleDragEnter, handleDragStart, handleDragOver, handleOnDrop, handleOnDragEnd] = useDragAndDrop(onColumnsReorder, isRtl, setColumnOrder, tableState.columnOrder, tableState.columnResizing, tableInternalColumns);\n    const inlineStyle = useMemo(() => {\n        const tableStyles = {\n            maxWidth: '100%',\n            overflowX: 'auto',\n            display: 'flex',\n            flexDirection: 'column'\n        };\n        if (!!rowHeight) {\n            tableStyles['--sapWcrAnalyticalTableRowHeight'] = `${rowHeight}px`;\n            tableStyles['--sapWcrAnalyticalTableHeaderRowHeight'] = `${rowHeight}px`;\n        }\n        if (!!headerRowHeight) {\n            tableStyles['--sapWcrAnalyticalTableHeaderRowHeight'] = `${headerRowHeight}px`;\n        }\n        if (tableState.tableClientWidth > 0) {\n            return Object.assign(Object.assign({}, tableStyles), style);\n        }\n        return Object.assign(Object.assign(Object.assign({}, tableStyles), style), { visibility: 'hidden' });\n    }, [tableState.tableClientWidth, style, rowHeight, headerRowHeight]);\n    useEffect(() => {\n        var _a;\n        if (retainColumnWidth && ((_a = tableState.columnResizing) === null || _a === void 0 ? void 0 : _a.isResizingColumn) && tableState.tableColResized == null) {\n            dispatch({ type: 'TABLE_COL_RESIZED', payload: true });\n        }\n        if (tableState.tableColResized && !retainColumnWidth) {\n            dispatch({ type: 'TABLE_COL_RESIZED', payload: undefined });\n        }\n    }, [tableState.columnResizing, retainColumnWidth, tableState.tableColResized]);\n    const parentRef = useRef(null);\n    const verticalScrollBarRef = useRef(null);\n    const handleBodyScroll = (e) => {\n        if (typeof onTableScroll === 'function') {\n            onTableScroll(e);\n        }\n        if (verticalScrollBarRef.current && verticalScrollBarRef.current.scrollTop !== parentRef.current.scrollTop) {\n            if (!parentRef.current.isExternalVerticalScroll) {\n                verticalScrollBarRef.current.scrollTop = parentRef.current.scrollTop;\n                verticalScrollBarRef.current.isExternalVerticalScroll = true;\n            }\n            parentRef.current.isExternalVerticalScroll = false;\n        }\n    };\n    const handleVerticalScrollBarScroll = () => {\n        if (!verticalScrollBarRef.current.isExternalVerticalScroll) {\n            parentRef.current.scrollTop = verticalScrollBarRef.current.scrollTop;\n            parentRef.current.isExternalVerticalScroll = true;\n        }\n        verticalScrollBarRef.current.isExternalVerticalScroll = false;\n    };\n    const tableClasses = clsx(classes.table, GlobalStyleClasses.sapScrollBar, withNavigationHighlight && classes.hasNavigationIndicator);\n    const columnVirtualizer = useVirtualizer({\n        count: visibleColumnsWidth.length,\n        getScrollElement: () => tableRef.current,\n        estimateSize: useCallback((index) => {\n            return visibleColumnsWidth[index];\n        }, [visibleColumnsWidth]),\n        horizontal: true,\n        overscan: overscanCountHorizontal\n    });\n    scrollToRef.current = Object.assign(Object.assign({}, scrollToRef.current), { horizontalScrollToOffset: columnVirtualizer.scrollToOffset, horizontalScrollToIndex: columnVirtualizer.scrollToIndex });\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", Object.assign({ className: className, style: inlineStyle, ref: analyticalTableRef }, rest),\n            header && (React.createElement(TitleBar, { ref: titleBarRef, titleBarId: titleBarId }, header)),\n            extension && React.createElement(\"div\", { ref: extensionRef }, extension),\n            React.createElement(FlexBox, { className: classes.tableContainerWithScrollBar, \"data-component-name\": \"AnalyticalTableContainerWithScrollbar\" },\n                showOverlay && (React.createElement(React.Fragment, null,\n                    React.createElement(\"span\", { id: invalidTableTextId, className: classes.hiddenA11yText, \"aria-hidden\": true }, invalidTableA11yText),\n                    React.createElement(\"div\", { tabIndex: 0, \"aria-labelledby\": `${titleBarId} ${invalidTableTextId}`, role: \"region\", \"data-component-name\": \"AnalyticalTableOverlay\", className: classes.overlay }))),\n                React.createElement(\"div\", Object.assign({ \"aria-labelledby\": titleBarId }, getTableProps(), { tabIndex: showOverlay ? -1 : 0, role: \"grid\", \"aria-rowcount\": rows.length, \"aria-colcount\": visibleColumns.length, \"data-per-page\": internalVisibleRowCount, \"data-component-name\": \"AnalyticalTableContainer\", ref: tableRef, \"data-native-scrollbar\": props['data-native-scrollbar'], className: tableClasses }),\n                    React.createElement(\"div\", { className: classes.tableHeaderBackgroundElement }),\n                    React.createElement(\"div\", { className: classes.tableBodyBackgroundElement }),\n                    headerGroups.map((headerGroup) => {\n                        let headerProps = {};\n                        if (headerGroup.getHeaderGroupProps) {\n                            headerProps = headerGroup.getHeaderGroupProps();\n                        }\n                        return (tableRef.current && (React.createElement(ColumnHeaderContainer, { ref: headerRef, key: headerProps.key, resizeInfo: tableState.columnResizing, headerProps: headerProps, headerGroup: headerGroup, onSort: onSort, onGroupByChanged: onGroupByChanged, onDragStart: handleDragStart, onDragOver: handleDragOver, onDrop: handleOnDrop, onDragEnter: handleDragEnter, onDragEnd: handleOnDragEnd, dragOver: dragOver, isRtl: isRtl, portalContainer: portalContainer, uniqueId: uniqueId, columnVirtualizer: columnVirtualizer, scaleXFactor: scaleXFactor })));\n                    }),\n                    loading && (rawData === null || rawData === void 0 ? void 0 : rawData.length) > 0 && React.createElement(LoadingComponent, { style: { width: `${totalColumnsWidth}px` } }),\n                    loading && (rawData === null || rawData === void 0 ? void 0 : rawData.length) === 0 && (React.createElement(TablePlaceholder, { columns: visibleColumns, rows: minRows, style: noDataStyles })),\n                    !loading && (rawData === null || rawData === void 0 ? void 0 : rawData.length) === 0 && (React.createElement(NoDataComponent, { noDataText: noDataText, className: classes.noDataContainer, style: noDataStyles })),\n                    (rawData === null || rawData === void 0 ? void 0 : rawData.length) > 0 && tableRef.current && (React.createElement(VirtualTableBodyContainer, { tableBodyHeight: tableBodyHeight, totalColumnsWidth: totalColumnsWidth, parentRef: parentRef, classes: classes, infiniteScroll: infiniteScroll, infiniteScrollThreshold: infiniteScrollThreshold, onLoadMore: onLoadMore, internalRowHeight: internalRowHeight, popInRowHeight: popInRowHeight, rows: rows, handleExternalScroll: handleBodyScroll, visibleRows: internalVisibleRowCount, dataLength: data === null || data === void 0 ? void 0 : data.length },\n                        React.createElement(VirtualTableBody, { classes: classes, prepareRow: prepareRow, rows: rows, minRows: minRows, scrollToRef: scrollToRef, isTreeTable: isTreeTable, internalRowHeight: internalRowHeight, popInRowHeight: popInRowHeight, visibleRows: internalVisibleRowCount, alternateRowColor: alternateRowColor, overscanCount: overscanCount, parentRef: parentRef, visibleColumns: visibleColumns, renderRowSubComponent: renderRowSubComponent, alwaysShowSubComponent: alwaysShowSubComponent, markNavigatedRow: markNavigatedRow, isRtl: isRtl, subComponentsHeight: tableState.subComponentsHeight, dispatch: dispatch, columnVirtualizer: columnVirtualizer })))),\n                (tableState.isScrollable === undefined || tableState.isScrollable) && (React.createElement(VerticalScrollbar, { tableBodyHeight: tableBodyHeight, internalRowHeight: internalHeaderRowHeight, popInRowHeight: popInRowHeight, tableRef: tableRef, minRows: minRows, rows: rows, handleVerticalScrollBarScroll: handleVerticalScrollBarScroll, ref: verticalScrollBarRef, \"data-native-scrollbar\": props['data-native-scrollbar'] }))),\n            visibleRowCountMode === TableVisibleRowCountMode.Interactive && (React.createElement(VerticalResizer, { popInRowHeight: popInRowHeight, hasPopInColumns: ((_p = tableState === null || tableState === void 0 ? void 0 : tableState.popInColumns) === null || _p === void 0 ? void 0 : _p.length) > 0, analyticalTableRef: analyticalTableRef, dispatch: dispatch, extensionsHeight: extensionsHeight, internalRowHeight: internalRowHeight, portalContainer: portalContainer }))),\n        React.createElement(Text, { \"aria-hidden\": \"true\", id: `smartScaleModeHelper-${uniqueId}`, className: classes.hiddenSmartColMeasure }, '')));\n});\nAnalyticalTable.displayName = 'AnalyticalTable';\nAnalyticalTable.defaultProps = {\n    infiniteScrollThreshold: 20,\n    loading: false,\n    sortable: true,\n    filterable: false,\n    groupable: false,\n    selectionMode: TableSelectionMode.None,\n    selectionBehavior: TableSelectionBehavior.Row,\n    scaleWidthMode: TableScaleWidthMode.Default,\n    data: [],\n    columns: [],\n    minRows: 5,\n    groupBy: [],\n    NoDataComponent: DefaultNoDataComponent,\n    LoadingComponent: DefaultLoadingComponent,\n    noDataText: 'No Data',\n    reactTableOptions: {},\n    tableHooks: [],\n    visibleRows: 15,\n    subRowsKey: 'subRows',\n    highlightField: 'status',\n    markNavigatedRow: () => false,\n    selectedRowIds: {},\n    onGroup: () => { },\n    onRowExpandChange: () => { },\n    isTreeTable: false,\n    alternateRowColor: false,\n    overscanCountHorizontal: 5,\n    visibleRowCountMode: TableVisibleRowCountMode.Fixed,\n    alwaysShowSubComponent: false,\n    portalContainer: document.body\n};\nexport { AnalyticalTable };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}