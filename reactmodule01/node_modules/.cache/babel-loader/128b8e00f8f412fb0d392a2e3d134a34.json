{"ast":null,"code":"import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport ItemNavigation from \"@ui5/webcomponents-base/dist/delegate/ItemNavigation.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport { isEnter, isSpace } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport { isChrome } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport { AVATAR_GROUP_DISPLAYED_HIDDEN_LABEL, AVATAR_GROUP_SHOW_COMPLETE_LIST_LABEL, AVATAR_GROUP_ARIA_LABEL_INDIVIDUAL, AVATAR_GROUP_ARIA_LABEL_GROUP, AVATAR_GROUP_MOVE } from \"./generated/i18n/i18n-defaults.js\";\n\n// Template\nimport AvatarGroupTemplate from \"./generated/templates/AvatarGroupTemplate.lit.js\";\n// Styles\nimport AvatarGroupCss from \"./generated/themes/AvatarGroup.css.js\";\nimport Button from \"./Button.js\";\nimport AvatarSize from \"./types/AvatarSize.js\";\nimport AvatarGroupType from \"./types/AvatarGroupType.js\";\nimport AvatarColorScheme from \"./types/AvatarColorScheme.js\";\nconst OVERFLOW_BTN_CLASS = \"ui5-avatar-group-overflow-btn\";\nconst AVATAR_GROUP_OVERFLOW_BTN_SELECTOR = `.${OVERFLOW_BTN_CLASS}`;\n\n// based on RTL/LTR a margin-left/right is set respectfully\nconst offsets = {\n  [AvatarSize.XS]: {\n    [AvatarGroupType.Individual]: \"0.0625rem\",\n    [AvatarGroupType.Group]: \"-0.75rem\"\n  },\n  [AvatarSize.S]: {\n    [AvatarGroupType.Individual]: \"0.125rem\",\n    [AvatarGroupType.Group]: \"-1.25rem\"\n  },\n  [AvatarSize.M]: {\n    [AvatarGroupType.Individual]: \"0.125rem\",\n    [AvatarGroupType.Group]: \"-1.625rem\"\n  },\n  [AvatarSize.L]: {\n    [AvatarGroupType.Individual]: \"0.125rem\",\n    [AvatarGroupType.Group]: \" -2rem\"\n  },\n  [AvatarSize.XL]: {\n    [AvatarGroupType.Individual]: \"0.25rem\",\n    [AvatarGroupType.Group]: \"-2.75rem\"\n  }\n};\n\n/**\n * @public\n */\nconst metadata = {\n  tag: \"ui5-avatar-group\",\n  managedSlots: true,\n  properties: /** @lends sap.ui.webcomponents.main.AvatarGroup.prototype */{\n    /**\n    \t * Defines the mode of the <code>AvatarGroup</code>.\n     * <br><br>\n     * Available options are:\n     * <ul>\n     * <li><code>Group</code></li>\n     * <li><code>Individual</code></li>\n     * </ul>\n     * @type {sap.ui.webcomponents.main.types.AvatarGroupType}\n     * @defaultValue \"Group\"\n     * @public\n     */\n    type: {\n      type: AvatarGroupType,\n      defaultValue: AvatarGroupType.Group\n    },\n    /**\n     * Defines the aria-haspopup value of the component on:\n     * <br><br>\n     * <ul>\n     * <li> the whole container when <code>type</code> property is <code>Group</code></li>\n     * <li> the default \"More\" overflow button when <code>type</code> is <code>Individual</code></li>\n     * </ul>\n     * <br><br>\n     * @type String\n     * @since 1.0.0-rc.15\n     * @protected\n     */\n    ariaHaspopup: {\n      type: String\n    },\n    /**\n     * @private\n     */\n    _overflowButtonText: {\n      type: String,\n      noAttribute: true\n    }\n  },\n  slots: /** @lends sap.ui.webcomponents.main.AvatarGroup.prototype */{\n    /**\n     * Defines the items of the component. Use the <code>ui5-avatar</code> component as an item.\n     * <br><br>\n     * <b>Note:</b> The UX guidelines recommends using avatars with \"Circle\" shape.\n     * Moreover, if you use avatars with \"Square\" shape, there will be visual inconsistency\n     * as the built-in overflow action has \"Circle\" shape.\n     * @type {sap.ui.webcomponents.main.IAvatar[]}\n     * @slot items\n     * @public\n     */\n    \"default\": {\n      type: HTMLElement,\n      propertyName: \"items\"\n    },\n    /**\n     * Defines the overflow button of the component.\n     * <b>Note:</b> We recommend using the <code>ui5-button</code> component.\n     * <br><br>\n     * <b>Note:</b> If this slot is not used, the component will\n     * display the built-in overflow button.\n     * @type {HTMLElement}\n     * @slot overflowButton\n     * @public\n     * @since 1.0.0-rc.13\n     */\n    overflowButton: {\n      type: HTMLElement\n    }\n  },\n  events: /** @lends sap.ui.webcomponents.main.AvatarGroup.prototype */{\n    /**\n    * Fired when the component is activated either with a\n    * click/tap or by using the Enter or Space key.\n    * @param {HTMLElement} targetRef The DOM ref of the clicked item.\n    * @param {boolean} overflowButtonClicked indicates if the overflow button is clicked\n    * @event\n    * @public\n    * @since 1.0.0-rc.11\n    */\n    click: {\n      detail: {\n        targetRef: {\n          type: HTMLElement\n        },\n        overflowButtonClicked: {\n          type: Boolean\n        }\n      }\n    },\n    /**\n    * Fired when the count of visible <code>ui5-avatar</code> elements in the\n    * component has changed\n    * @event\n    * @public\n    * @since 1.0.0-rc.13\n    */\n    overflow: {}\n  }\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * Displays a group of avatars arranged horizontally. It is useful to visually\n * showcase a group of related avatars, such as, project team members or employees.\n *\n * The component allows you to display the avatars in different sizes,\n * depending on your use case.\n *\n * The <code>AvatarGroup</code> component has two group types:\n * <ul>\n * <li><code>Group</code> type: The avatars are displayed as partially overlapped on\n * top of each other and the entire group has one click/tap area.</li>\n * <li><code>Individual</code> type: The avatars are displayed side-by-side and each\n * avatar has its own click/tap area.</li>\n * </ul>\n *\n * <h3>Responsive Behavior</h3>\n *\n * When the available space is less than the width required to display all avatars,\n * an overflow visualization appears as a button placed at the end with the same shape\n * and size as the avatars. The visualization displays the number of avatars that have overflowed\n * and are not currently visible.\n *\n * <h3>Usage</h3>\n *\n * Use the <code>AvatarGroup</code> if:\n * <ul>\n * <li>You want to display a group of avatars.</li>\n * <li>You want to display several avatars which have something in common.</li>\n * </ul>\n *\n * Do not use the <code>AvatarGroup</code> if:\n * <ul>\n * <li>You want to display a single avatar.</li>\n * <li>You want to display a gallery for simple images.</li>\n * <li>You want to use it for other visual content than avatars.</li>\n * </ul>\n *\n * <h3>Keyboard Handling</h3>\n * The component provides advanced keyboard handling.\n * When focused, the user can use the following keyboard\n * shortcuts in order to perform a navigation:\n * <br>\n * - <code>type</code> Individual:\n * <br>\n * <ul>\n * <li>[TAB] - Move focus to the overflow button</li>\n * <li>[LEFT] - Navigate one avatar to the left</li>\n * <li>[RIGHT] - Navigate one avatar to the right</li>\n * <li>[HOME] - Navigate to the first avatar</li>\n * <li>[END] - Navigate to the last avatar</li>\n * <li>[SPACE],[ENTER],[RETURN] - Trigger <code>ui5-click</code> event</li>\n * </ul>\n * <br>\n * - <code>type</code> Group:\n * <br>\n * <ul>\n * <li>[TAB] - Move focus to the next interactive element after the component</li>\n * <li>[SPACE],[ENTER],[RETURN] - Trigger <code>ui5-click</code> event</li>\n * </ul>\n * <br>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.AvatarGroup\n * @extends sap.ui.webcomponents.base.UI5Element\n * @tagname ui5-avatar-group\n * @since 1.0.0-rc.11\n * @public\n */\nclass AvatarGroup extends UI5Element {\n  constructor() {\n    super();\n    this._itemNavigation = new ItemNavigation(this, {\n      getItemsCallback: () => {\n        return this._isGroup ? [] : this.items.slice(0, this._hiddenStartIndex);\n      }\n    });\n    this._colorIndex = 0;\n    this._hiddenItems = 0;\n    this._onResizeHandler = this._onResize.bind(this);\n  }\n  static get metadata() {\n    return metadata;\n  }\n  static get render() {\n    return litRender;\n  }\n  static get template() {\n    return AvatarGroupTemplate;\n  }\n  static get styles() {\n    return AvatarGroupCss;\n  }\n  static get dependencies() {\n    return [Button];\n  }\n  static async onDefine() {\n    AvatarGroup.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n  }\n\n  /**\n   * Returns an array containing the <code>ui5-avatar</code> instances that are currently not displayed due to lack of space.\n   * @readonly\n   * @type {HTMLElement[]}\n   * @defaultValue []\n   * @public\n   */\n  get hiddenItems() {\n    return this.items.slice(this._hiddenStartIndex);\n  }\n\n  /**\n   * Returns an array containing the <code>AvatarColorScheme</code> values that correspond to the avatars in the component.\n   * @readonly\n   * @type {sap.ui.webcomponents.main.types.AvatarColorScheme[]}\n   * @defaultValue []\n   * @public\n   */\n  get colorScheme() {\n    return this.items.map(avatar => avatar._effectiveBackgroundColor);\n  }\n  get _customOverflowButton() {\n    return this.overflowButton.length ? this.overflowButton[0] : undefined;\n  }\n  get _ariaLabelText() {\n    const hiddenItemsCount = this.hiddenItems.length;\n    const typeLabelKey = this._isGroup ? AVATAR_GROUP_ARIA_LABEL_GROUP : AVATAR_GROUP_ARIA_LABEL_INDIVIDUAL;\n\n    // avatar type label\n    let text = AvatarGroup.i18nBundle.getText(typeLabelKey);\n\n    // add displayed-hidden avatars label\n    text += ` ${AvatarGroup.i18nBundle.getText(AVATAR_GROUP_DISPLAYED_HIDDEN_LABEL, this._itemsCount - hiddenItemsCount, hiddenItemsCount)}`;\n    if (this._isGroup) {\n      // the container role is \"button\", add the message for complete list activation\n      text += ` ${AvatarGroup.i18nBundle.getText(AVATAR_GROUP_SHOW_COMPLETE_LIST_LABEL)}`;\n    } else {\n      // the container role is \"group\", add the \"how to navigate\" message\n      text += ` ${AvatarGroup.i18nBundle.getText(AVATAR_GROUP_MOVE)}`;\n    }\n    return text;\n  }\n  get _overflowButtonAriaLabelText() {\n    return this._isGroup ? undefined : AvatarGroup.i18nBundle.getText(AVATAR_GROUP_SHOW_COMPLETE_LIST_LABEL);\n  }\n  get _containerAriaHasPopup() {\n    return this._isGroup ? this._getAriaHasPopup() : undefined;\n  }\n  get _overflowButtonAccAttributes() {\n    return {\n      hasPopup: this._isGroup ? undefined : this._getAriaHasPopup()\n    };\n  }\n  get _role() {\n    return this._isGroup ? \"button\" : \"group\";\n  }\n  get _hiddenStartIndex() {\n    return this._itemsCount - this._hiddenItems;\n  }\n  get _overflowBtnHidden() {\n    return this._hiddenItems === 0;\n  }\n  get _isGroup() {\n    return this.type === AvatarGroupType.Group;\n  }\n  get _itemsCount() {\n    return this.items.length;\n  }\n  get _groupTabIndex() {\n    return this._isGroup ? \"0\" : \"-1\";\n  }\n  get _overflowButton() {\n    return this.shadowRoot.querySelector(AVATAR_GROUP_OVERFLOW_BTN_SELECTOR);\n  }\n\n  /**\n   * Return the effective overflow button width\n   * Differences are that when in \"Group\" type the button is offset and overlaps the avatars\n   *\n   * 1) In case of \"Group\", (LTR/RTL aware) button width is qual to second item offset left/right\n   * 2) In case of \"Individual\" group type width is directly taken from button element\n   * @private\n   */\n  get _overflowButtonEffectiveWidth() {\n    const button = this._customOverflowButton ? this._customOverflowButton : this._overflowButton;\n    // if in \"Group\" mode overflow button size is equal to the offset from second item\n    if (this._isGroup) {\n      let item = this.items[1];\n      let ltrEffectiveWidth;\n\n      // in some cases when second avatar is overflowed the offset of the button is the right one\n      if (!item || item.hidden) {\n        item = button;\n      }\n      ltrEffectiveWidth = item.offsetLeft;\n      if (!isChrome()) {\n        // additional subtractions required for non-Chromium browsers\n        ltrEffectiveWidth = item.offsetLeft - this.offsetLeft;\n      }\n      return this.effectiveDir === \"rtl\" ? this._getWidthToItem(item) : ltrEffectiveWidth;\n    }\n    return button.offsetWidth;\n  }\n  get firstAvatarSize() {\n    return this.items[0].size;\n  }\n  get classes() {\n    return {\n      overflowButton: {\n        \"ui5-avatar-group-overflow-btn\": true,\n        \"ui5-avatar-group-overflow-btn-xs\": this.firstAvatarSize === \"XS\",\n        \"ui5-avatar-group-overflow-btn-s\": this.firstAvatarSize === \"S\",\n        \"ui5-avatar-group-overflow-btn-m\": this.firstAvatarSize === \"M\",\n        \"ui5-avatar-group-overflow-btn-l\": this.firstAvatarSize === \"L\",\n        \"ui5-avatar-group-overflow-btn-xl\": this.firstAvatarSize === \"XL\"\n      }\n    };\n  }\n  onAfterRendering() {\n    this._overflowItems();\n  }\n  onBeforeRendering() {\n    if (this._customOverflowButton) {\n      this._customOverflowButton.nonInteractive = this._isGroup;\n    }\n    this._prepareAvatars();\n  }\n  onEnterDOM() {\n    ResizeHandler.register(this, this._onResizeHandler);\n  }\n  onExitDOM() {\n    ResizeHandler.deregister(this, this._onResizeHandler);\n  }\n  _onResize() {\n    this._overflowItems();\n  }\n  _onkeydown(event) {\n    // when type is \"Individual\" the ui5-avatar and ui5-button both\n    // fire \"click\" event when SPACE or ENTER are pressed and\n    // AvatarGroup \"click\" is fired in their handlers (_onClick, _onUI5Click).\n    if (this._isGroup) {\n      if (isEnter(event)) {\n        this._fireGroupEvent(event.target);\n      } else if (isSpace(event)) {\n        // prevent scrolling\n        event.preventDefault();\n      }\n    }\n  }\n  _onkeyup(event) {\n    if (!event.shiftKey && isSpace(event) && this._isGroup) {\n      this._fireGroupEvent(event.target);\n      event.preventDefault();\n    }\n  }\n  _fireGroupEvent(targetRef) {\n    const isOverflowButtonClicked = targetRef.classList.contains(OVERFLOW_BTN_CLASS) || targetRef === this._customOverflowButton;\n    this.fireEvent(\"click\", {\n      targetRef,\n      overflowButtonClicked: isOverflowButtonClicked\n    });\n  }\n  _onClick(event) {\n    // no matter the value of noConflict, the ui5-button and the group container (div) always fire a native click event\n    const isButton = event.target.hasAttribute(\"ui5-button\");\n    event.stopPropagation();\n    if (this._isGroup || isButton) {\n      this._fireGroupEvent(event.target);\n    }\n  }\n  _onUI5Click(event) {\n    // when noConflict=true only ui5-avatar will fire ui5-click event\n    const isAvatar = event.target.hasAttribute(\"ui5-avatar\");\n    event.stopPropagation();\n    if (isAvatar) {\n      this._fireGroupEvent(event.target);\n    }\n  }\n\n  /**\n   * Modifies avatars to the needs of avatar group properties. Respects already set size and background color.\n   * Set the margins (offsets) based on RTL/LTR.\n   * @private\n   */\n  _prepareAvatars() {\n    const RTL = this.effectiveDir === \"rtl\";\n    this._colorIndex = 0;\n    this.items.forEach((avatar, index) => {\n      const colorIndex = this._getNextBackgroundColor();\n      avatar.interactive = !this._isGroup;\n      if (!avatar.getAttribute(\"_color-scheme\")) {\n        // AvatarGroup respects colors set to ui5-avatar\n        avatar.setAttribute(\"_color-scheme\", AvatarColorScheme[`Accent${colorIndex}`]);\n      }\n\n      // last avatar should not be offset as it breaks the container width and focus styles are no set correctly\n      if (index !== this._itemsCount - 1 || this._customOverflowButton) {\n        // based on RTL margin left or right is set to avatars\n        avatar.style[`margin-${RTL ? \"left\" : \"right\"}`] = offsets[avatar._effectiveSize][this.type];\n      }\n    });\n  }\n  _onfocusin(event) {\n    const target = event.target;\n    this._itemNavigation.setCurrentItem(target);\n  }\n\n  /**\n   * Returns the total width to item excluding the item width\n   * RTL/LTR aware\n   * @private\n   * @param {HTMLElement} item\n   */\n  _getWidthToItem(item) {\n    const isRTL = this.effectiveDir === \"rtl\";\n    let ltrWidthToItem;\n    if (isRTL) {\n      // in RTL the total width is equal to difference of the parent container width and\n      // how much is the item offset to the left minus its offsetWidth\n      return item.offsetParent.offsetWidth - item.offsetLeft - item.offsetWidth;\n    }\n\n    // in LTR the width is equal to item.offsetLeft\n    ltrWidthToItem = item.offsetLeft;\n    if (!isChrome()) {\n      // for non-Chromium browsers offsetLeft may differ\n      // to normalize it, the Avatar Group's offset-left is subtracted\n      ltrWidthToItem = item.offsetLeft - this.offsetLeft;\n    }\n    return ltrWidthToItem;\n  }\n\n  /**\n   * Overflows items that were not able to fit the container\n   * @private\n   */\n  _overflowItems() {\n    if (this.items.length < 2) {\n      // no need to overflow avatars\n      return;\n    }\n    let hiddenItems = 0;\n    for (let index = 0; index < this._itemsCount; index++) {\n      const item = this.items[index];\n\n      // show item to determine if it will fit the new container size\n      item.hidden = false;\n\n      // container width to current item + item width (avatar)\n      // used to determine whether the following items will fit the container or not\n      let totalWidth = this._getWidthToItem(item) + item.offsetWidth;\n      if (index !== this._itemsCount - 1 || this._customOverflowButton) {\n        totalWidth += this._overflowButtonEffectiveWidth;\n      }\n      if (totalWidth > this.offsetWidth) {\n        hiddenItems = this._itemsCount - index;\n        break;\n      }\n    }\n\n    // hide the items that did not fit the container size\n    this._setHiddenItems(hiddenItems);\n  }\n  _getNextBackgroundColor() {\n    // counter is to automatically assign background colors to avatars, `Accent10` is the highest color value\n    if (++this._colorIndex > 10) {\n      this._colorIndex = 1;\n    }\n    return this._colorIndex;\n  }\n  _setHiddenItems(hiddenItems) {\n    const shouldFireEvent = this._hiddenItems !== hiddenItems;\n    this._hiddenItems = hiddenItems;\n    this.items.forEach((item, index) => {\n      item.hidden = index >= this._hiddenStartIndex;\n    });\n    this._overflowButtonText = `+${hiddenItems > 99 ? 99 : hiddenItems}`;\n    if (shouldFireEvent) {\n      this.fireEvent(\"overflow\");\n    }\n  }\n  _getAriaHasPopup() {\n    if (this.ariaHaspopup === \"\") {\n      return;\n    }\n    return this.ariaHaspopup;\n  }\n}\nAvatarGroup.define();\nexport default AvatarGroup;","map":{"version":3,"names":["UI5Element","litRender","ResizeHandler","ItemNavigation","getI18nBundle","isEnter","isSpace","isChrome","AVATAR_GROUP_DISPLAYED_HIDDEN_LABEL","AVATAR_GROUP_SHOW_COMPLETE_LIST_LABEL","AVATAR_GROUP_ARIA_LABEL_INDIVIDUAL","AVATAR_GROUP_ARIA_LABEL_GROUP","AVATAR_GROUP_MOVE","AvatarGroupTemplate","AvatarGroupCss","Button","AvatarSize","AvatarGroupType","AvatarColorScheme","OVERFLOW_BTN_CLASS","AVATAR_GROUP_OVERFLOW_BTN_SELECTOR","offsets","XS","Individual","Group","S","M","L","XL","metadata","tag","managedSlots","properties","type","defaultValue","ariaHaspopup","String","_overflowButtonText","noAttribute","slots","HTMLElement","propertyName","overflowButton","events","click","detail","targetRef","overflowButtonClicked","Boolean","overflow","AvatarGroup","constructor","_itemNavigation","getItemsCallback","_isGroup","items","slice","_hiddenStartIndex","_colorIndex","_hiddenItems","_onResizeHandler","_onResize","bind","render","template","styles","dependencies","onDefine","i18nBundle","hiddenItems","colorScheme","map","avatar","_effectiveBackgroundColor","_customOverflowButton","length","undefined","_ariaLabelText","hiddenItemsCount","typeLabelKey","text","getText","_itemsCount","_overflowButtonAriaLabelText","_containerAriaHasPopup","_getAriaHasPopup","_overflowButtonAccAttributes","hasPopup","_role","_overflowBtnHidden","_groupTabIndex","_overflowButton","shadowRoot","querySelector","_overflowButtonEffectiveWidth","button","item","ltrEffectiveWidth","hidden","offsetLeft","effectiveDir","_getWidthToItem","offsetWidth","firstAvatarSize","size","classes","onAfterRendering","_overflowItems","onBeforeRendering","nonInteractive","_prepareAvatars","onEnterDOM","register","onExitDOM","deregister","_onkeydown","event","_fireGroupEvent","target","preventDefault","_onkeyup","shiftKey","isOverflowButtonClicked","classList","contains","fireEvent","_onClick","isButton","hasAttribute","stopPropagation","_onUI5Click","isAvatar","RTL","forEach","index","colorIndex","_getNextBackgroundColor","interactive","getAttribute","setAttribute","style","_effectiveSize","_onfocusin","setCurrentItem","isRTL","ltrWidthToItem","offsetParent","totalWidth","_setHiddenItems","shouldFireEvent","define"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/node_modules/@ui5/webcomponents/dist/AvatarGroup.js"],"sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport ItemNavigation from \"@ui5/webcomponents-base/dist/delegate/ItemNavigation.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\n\nimport {\n\tisEnter,\n\tisSpace,\n} from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport { isChrome } from \"@ui5/webcomponents-base/dist/Device.js\";\n\nimport {\n\tAVATAR_GROUP_DISPLAYED_HIDDEN_LABEL,\n\tAVATAR_GROUP_SHOW_COMPLETE_LIST_LABEL,\n\tAVATAR_GROUP_ARIA_LABEL_INDIVIDUAL,\n\tAVATAR_GROUP_ARIA_LABEL_GROUP,\n\tAVATAR_GROUP_MOVE,\n} from \"./generated/i18n/i18n-defaults.js\";\n\n// Template\nimport AvatarGroupTemplate from \"./generated/templates/AvatarGroupTemplate.lit.js\";\n// Styles\nimport AvatarGroupCss from \"./generated/themes/AvatarGroup.css.js\";\n\nimport Button from \"./Button.js\";\nimport AvatarSize from \"./types/AvatarSize.js\";\nimport AvatarGroupType from \"./types/AvatarGroupType.js\";\nimport AvatarColorScheme from \"./types/AvatarColorScheme.js\";\n\nconst OVERFLOW_BTN_CLASS = \"ui5-avatar-group-overflow-btn\";\nconst AVATAR_GROUP_OVERFLOW_BTN_SELECTOR = `.${OVERFLOW_BTN_CLASS}`;\n\n// based on RTL/LTR a margin-left/right is set respectfully\nconst offsets = {\n\t[AvatarSize.XS]: {\n\t\t[AvatarGroupType.Individual]: \"0.0625rem\",\n\t\t[AvatarGroupType.Group]: \"-0.75rem\",\n\t},\n\t[AvatarSize.S]: {\n\t\t[AvatarGroupType.Individual]: \"0.125rem\",\n\t\t[AvatarGroupType.Group]: \"-1.25rem\",\n\t},\n\t[AvatarSize.M]: {\n\t\t[AvatarGroupType.Individual]: \"0.125rem\",\n\t\t[AvatarGroupType.Group]: \"-1.625rem\",\n\t},\n\t[AvatarSize.L]: {\n\t\t[AvatarGroupType.Individual]: \"0.125rem\",\n\t\t[AvatarGroupType.Group]: \" -2rem\",\n\t},\n\t[AvatarSize.XL]: {\n\t\t[AvatarGroupType.Individual]: \"0.25rem\",\n\t\t[AvatarGroupType.Group]: \"-2.75rem\",\n\t},\n};\n\n/**\n * @public\n */\nconst metadata = {\n\ttag: \"ui5-avatar-group\",\n\tmanagedSlots: true,\n\tproperties: /** @lends sap.ui.webcomponents.main.AvatarGroup.prototype */  {\n\n\t\t/**\n\t \t * Defines the mode of the <code>AvatarGroup</code>.\n\t\t * <br><br>\n\t\t * Available options are:\n\t\t * <ul>\n\t\t * <li><code>Group</code></li>\n\t\t * <li><code>Individual</code></li>\n\t\t * </ul>\n\t\t * @type {sap.ui.webcomponents.main.types.AvatarGroupType}\n\t\t * @defaultValue \"Group\"\n\t\t * @public\n\t\t */\n\t\ttype: {\n\t\t\ttype: AvatarGroupType,\n\t\t\tdefaultValue: AvatarGroupType.Group,\n\t\t},\n\n\t\t/**\n\t\t * Defines the aria-haspopup value of the component on:\n\t\t * <br><br>\n\t\t * <ul>\n\t\t * <li> the whole container when <code>type</code> property is <code>Group</code></li>\n\t\t * <li> the default \"More\" overflow button when <code>type</code> is <code>Individual</code></li>\n\t\t * </ul>\n\t\t * <br><br>\n\t\t * @type String\n\t\t * @since 1.0.0-rc.15\n\t\t * @protected\n\t\t */\n\t\tariaHaspopup: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_overflowButtonText: {\n\t\t\ttype: String,\n\t\t\tnoAttribute: true,\n\t\t},\n\t},\n\tslots: /** @lends sap.ui.webcomponents.main.AvatarGroup.prototype */ {\n\t\t/**\n\t\t * Defines the items of the component. Use the <code>ui5-avatar</code> component as an item.\n\t\t * <br><br>\n\t\t * <b>Note:</b> The UX guidelines recommends using avatars with \"Circle\" shape.\n\t\t * Moreover, if you use avatars with \"Square\" shape, there will be visual inconsistency\n\t\t * as the built-in overflow action has \"Circle\" shape.\n\t\t * @type {sap.ui.webcomponents.main.IAvatar[]}\n\t\t * @slot items\n\t\t * @public\n\t\t */\n\t\t\"default\": {\n\t\t\ttype: HTMLElement,\n\t\t\tpropertyName: \"items\",\n\t\t},\n\t\t/**\n\t\t * Defines the overflow button of the component.\n\t\t * <b>Note:</b> We recommend using the <code>ui5-button</code> component.\n\t\t * <br><br>\n\t\t * <b>Note:</b> If this slot is not used, the component will\n\t\t * display the built-in overflow button.\n\t\t * @type {HTMLElement}\n\t\t * @slot overflowButton\n\t\t * @public\n\t\t * @since 1.0.0-rc.13\n\t\t */\n\t\t overflowButton: {\n\t\t\ttype: HTMLElement,\n\t\t},\n\t},\n\tevents: /** @lends sap.ui.webcomponents.main.AvatarGroup.prototype */ {\n\t\t/**\n\t\t* Fired when the component is activated either with a\n\t\t* click/tap or by using the Enter or Space key.\n\t\t* @param {HTMLElement} targetRef The DOM ref of the clicked item.\n\t\t* @param {boolean} overflowButtonClicked indicates if the overflow button is clicked\n\t\t* @event\n\t\t* @public\n\t\t* @since 1.0.0-rc.11\n\t\t*/\n\t\tclick: {\n\t\t\tdetail: {\n\t\t\t\ttargetRef: { type: HTMLElement },\n\t\t\t\toverflowButtonClicked: { type: Boolean },\n\t\t\t},\n\t\t},\n\t\t/**\n\t\t* Fired when the count of visible <code>ui5-avatar</code> elements in the\n\t\t* component has changed\n\t\t* @event\n\t\t* @public\n\t\t* @since 1.0.0-rc.13\n\t\t*/\n\t\toverflow: {},\n\t},\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * Displays a group of avatars arranged horizontally. It is useful to visually\n * showcase a group of related avatars, such as, project team members or employees.\n *\n * The component allows you to display the avatars in different sizes,\n * depending on your use case.\n *\n * The <code>AvatarGroup</code> component has two group types:\n * <ul>\n * <li><code>Group</code> type: The avatars are displayed as partially overlapped on\n * top of each other and the entire group has one click/tap area.</li>\n * <li><code>Individual</code> type: The avatars are displayed side-by-side and each\n * avatar has its own click/tap area.</li>\n * </ul>\n *\n * <h3>Responsive Behavior</h3>\n *\n * When the available space is less than the width required to display all avatars,\n * an overflow visualization appears as a button placed at the end with the same shape\n * and size as the avatars. The visualization displays the number of avatars that have overflowed\n * and are not currently visible.\n *\n * <h3>Usage</h3>\n *\n * Use the <code>AvatarGroup</code> if:\n * <ul>\n * <li>You want to display a group of avatars.</li>\n * <li>You want to display several avatars which have something in common.</li>\n * </ul>\n *\n * Do not use the <code>AvatarGroup</code> if:\n * <ul>\n * <li>You want to display a single avatar.</li>\n * <li>You want to display a gallery for simple images.</li>\n * <li>You want to use it for other visual content than avatars.</li>\n * </ul>\n *\n * <h3>Keyboard Handling</h3>\n * The component provides advanced keyboard handling.\n * When focused, the user can use the following keyboard\n * shortcuts in order to perform a navigation:\n * <br>\n * - <code>type</code> Individual:\n * <br>\n * <ul>\n * <li>[TAB] - Move focus to the overflow button</li>\n * <li>[LEFT] - Navigate one avatar to the left</li>\n * <li>[RIGHT] - Navigate one avatar to the right</li>\n * <li>[HOME] - Navigate to the first avatar</li>\n * <li>[END] - Navigate to the last avatar</li>\n * <li>[SPACE],[ENTER],[RETURN] - Trigger <code>ui5-click</code> event</li>\n * </ul>\n * <br>\n * - <code>type</code> Group:\n * <br>\n * <ul>\n * <li>[TAB] - Move focus to the next interactive element after the component</li>\n * <li>[SPACE],[ENTER],[RETURN] - Trigger <code>ui5-click</code> event</li>\n * </ul>\n * <br>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.AvatarGroup\n * @extends sap.ui.webcomponents.base.UI5Element\n * @tagname ui5-avatar-group\n * @since 1.0.0-rc.11\n * @public\n */\nclass AvatarGroup extends UI5Element {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._itemNavigation = new ItemNavigation(this, {\n\t\t\tgetItemsCallback: () => {\n\t\t\t\treturn this._isGroup ? [] : this.items.slice(0, this._hiddenStartIndex);\n\t\t\t},\n\t\t});\n\n\t\tthis._colorIndex = 0;\n\t\tthis._hiddenItems = 0;\n\t\tthis._onResizeHandler = this._onResize.bind(this);\n\t}\n\n\tstatic get metadata() {\n\t\treturn metadata;\n\t}\n\n\tstatic get render() {\n\t\treturn litRender;\n\t}\n\n\tstatic get template() {\n\t\treturn AvatarGroupTemplate;\n\t}\n\n\tstatic get styles() {\n\t\treturn AvatarGroupCss;\n\t}\n\n\tstatic get dependencies() {\n\t\treturn [\n\t\t\tButton,\n\t\t];\n\t}\n\n\tstatic async onDefine() {\n\t\tAvatarGroup.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n\t}\n\n\t/**\n\t * Returns an array containing the <code>ui5-avatar</code> instances that are currently not displayed due to lack of space.\n\t * @readonly\n\t * @type {HTMLElement[]}\n\t * @defaultValue []\n\t * @public\n\t */\n\tget hiddenItems() {\n\t\treturn this.items.slice(this._hiddenStartIndex);\n\t}\n\n\t/**\n\t * Returns an array containing the <code>AvatarColorScheme</code> values that correspond to the avatars in the component.\n\t * @readonly\n\t * @type {sap.ui.webcomponents.main.types.AvatarColorScheme[]}\n\t * @defaultValue []\n\t * @public\n\t */\n\tget colorScheme() {\n\t\treturn this.items.map(avatar => avatar._effectiveBackgroundColor);\n\t}\n\n\tget _customOverflowButton() {\n\t\treturn this.overflowButton.length ? this.overflowButton[0] : undefined;\n\t}\n\n\tget _ariaLabelText() {\n\t\tconst hiddenItemsCount = this.hiddenItems.length;\n\t\tconst typeLabelKey = this._isGroup ? AVATAR_GROUP_ARIA_LABEL_GROUP : AVATAR_GROUP_ARIA_LABEL_INDIVIDUAL;\n\n\t\t// avatar type label\n\t\tlet text = AvatarGroup.i18nBundle.getText(typeLabelKey);\n\n\t\t// add displayed-hidden avatars label\n\t\ttext += ` ${AvatarGroup.i18nBundle.getText(AVATAR_GROUP_DISPLAYED_HIDDEN_LABEL, this._itemsCount - hiddenItemsCount, hiddenItemsCount)}`;\n\n\t\tif (this._isGroup) {\n\t\t\t// the container role is \"button\", add the message for complete list activation\n\t\t\ttext += ` ${AvatarGroup.i18nBundle.getText(AVATAR_GROUP_SHOW_COMPLETE_LIST_LABEL)}`;\n\t\t} else {\n\t\t\t// the container role is \"group\", add the \"how to navigate\" message\n\t\t\ttext += ` ${AvatarGroup.i18nBundle.getText(AVATAR_GROUP_MOVE)}`;\n\t\t}\n\n\t\treturn text;\n\t}\n\n\tget _overflowButtonAriaLabelText() {\n\t\treturn this._isGroup ? undefined : AvatarGroup.i18nBundle.getText(AVATAR_GROUP_SHOW_COMPLETE_LIST_LABEL);\n\t}\n\n\tget _containerAriaHasPopup() {\n\t\treturn this._isGroup ? this._getAriaHasPopup() : undefined;\n\t}\n\n\tget _overflowButtonAccAttributes() {\n\t\treturn {\n\t\t\thasPopup: this._isGroup ? undefined : this._getAriaHasPopup(),\n\t\t};\n\t}\n\n\tget _role() {\n\t\treturn this._isGroup ? \"button\" : \"group\";\n\t}\n\n\tget _hiddenStartIndex() {\n\t\treturn this._itemsCount - this._hiddenItems;\n\t}\n\n\tget _overflowBtnHidden() {\n\t\treturn this._hiddenItems === 0;\n\t}\n\n\tget _isGroup() {\n\t\treturn this.type === AvatarGroupType.Group;\n\t}\n\n\tget _itemsCount() {\n\t\treturn this.items.length;\n\t}\n\n\tget _groupTabIndex() {\n\t\treturn this._isGroup ? \"0\" : \"-1\";\n\t}\n\n\tget _overflowButton() {\n\t\treturn this.shadowRoot.querySelector(AVATAR_GROUP_OVERFLOW_BTN_SELECTOR);\n\t}\n\n\t/**\n\t * Return the effective overflow button width\n\t * Differences are that when in \"Group\" type the button is offset and overlaps the avatars\n\t *\n\t * 1) In case of \"Group\", (LTR/RTL aware) button width is qual to second item offset left/right\n\t * 2) In case of \"Individual\" group type width is directly taken from button element\n\t * @private\n\t */\n\tget _overflowButtonEffectiveWidth() {\n\t\tconst button = this._customOverflowButton ? this._customOverflowButton : this._overflowButton;\n\t\t// if in \"Group\" mode overflow button size is equal to the offset from second item\n\t\tif (this._isGroup) {\n\t\t\tlet item = this.items[1];\n\t\t\tlet ltrEffectiveWidth;\n\n\t\t\t// in some cases when second avatar is overflowed the offset of the button is the right one\n\t\t\tif (!item || item.hidden) {\n\t\t\t\titem = button;\n\t\t\t}\n\n\t\t\tltrEffectiveWidth = item.offsetLeft;\n\n\t\t\tif (!isChrome()) {\n\t\t\t\t// additional subtractions required for non-Chromium browsers\n\t\t\t\tltrEffectiveWidth = item.offsetLeft - this.offsetLeft;\n\t\t\t}\n\n\t\t\treturn this.effectiveDir === \"rtl\" ? this._getWidthToItem(item) : ltrEffectiveWidth;\n\t\t}\n\n\t\treturn button.offsetWidth;\n\t}\n\n\tget firstAvatarSize() {\n\t\treturn this.items[0].size;\n\t}\n\n\tget classes() {\n\t\treturn {\n\t\t\toverflowButton: {\n\t\t\t\t\"ui5-avatar-group-overflow-btn\": true,\n\t\t\t\t\"ui5-avatar-group-overflow-btn-xs\": this.firstAvatarSize === \"XS\",\n\t\t\t\t\"ui5-avatar-group-overflow-btn-s\": this.firstAvatarSize === \"S\",\n\t\t\t\t\"ui5-avatar-group-overflow-btn-m\": this.firstAvatarSize === \"M\",\n\t\t\t\t\"ui5-avatar-group-overflow-btn-l\": this.firstAvatarSize === \"L\",\n\t\t\t\t\"ui5-avatar-group-overflow-btn-xl\": this.firstAvatarSize === \"XL\",\n\t\t\t},\n\t\t};\n\t}\n\n\tonAfterRendering() {\n\t\tthis._overflowItems();\n\t}\n\n\tonBeforeRendering() {\n\t\tif (this._customOverflowButton) {\n\t\t\tthis._customOverflowButton.nonInteractive = this._isGroup;\n\t\t}\n\n\t\tthis._prepareAvatars();\n\t}\n\n\tonEnterDOM() {\n\t\tResizeHandler.register(this, this._onResizeHandler);\n\t}\n\n\tonExitDOM() {\n\t\tResizeHandler.deregister(this, this._onResizeHandler);\n\t}\n\n\t_onResize() {\n\t\tthis._overflowItems();\n\t}\n\n\t_onkeydown(event) {\n\t\t// when type is \"Individual\" the ui5-avatar and ui5-button both\n\t\t// fire \"click\" event when SPACE or ENTER are pressed and\n\t\t// AvatarGroup \"click\" is fired in their handlers (_onClick, _onUI5Click).\n\t\tif (this._isGroup) {\n\t\t\tif (isEnter(event)) {\n\t\t\t\tthis._fireGroupEvent(event.target);\n\t\t\t} else if (isSpace(event)) {\n\t\t\t\t// prevent scrolling\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\t}\n\n\t_onkeyup(event) {\n\t\tif (!event.shiftKey && isSpace(event) && this._isGroup) {\n\t\t\tthis._fireGroupEvent(event.target);\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\t_fireGroupEvent(targetRef) {\n\t\tconst isOverflowButtonClicked = targetRef.classList.contains(OVERFLOW_BTN_CLASS) || targetRef === this._customOverflowButton;\n\n\t\tthis.fireEvent(\"click\", {\n\t\t\ttargetRef,\n\t\t\toverflowButtonClicked: isOverflowButtonClicked,\n\t\t});\n\t}\n\n\t_onClick(event) {\n\t\t// no matter the value of noConflict, the ui5-button and the group container (div) always fire a native click event\n\t\tconst isButton = event.target.hasAttribute(\"ui5-button\");\n\t\tevent.stopPropagation();\n\n\t\tif (this._isGroup || isButton) {\n\t\t\tthis._fireGroupEvent(event.target);\n\t\t}\n\t}\n\n\t_onUI5Click(event) {\n\t\t// when noConflict=true only ui5-avatar will fire ui5-click event\n\t\tconst isAvatar = event.target.hasAttribute(\"ui5-avatar\");\n\t\tevent.stopPropagation();\n\n\t\tif (isAvatar) {\n\t\t\tthis._fireGroupEvent(event.target);\n\t\t}\n\t}\n\n\t/**\n\t * Modifies avatars to the needs of avatar group properties. Respects already set size and background color.\n\t * Set the margins (offsets) based on RTL/LTR.\n\t * @private\n\t */\n\t_prepareAvatars() {\n\t\tconst RTL = this.effectiveDir === \"rtl\";\n\t\tthis._colorIndex = 0;\n\n\t\tthis.items.forEach((avatar, index) => {\n\t\t\tconst colorIndex = this._getNextBackgroundColor();\n\t\t\tavatar.interactive = !this._isGroup;\n\n\t\t\tif (!avatar.getAttribute(\"_color-scheme\")) {\n\t\t\t\t// AvatarGroup respects colors set to ui5-avatar\n\t\t\t\tavatar.setAttribute(\"_color-scheme\", AvatarColorScheme[`Accent${colorIndex}`]);\n\t\t\t}\n\n\t\t\t// last avatar should not be offset as it breaks the container width and focus styles are no set correctly\n\t\t\tif (index !== this._itemsCount - 1 || this._customOverflowButton) {\n\t\t\t\t// based on RTL margin left or right is set to avatars\n\t\t\t\tavatar.style[`margin-${RTL ? \"left\" : \"right\"}`] = offsets[avatar._effectiveSize][this.type];\n\t\t\t}\n\t\t});\n\t}\n\n\t_onfocusin(event) {\n\t\tconst target = event.target;\n\t\tthis._itemNavigation.setCurrentItem(target);\n\t}\n\n\t/**\n\t * Returns the total width to item excluding the item width\n\t * RTL/LTR aware\n\t * @private\n\t * @param {HTMLElement} item\n\t */\n\t_getWidthToItem(item) {\n\t\tconst isRTL = this.effectiveDir === \"rtl\";\n\t\tlet ltrWidthToItem;\n\n\t\tif (isRTL) {\n\t\t\t// in RTL the total width is equal to difference of the parent container width and\n\t\t\t// how much is the item offset to the left minus its offsetWidth\n\t\t\treturn item.offsetParent.offsetWidth - item.offsetLeft - item.offsetWidth;\n\t\t}\n\n\t\t// in LTR the width is equal to item.offsetLeft\n\t\tltrWidthToItem = item.offsetLeft;\n\n\t\tif (!isChrome()) {\n\t\t\t// for non-Chromium browsers offsetLeft may differ\n\t\t\t// to normalize it, the Avatar Group's offset-left is subtracted\n\t\t\tltrWidthToItem = item.offsetLeft - this.offsetLeft;\n\t\t}\n\n\t\treturn ltrWidthToItem;\n\t}\n\n\t/**\n\t * Overflows items that were not able to fit the container\n\t * @private\n\t */\n\t_overflowItems() {\n\t\tif (this.items.length < 2) {\n\t\t\t// no need to overflow avatars\n\t\t\treturn;\n\t\t}\n\n\t\tlet hiddenItems = 0;\n\n\t\tfor (let index = 0; index < this._itemsCount; index++) {\n\t\t\tconst item = this.items[index];\n\n\t\t\t// show item to determine if it will fit the new container size\n\t\t\titem.hidden = false;\n\n\t\t\t// container width to current item + item width (avatar)\n\t\t\t// used to determine whether the following items will fit the container or not\n\t\t\tlet totalWidth = this._getWidthToItem(item) + item.offsetWidth;\n\n\t\t\tif (index !== this._itemsCount - 1 || this._customOverflowButton) {\n\t\t\t\ttotalWidth += this._overflowButtonEffectiveWidth;\n\t\t\t}\n\n\t\t\tif (totalWidth > this.offsetWidth) {\n\t\t\t\thiddenItems = this._itemsCount - index;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// hide the items that did not fit the container size\n\t\tthis._setHiddenItems(hiddenItems);\n\t}\n\n\t_getNextBackgroundColor() {\n\t\t// counter is to automatically assign background colors to avatars, `Accent10` is the highest color value\n\t\tif (++this._colorIndex > 10) {\n\t\t\tthis._colorIndex = 1;\n\t\t}\n\t\treturn this._colorIndex;\n\t}\n\n\t_setHiddenItems(hiddenItems) {\n\t\tconst shouldFireEvent = this._hiddenItems !== hiddenItems;\n\n\t\tthis._hiddenItems = hiddenItems;\n\n\t\tthis.items.forEach((item, index) => {\n\t\t\titem.hidden = index >= this._hiddenStartIndex;\n\t\t});\n\n\t\tthis._overflowButtonText = `+${hiddenItems > 99 ? 99 : hiddenItems}`;\n\n\t\tif (shouldFireEvent) {\n\t\t\tthis.fireEvent(\"overflow\");\n\t\t}\n\t}\n\n\t_getAriaHasPopup() {\n\t\tif (this.ariaHaspopup === \"\") {\n\t\t\treturn;\n\t\t}\n\n\t\treturn this.ariaHaspopup;\n\t}\n}\n\nAvatarGroup.define();\n\nexport default AvatarGroup;\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,4CAA4C;AACnE,OAAOC,SAAS,MAAM,sDAAsD;AAC5E,OAAOC,aAAa,MAAM,wDAAwD;AAClF,OAAOC,cAAc,MAAM,yDAAyD;AACpF,SAASC,aAAa,QAAQ,4CAA4C;AAE1E,SACCC,OAAO,EACPC,OAAO,QACD,sCAAsC;AAC7C,SAASC,QAAQ,QAAQ,wCAAwC;AAEjE,SACCC,mCAAmC,EACnCC,qCAAqC,EACrCC,kCAAkC,EAClCC,6BAA6B,EAC7BC,iBAAiB,QACX,mCAAmC;;AAE1C;AACA,OAAOC,mBAAmB,MAAM,kDAAkD;AAClF;AACA,OAAOC,cAAc,MAAM,uCAAuC;AAElE,OAAOC,MAAM,MAAM,aAAa;AAChC,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,OAAOC,eAAe,MAAM,4BAA4B;AACxD,OAAOC,iBAAiB,MAAM,8BAA8B;AAE5D,MAAMC,kBAAkB,GAAG,+BAA+B;AAC1D,MAAMC,kCAAkC,GAAI,IAAGD,kBAAmB,EAAC;;AAEnE;AACA,MAAME,OAAO,GAAG;EACf,CAACL,UAAU,CAACM,EAAE,GAAG;IAChB,CAACL,eAAe,CAACM,UAAU,GAAG,WAAW;IACzC,CAACN,eAAe,CAACO,KAAK,GAAG;EAC1B,CAAC;EACD,CAACR,UAAU,CAACS,CAAC,GAAG;IACf,CAACR,eAAe,CAACM,UAAU,GAAG,UAAU;IACxC,CAACN,eAAe,CAACO,KAAK,GAAG;EAC1B,CAAC;EACD,CAACR,UAAU,CAACU,CAAC,GAAG;IACf,CAACT,eAAe,CAACM,UAAU,GAAG,UAAU;IACxC,CAACN,eAAe,CAACO,KAAK,GAAG;EAC1B,CAAC;EACD,CAACR,UAAU,CAACW,CAAC,GAAG;IACf,CAACV,eAAe,CAACM,UAAU,GAAG,UAAU;IACxC,CAACN,eAAe,CAACO,KAAK,GAAG;EAC1B,CAAC;EACD,CAACR,UAAU,CAACY,EAAE,GAAG;IAChB,CAACX,eAAe,CAACM,UAAU,GAAG,SAAS;IACvC,CAACN,eAAe,CAACO,KAAK,GAAG;EAC1B;AACD,CAAC;;AAED;AACA;AACA;AACA,MAAMK,QAAQ,GAAG;EAChBC,GAAG,EAAE,kBAAkB;EACvBC,YAAY,EAAE,IAAI;EAClBC,UAAU,EAAE,6DAA+D;IAE1E;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEC,IAAI,EAAE;MACLA,IAAI,EAAEhB,eAAe;MACrBiB,YAAY,EAAEjB,eAAe,CAACO;IAC/B,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEW,YAAY,EAAE;MACbF,IAAI,EAAEG;IACP,CAAC;IAED;AACF;AACA;IACEC,mBAAmB,EAAE;MACpBJ,IAAI,EAAEG,MAAM;MACZE,WAAW,EAAE;IACd;EACD,CAAC;EACDC,KAAK,EAAE,6DAA8D;IACpE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,SAAS,EAAE;MACVN,IAAI,EAAEO,WAAW;MACjBC,YAAY,EAAE;IACf,CAAC;IACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACGC,cAAc,EAAE;MAChBT,IAAI,EAAEO;IACP;EACD,CAAC;EACDG,MAAM,EAAE,6DAA8D;IACrE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEC,KAAK,EAAE;MACNC,MAAM,EAAE;QACPC,SAAS,EAAE;UAAEb,IAAI,EAAEO;QAAY,CAAC;QAChCO,qBAAqB,EAAE;UAAEd,IAAI,EAAEe;QAAQ;MACxC;IACD,CAAC;IACD;AACF;AACA;AACA;AACA;AACA;AACA;IACEC,QAAQ,EAAE,CAAC;EACZ;AACD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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"},"metadata":{},"sourceType":"module"}