{"ast":null,"code":"/**\n * Determines the slot to which a node should be assigned\n * @param node Text node or HTML element\n * @returns {string}\n */\nconst getSlotName = node => {\n  // Text nodes can only go to the default slot\n  if (!(node instanceof HTMLElement)) {\n    return \"default\";\n  }\n\n  // Discover the slot based on the real slot name (f.e. footer => footer, or content-32 => content)\n  const slot = node.getAttribute(\"slot\");\n  if (slot) {\n    const match = slot.match(/^(.+?)-\\d+$/);\n    return match ? match[1] : slot;\n  }\n\n  // Use default slot as a fallback\n  return \"default\";\n};\nconst isSlot = el => el && el instanceof HTMLElement && el.localName === \"slot\";\nconst getSlottedElements = el => {\n  if (isSlot(el)) {\n    return el.assignedNodes({\n      flatten: true\n    }).filter(item => item instanceof HTMLElement);\n  }\n  return [el];\n};\nconst getSlottedElementsList = elList => {\n  const reducer = (acc, curr) => acc.concat(getSlottedElements(curr));\n  return elList.reduce(reducer, []);\n};\nexport { getSlotName, isSlot, getSlottedElements, getSlottedElementsList };","map":{"version":3,"names":["getSlotName","node","HTMLElement","slot","getAttribute","match","isSlot","el","localName","getSlottedElements","assignedNodes","flatten","filter","item","getSlottedElementsList","elList","reducer","acc","curr","concat","reduce"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/node_modules/@ui5/webcomponents-base/dist/util/SlotsHelper.js"],"sourcesContent":["/**\n * Determines the slot to which a node should be assigned\n * @param node Text node or HTML element\n * @returns {string}\n */\nconst getSlotName = node => {\n\t// Text nodes can only go to the default slot\n\tif (!(node instanceof HTMLElement)) {\n\t\treturn \"default\";\n\t}\n\n\t// Discover the slot based on the real slot name (f.e. footer => footer, or content-32 => content)\n\tconst slot = node.getAttribute(\"slot\");\n\tif (slot) {\n\t\tconst match = slot.match(/^(.+?)-\\d+$/);\n\t\treturn match ? match[1] : slot;\n\t}\n\n\t// Use default slot as a fallback\n\treturn \"default\";\n};\n\nconst isSlot = el => el && el instanceof HTMLElement && el.localName === \"slot\";\n\nconst getSlottedElements = el => {\n\tif (isSlot(el)) {\n\t\treturn el.assignedNodes({ flatten: true }).filter(item => item instanceof HTMLElement);\n\t}\n\n\treturn [el];\n};\n\nconst getSlottedElementsList = elList => {\n\tconst reducer = (acc, curr) => acc.concat(getSlottedElements(curr));\n\treturn elList.reduce(reducer, []);\n};\n\nexport {\n\tgetSlotName,\n\tisSlot,\n\tgetSlottedElements,\n\tgetSlottedElementsList,\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,MAAMA,WAAW,GAAGC,IAAI,IAAI;EAC3B;EACA,IAAI,EAAEA,IAAI,YAAYC,WAAW,CAAC,EAAE;IACnC,OAAO,SAAS;EACjB;;EAEA;EACA,MAAMC,IAAI,GAAGF,IAAI,CAACG,YAAY,CAAC,MAAM,CAAC;EACtC,IAAID,IAAI,EAAE;IACT,MAAME,KAAK,GAAGF,IAAI,CAACE,KAAK,CAAC,aAAa,CAAC;IACvC,OAAOA,KAAK,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAGF,IAAI;EAC/B;;EAEA;EACA,OAAO,SAAS;AACjB,CAAC;AAED,MAAMG,MAAM,GAAGC,EAAE,IAAIA,EAAE,IAAIA,EAAE,YAAYL,WAAW,IAAIK,EAAE,CAACC,SAAS,KAAK,MAAM;AAE/E,MAAMC,kBAAkB,GAAGF,EAAE,IAAI;EAChC,IAAID,MAAM,CAACC,EAAE,CAAC,EAAE;IACf,OAAOA,EAAE,CAACG,aAAa,CAAC;MAAEC,OAAO,EAAE;IAAK,CAAC,CAAC,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,YAAYX,WAAW,CAAC;EACvF;EAEA,OAAO,CAACK,EAAE,CAAC;AACZ,CAAC;AAED,MAAMO,sBAAsB,GAAGC,MAAM,IAAI;EACxC,MAAMC,OAAO,GAAG,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,CAACE,MAAM,CAACV,kBAAkB,CAACS,IAAI,CAAC,CAAC;EACnE,OAAOH,MAAM,CAACK,MAAM,CAACJ,OAAO,EAAE,EAAE,CAAC;AAClC,CAAC;AAED,SACChB,WAAW,EACXM,MAAM,EACNG,kBAAkB,EAClBK,sBAAsB"},"metadata":{},"sourceType":"module"}