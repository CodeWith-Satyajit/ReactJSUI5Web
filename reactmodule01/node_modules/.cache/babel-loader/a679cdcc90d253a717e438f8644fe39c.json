{"ast":null,"code":"import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport { isEscape, isSpace, isEnter, isDown, isUp, isDownAlt, isUpAlt, isF4, isShift } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport SplitButtonTemplate from \"./generated/templates/SplitButtonTemplate.lit.js\";\nimport ButtonDesign from \"./types/ButtonDesign.js\";\nimport Button from \"./Button.js\";\nimport { SPLIT_BUTTON_DESCRIPTION, SPLIT_BUTTON_KEYBOARD_HINT } from \"./generated/i18n/i18n-defaults.js\";\n\n// Styles\nimport SplitButtonCss from \"./generated/themes/SplitButton.css.js\";\n\n/**\n * @public\n */\nconst metadata = {\n  tag: \"ui5-split-button\",\n  managedSlots: true,\n  properties: /** @lends sap.ui.webcomponents.main.SplitButton.prototype */{\n    /**\n     * Defines the icon to be displayed as graphical element within the component.\n     * The SAP-icons font provides numerous options.\n     * <br><br>\n     * Example:\n     *\n     * See all the available icons in the <ui5-link target=\"_blank\" href=\"https://sdk.openui5.org/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer</ui5-link>.\n     *\n     * @type {string}\n     * @defaultvalue \"\"\n     * @public\n     */\n    icon: {\n      type: String\n    },\n    /**\n     * Defines the icon to be displayed in active state as graphical element within the component.\n     *\n     * @type {string}\n     * @defaultvalue \"\"\n     * @public\n     */\n    activeIcon: {\n      type: String\n    },\n    /**\n     * Defines the component design.\n     *\n     * <br><br>\n     * <b>The available values are:</b>\n     *\n     * <ul>\n     * <li><code>Default</code></li>\n     * <li><code>Emphasized</code></li>\n     * <li><code>Positive</code></li>\n     * <li><code>Negative</code></li>\n     * <li><code>Transparent</code></li>\n     * <li><code>Attention</code></li>\n     * </ul>\n     *\n     * @type {sap.ui.webcomponents.main.types.ButtonDesign}\n     * @defaultvalue \"Default\"\n     * @public\n     */\n    design: {\n      type: ButtonDesign,\n      defaultValue: ButtonDesign.Default\n    },\n    /**\n     * Defines whether the component is disabled.\n     * A disabled component can't be pressed or\n     * focused, and it is not in the tab chain.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    disabled: {\n      type: Boolean\n    },\n    /**\n     * Defines the accessible ARIA name of the component.\n     *\n     * @type {string}\n     * @defaultvalue: \"\"\n     * @public\n     */\n    accessibleName: {\n      type: String,\n      defaultValue: undefined\n    },\n    /**\n     * Indicates if the elements is on focus\n     * @type {boolean}\n     * @defaultvalue false\n     * @private\n     */\n    focused: {\n      type: Boolean\n    },\n    /**\n     * Accessibility-related properties for inner elements of the Split Button\n     *\n     * @type {object}\n     * @private\n     */\n    _splitButtonAccInfo: {\n      type: Object\n    },\n    /**\n     * Defines the tabIndex of the component.\n     * @type {string}\n     * @defaultvalue \"\"\n     * @private\n     */\n    _tabIndex: {\n      type: String,\n      defaultValue: \"0\",\n      noAttribute: true\n    },\n    /**\n     * Indicates if there is Space key pressed\n     * @type {boolean}\n     * @defaultvalue false\n     * @private\n     */\n    _spacePressed: {\n      type: Boolean,\n      noAttribute: true\n    },\n    /**\n     * Indicates if there is SHIFT or ESCAPE key pressed\n     * @type {boolean}\n     * @defaultvalue false\n     * @private\n     */\n    _shiftOrEscapePressed: {\n      type: Boolean,\n      noAttribute: true\n    },\n    /**\n     * Defines the active state of the text button\n     * @type {boolean}\n     * @defaultvalue false\n     * @private\n     */\n    _textButtonActive: {\n      type: Boolean,\n      noAttribute: true\n    },\n    /**\n     * Defines the icon of the text button\n     * @type {string}\n     * @defaultvalue \"\"\n     * @private\n     */\n    _textButtonIcon: {\n      type: String,\n      noAttribute: true\n    },\n    /**\n     * Defines the active state of the arrow button\n     * @type {boolean}\n     * @defaultvalue false\n     * @private\n     */\n    _arrowButtonActive: {\n      type: Boolean,\n      noAttribute: true\n    }\n  },\n  slots: /** @lends sap.ui.webcomponents.main.SplitButton.prototype */{\n    /**\n     * Defines the text of the component.\n     * <br><br>\n     * <b>Note:</b> Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.\n     *\n     * @type {Node[]}\n     * @slot\n     * @public\n     */\n    \"default\": {\n      type: Node,\n      propertyName: \"text\"\n    }\n  },\n  events: /** @lends sap.ui.webcomponents.main.SplitButton.prototype */{\n    /**\n     * Fired when the user clicks on the default action.\n     * @event\n     * @public\n     */\n    \"click\": {},\n    /**\n     * Fired when the user clicks on the arrow action.\n     * @event sap.ui.webcomponents.main.SplitButton#arrow-click\n     * @public\n     */\n    \"arrow-click\": {}\n  }\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * <code>ui5-split-button</code> enables users to trigger actions. It is constructed of two separate actions -\n * default action and arrow action that can be activated by clicking or tapping, or by\n * pressing certain keyboard keys - <code>Space</code> or <code>Enter</code> for default action,\n * and <code>Arrow Down</code> or <code>Arrow Up</code> for arrow action.\n *\n * <h3>Usage</h3>\n *\n * <code>ui5-split-button</code> consists two separate buttons:\n * <ul>\n * <li>for the first one (default action) you can define some <code>text</code> or an <code>icon</code>, or both.\n * Also, it is possible to define different icon for active state of this button - <code>activeIcon</code>.</li>\n * <li>the second one (arrow action) contains only <code>slim-arrow-down</code> icon.</li>\n * </ul>\n * You can choose a <code>design</code> from a set of predefined types (the same as for ui5-button) that offer\n * different styling to correspond to the triggered action. Both text and arrow actions have the same design.\n * <br><br>\n * You can set the <code>ui5-split-button</code> as enabled or disabled. Both parts of an enabled\n * <code>ui5-split-button</code> can be pressed by clicking or tapping it, or by certain keys, which changes\n * the style to provide visual feedback to the user that it is pressed or hovered over with\n * the mouse cursor. A disabled <code>ui5-split-button</code> appears inactive and any of the two buttons\n * cannot be pressed.\n *\n * <h3>Keyboard Handling</h3>\n * <ul>\n * <li><code>Space</code> or <code>Enter</code> - triggers the default action</li>\n * <li><code>Shift</code> or <code>Escape</code> - if <code>Space</code> is pressed, releases the default action button without triggering the click event.</li>\n * <li><code>Arrow Down</code>, <code>Arrow Up</code>, <code>Alt</code>+<code>Arrow Down</code>, <code>Alt</code>+<code>Arrow Up</code>, or <code>F4</code> - triggers the arrow action\n * There are separate events that are fired on activating of <code>ui5-split-button</code> parts:\n * <ul>\n * <li><code>click</code> for the first button (default action)</li>\n * <li><code>arrow-click</code> for the second button (arrow action)</li>\n * </ul>\n * </ul>\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/SplitButton.js\";</code>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.SplitButton\n * @extends sap.ui.webcomponents.base.UI5Element\n * @tagname ui5-split-button\n * @public\n * @since 1.1.0\n */\nclass SplitButton extends UI5Element {\n  static get metadata() {\n    return metadata;\n  }\n  static get render() {\n    return litRender;\n  }\n  static get styles() {\n    return SplitButtonCss;\n  }\n  static get template() {\n    return SplitButtonTemplate;\n  }\n  static get dependencies() {\n    return [Button];\n  }\n  static async onDefine() {\n    SplitButton.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n  }\n  constructor() {\n    super();\n    const handleTouchStartEvent = event => {\n      this._textButtonActive = true;\n      this.focused = false;\n      this._setTabIndexValue();\n    };\n    this._textButtonPress = {\n      handleEvent: handleTouchStartEvent,\n      passive: true\n    };\n  }\n  onBeforeRendering() {\n    this._textButtonIcon = this.textButton && this.activeIcon !== \"\" && this._textButtonActive && !this._shiftOrEscapePressed ? this.activeIcon : this.icon;\n    if (this.disabled) {\n      this._tabIndex = \"-1\";\n    }\n  }\n  _onFocusOut(event) {\n    if (this.disabled || event.isMarked) {\n      return;\n    }\n    this._shiftOrEscapePressed = false;\n    this.focused = false;\n    this._setTabIndexValue();\n  }\n  _onFocusIn(event) {\n    if (this.disabled || event.isMarked) {\n      return;\n    }\n    this._shiftOrEscapePressed = false;\n    this.focused = true;\n  }\n  _onKeyDown(event) {\n    if (isDown(event) || isUp(event) || isDownAlt(event) || isUpAlt(event) || isF4(event)) {\n      event.preventDefault();\n      this._arrowButtonActive = true;\n      this._fireArrowClick();\n    } else if (isSpace(event) || isEnter(event)) {\n      event.preventDefault();\n      this._textButtonActive = true;\n      if (isEnter(event)) {\n        this._fireClick();\n      } else {\n        this._spacePressed = true;\n      }\n    }\n    if (this._spacePressed && (isEscape(event) || isShift(event))) {\n      this._shiftOrEscapePressed = true;\n      this._textButtonActive = false;\n    }\n    this._setTabIndexValue();\n  }\n  _onKeyUp(event) {\n    if (isDown(event) || isUp(event) || isDownAlt(event) || isUpAlt(event) || isF4(event)) {\n      this._arrowButtonActive = false;\n    } else if (isSpace(event) || isEnter(event)) {\n      this._textButtonActive = false;\n      if (isSpace(event)) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._fireClick();\n        this._spacePressed = false;\n      }\n    }\n    this._setTabIndexValue();\n  }\n  _fireClick(event) {\n    event && event.stopPropagation();\n    if (!this._shiftOrEscapePressed) {\n      this.fireEvent(\"click\");\n    }\n    this._shiftOrEscapePressed = false;\n  }\n  _fireArrowClick(event) {\n    event && event.stopPropagation();\n    this.fireEvent(\"arrow-click\");\n  }\n  _textButtonRelease() {\n    this._textButtonActive = false;\n    this._textButtonIcon = this.textButton && this.activeIcon !== \"\" && this._textButtonActive && !this._shiftOrEscapePressed ? this.activeIcon : this.icon;\n    this._setTabIndexValue();\n  }\n  _setTabIndexValue() {\n    const textButton = this.textButton,\n      arrowButton = this.arrowButton,\n      buttonsAction = textButton && (textButton.focused || textButton.active) || arrowButton && (arrowButton.focused || arrowButton.active);\n    this._tabIndex = this.disabled || buttonsAction ? \"-1\" : \"0\";\n  }\n  get textButtonAccText() {\n    return this.textContent;\n  }\n  get textButton() {\n    return this.getDomRef() && this.getDomRef().querySelector(\".ui5-split-text-button\");\n  }\n  get arrowButton() {\n    return this.getDomRef() && this.getDomRef().querySelector(\".ui5-split-arrow-button\");\n  }\n  get accessibilityInfo() {\n    return {\n      // affects arrow button\n      ariaExpanded: this._splitButtonAccInfo && this._splitButtonAccInfo.ariaExpanded,\n      ariaHaspopup: this._splitButtonAccInfo && this._splitButtonAccInfo.ariaHaspopup,\n      // affects root element\n      description: SplitButton.i18nBundle.getText(SPLIT_BUTTON_DESCRIPTION),\n      keyboardHint: SplitButton.i18nBundle.getText(SPLIT_BUTTON_KEYBOARD_HINT)\n    };\n  }\n  get ariaLabelText() {\n    return [SplitButton.i18nBundle.getText(SPLIT_BUTTON_DESCRIPTION), SplitButton.i18nBundle.getText(SPLIT_BUTTON_KEYBOARD_HINT)].join(\" \");\n  }\n}\nSplitButton.define();\nexport default SplitButton;","map":{"version":3,"names":["UI5Element","isEscape","isSpace","isEnter","isDown","isUp","isDownAlt","isUpAlt","isF4","isShift","getI18nBundle","litRender","SplitButtonTemplate","ButtonDesign","Button","SPLIT_BUTTON_DESCRIPTION","SPLIT_BUTTON_KEYBOARD_HINT","SplitButtonCss","metadata","tag","managedSlots","properties","icon","type","String","activeIcon","design","defaultValue","Default","disabled","Boolean","accessibleName","undefined","focused","_splitButtonAccInfo","Object","_tabIndex","noAttribute","_spacePressed","_shiftOrEscapePressed","_textButtonActive","_textButtonIcon","_arrowButtonActive","slots","Node","propertyName","events","SplitButton","render","styles","template","dependencies","onDefine","i18nBundle","constructor","handleTouchStartEvent","event","_setTabIndexValue","_textButtonPress","handleEvent","passive","onBeforeRendering","textButton","_onFocusOut","isMarked","_onFocusIn","_onKeyDown","preventDefault","_fireArrowClick","_fireClick","_onKeyUp","stopPropagation","fireEvent","_textButtonRelease","arrowButton","buttonsAction","active","textButtonAccText","textContent","getDomRef","querySelector","accessibilityInfo","ariaExpanded","ariaHaspopup","description","getText","keyboardHint","ariaLabelText","join","define"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/node_modules/@ui5/webcomponents/dist/SplitButton.js"],"sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport {\n\tisEscape,\n\tisSpace,\n\tisEnter,\n\tisDown,\n\tisUp,\n\tisDownAlt,\n\tisUpAlt,\n\tisF4,\n\tisShift,\n} from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport SplitButtonTemplate from \"./generated/templates/SplitButtonTemplate.lit.js\";\nimport ButtonDesign from \"./types/ButtonDesign.js\";\nimport Button from \"./Button.js\";\n\nimport {\n\tSPLIT_BUTTON_DESCRIPTION,\n\tSPLIT_BUTTON_KEYBOARD_HINT,\n} from \"./generated/i18n/i18n-defaults.js\";\n\n// Styles\nimport SplitButtonCss from \"./generated/themes/SplitButton.css.js\";\n\n/**\n * @public\n */\nconst metadata = {\n\ttag: \"ui5-split-button\",\n\tmanagedSlots: true,\n\tproperties: /** @lends sap.ui.webcomponents.main.SplitButton.prototype */ {\n\t\t/**\n\t\t * Defines the icon to be displayed as graphical element within the component.\n\t\t * The SAP-icons font provides numerous options.\n\t\t * <br><br>\n\t\t * Example:\n\t\t *\n\t\t * See all the available icons in the <ui5-link target=\"_blank\" href=\"https://sdk.openui5.org/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer</ui5-link>.\n\t\t *\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @public\n\t\t */\n\t\ticon: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Defines the icon to be displayed in active state as graphical element within the component.\n\t\t *\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @public\n\t\t */\n\t\tactiveIcon: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Defines the component design.\n\t\t *\n\t\t * <br><br>\n\t\t * <b>The available values are:</b>\n\t\t *\n\t\t * <ul>\n\t\t * <li><code>Default</code></li>\n\t\t * <li><code>Emphasized</code></li>\n\t\t * <li><code>Positive</code></li>\n\t\t * <li><code>Negative</code></li>\n\t\t * <li><code>Transparent</code></li>\n\t\t * <li><code>Attention</code></li>\n\t\t * </ul>\n\t\t *\n\t\t * @type {sap.ui.webcomponents.main.types.ButtonDesign}\n\t\t * @defaultvalue \"Default\"\n\t\t * @public\n\t\t */\n\t\tdesign: {\n\t\t\ttype: ButtonDesign,\n\t\t\tdefaultValue: ButtonDesign.Default,\n\t\t},\n\n\t\t/**\n\t\t * Defines whether the component is disabled.\n\t\t * A disabled component can't be pressed or\n\t\t * focused, and it is not in the tab chain.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\tdisabled: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines the accessible ARIA name of the component.\n\t\t *\n\t\t * @type {string}\n\t\t * @defaultvalue: \"\"\n\t\t * @public\n\t\t */\n\t\t accessibleName: {\n\t\t\ttype: String,\n\t\t\tdefaultValue: undefined,\n\t\t},\n\n\t\t/**\n\t\t * Indicates if the elements is on focus\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @private\n\t\t */\n\t\t focused: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Accessibility-related properties for inner elements of the Split Button\n\t\t *\n\t\t * @type {object}\n\t\t * @private\n\t\t */\n\t\t_splitButtonAccInfo: {\n\t\t\ttype: Object,\n\t\t},\n\n\t\t/**\n\t\t * Defines the tabIndex of the component.\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @private\n\t\t */\n\t\t_tabIndex: {\n\t\t\ttype: String,\n\t\t\tdefaultValue: \"0\",\n\t\t\tnoAttribute: true,\n\t\t},\n\n\t\t/**\n\t\t * Indicates if there is Space key pressed\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @private\n\t\t */\n\t\t_spacePressed: {\n\t\t\ttype: Boolean,\n\t\t\tnoAttribute: true,\n\t\t},\n\n\t\t/**\n\t\t * Indicates if there is SHIFT or ESCAPE key pressed\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @private\n\t\t */\n\t\t_shiftOrEscapePressed: {\n\t\t\ttype: Boolean,\n\t\t\tnoAttribute: true,\n\t\t},\n\n\t\t/**\n\t\t * Defines the active state of the text button\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @private\n\t\t */\n\t\t _textButtonActive: {\n\t\t\ttype: Boolean,\n\t\t\tnoAttribute: true,\n\t\t},\n\n\t\t/**\n\t\t * Defines the icon of the text button\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @private\n\t\t */\n\t\t _textButtonIcon: {\n\t\t\ttype: String,\n\t\t\tnoAttribute: true,\n\t\t},\n\n\t\t/**\n\t\t * Defines the active state of the arrow button\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @private\n\t\t */\n\t\t _arrowButtonActive: {\n\t\t\ttype: Boolean,\n\t\t\tnoAttribute: true,\n\t\t},\n\t},\n\tslots: /** @lends sap.ui.webcomponents.main.SplitButton.prototype */ {\n\t\t/**\n\t\t * Defines the text of the component.\n\t\t * <br><br>\n\t\t * <b>Note:</b> Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.\n\t\t *\n\t\t * @type {Node[]}\n\t\t * @slot\n\t\t * @public\n\t\t */\n\t\t\"default\": {\n\t\t\ttype: Node,\n\t\t\tpropertyName: \"text\",\n\t\t},\n\t},\n\tevents: /** @lends sap.ui.webcomponents.main.SplitButton.prototype */ {\n\t\t/**\n\t\t * Fired when the user clicks on the default action.\n\t\t * @event\n\t\t * @public\n\t\t */\n\t\t\"click\": {},\n\n\t\t/**\n\t\t * Fired when the user clicks on the arrow action.\n\t\t * @event sap.ui.webcomponents.main.SplitButton#arrow-click\n\t\t * @public\n\t\t */\n\t\t\"arrow-click\": {},\n\t },\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * <code>ui5-split-button</code> enables users to trigger actions. It is constructed of two separate actions -\n * default action and arrow action that can be activated by clicking or tapping, or by\n * pressing certain keyboard keys - <code>Space</code> or <code>Enter</code> for default action,\n * and <code>Arrow Down</code> or <code>Arrow Up</code> for arrow action.\n *\n * <h3>Usage</h3>\n *\n * <code>ui5-split-button</code> consists two separate buttons:\n * <ul>\n * <li>for the first one (default action) you can define some <code>text</code> or an <code>icon</code>, or both.\n * Also, it is possible to define different icon for active state of this button - <code>activeIcon</code>.</li>\n * <li>the second one (arrow action) contains only <code>slim-arrow-down</code> icon.</li>\n * </ul>\n * You can choose a <code>design</code> from a set of predefined types (the same as for ui5-button) that offer\n * different styling to correspond to the triggered action. Both text and arrow actions have the same design.\n * <br><br>\n * You can set the <code>ui5-split-button</code> as enabled or disabled. Both parts of an enabled\n * <code>ui5-split-button</code> can be pressed by clicking or tapping it, or by certain keys, which changes\n * the style to provide visual feedback to the user that it is pressed or hovered over with\n * the mouse cursor. A disabled <code>ui5-split-button</code> appears inactive and any of the two buttons\n * cannot be pressed.\n *\n * <h3>Keyboard Handling</h3>\n * <ul>\n * <li><code>Space</code> or <code>Enter</code> - triggers the default action</li>\n * <li><code>Shift</code> or <code>Escape</code> - if <code>Space</code> is pressed, releases the default action button without triggering the click event.</li>\n * <li><code>Arrow Down</code>, <code>Arrow Up</code>, <code>Alt</code>+<code>Arrow Down</code>, <code>Alt</code>+<code>Arrow Up</code>, or <code>F4</code> - triggers the arrow action\n * There are separate events that are fired on activating of <code>ui5-split-button</code> parts:\n * <ul>\n * <li><code>click</code> for the first button (default action)</li>\n * <li><code>arrow-click</code> for the second button (arrow action)</li>\n * </ul>\n * </ul>\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/SplitButton.js\";</code>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.SplitButton\n * @extends sap.ui.webcomponents.base.UI5Element\n * @tagname ui5-split-button\n * @public\n * @since 1.1.0\n */\nclass SplitButton extends UI5Element {\n\tstatic get metadata() {\n\t\treturn metadata;\n\t}\n\n\tstatic get render() {\n\t\treturn litRender;\n\t}\n\n\tstatic get styles() {\n\t\treturn SplitButtonCss;\n\t}\n\n\tstatic get template() {\n\t\treturn SplitButtonTemplate;\n\t}\n\n\tstatic get dependencies() {\n\t\treturn [Button];\n\t}\n\n\tstatic async onDefine() {\n\t\tSplitButton.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tconst handleTouchStartEvent = event => {\n\t\t\tthis._textButtonActive = true;\n\t\t\tthis.focused = false;\n\t\t\tthis._setTabIndexValue();\n\t\t};\n\n\t\tthis._textButtonPress = {\n\t\t\thandleEvent: handleTouchStartEvent,\n\t\t\tpassive: true,\n\t\t};\n\t}\n\n\tonBeforeRendering() {\n\t\tthis._textButtonIcon = this.textButton && this.activeIcon !== \"\" && (this._textButtonActive) && !this._shiftOrEscapePressed ? this.activeIcon : this.icon;\n\t\tif (this.disabled) {\n\t\t\tthis._tabIndex = \"-1\";\n\t\t}\n\t}\n\n\t_onFocusOut(event) {\n\t\tif (this.disabled || event.isMarked) {\n\t\t\treturn;\n\t\t}\n\t\tthis._shiftOrEscapePressed = false;\n\t\tthis.focused = false;\n\t\tthis._setTabIndexValue();\n\t}\n\n\t_onFocusIn(event) {\n\t\tif (this.disabled || event.isMarked) {\n\t\t\treturn;\n\t\t}\n\t\tthis._shiftOrEscapePressed = false;\n\t\tthis.focused = true;\n\t}\n\n\t_onKeyDown(event) {\n\t\tif (isDown(event) || isUp(event) || isDownAlt(event) || isUpAlt(event) || isF4(event)) {\n\t\t\tevent.preventDefault();\n\t\t\tthis._arrowButtonActive = true;\n\t\t\tthis._fireArrowClick();\n\t\t} else if (isSpace(event) || isEnter(event)) {\n\t\t\tevent.preventDefault();\n\t\t\tthis._textButtonActive = true;\n\t\t\tif (isEnter(event)) {\n\t\t\t\tthis._fireClick();\n\t\t\t} else {\n\t\t\t\tthis._spacePressed = true;\n\t\t\t}\n\t\t}\n\t\tif (this._spacePressed && (isEscape(event) || isShift(event))) {\n\t\t\tthis._shiftOrEscapePressed = true;\n\t\t\tthis._textButtonActive = false;\n\t\t}\n\n\t\tthis._setTabIndexValue();\n\t}\n\n\t_onKeyUp(event) {\n\t\tif (isDown(event) || isUp(event) || isDownAlt(event) || isUpAlt(event) || isF4(event)) {\n\t\t\tthis._arrowButtonActive = false;\n\t\t} else if (isSpace(event) || isEnter(event)) {\n\t\t\tthis._textButtonActive = false;\n\t\t\tif (isSpace(event)) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tthis._fireClick();\n\t\t\t\tthis._spacePressed = false;\n\t\t\t}\n\t\t}\n\n\t\tthis._setTabIndexValue();\n\t}\n\n\t_fireClick(event) {\n\t\tevent && event.stopPropagation();\n\t\tif (!this._shiftOrEscapePressed) {\n\t\t\tthis.fireEvent(\"click\");\n\t\t}\n\t\tthis._shiftOrEscapePressed = false;\n\t}\n\n\t_fireArrowClick(event) {\n\t\tevent && event.stopPropagation();\n\t\tthis.fireEvent(\"arrow-click\");\n\t}\n\n\t_textButtonRelease() {\n\t\tthis._textButtonActive = false;\n\t\tthis._textButtonIcon = this.textButton && this.activeIcon !== \"\" && (this._textButtonActive) && !this._shiftOrEscapePressed ? this.activeIcon : this.icon;\n\t\tthis._setTabIndexValue();\n\t}\n\n\t_setTabIndexValue() {\n\t\tconst textButton = this.textButton,\n\t\t\tarrowButton = this.arrowButton,\n\t\t\tbuttonsAction = (textButton && (textButton.focused || textButton.active))\n\t\t\t\t\t\t || (arrowButton && (arrowButton.focused || arrowButton.active));\n\n\t\tthis._tabIndex = this.disabled || buttonsAction ? \"-1\" : \"0\";\n\t}\n\n\tget textButtonAccText() {\n\t\treturn this.textContent;\n\t}\n\n\tget textButton() {\n\t\treturn this.getDomRef() && this.getDomRef().querySelector(\".ui5-split-text-button\");\n\t}\n\n\tget arrowButton() {\n\t\treturn this.getDomRef() && this.getDomRef().querySelector(\".ui5-split-arrow-button\");\n\t}\n\n\tget accessibilityInfo() {\n\t\treturn {\n\t\t\t// affects arrow button\n\t\t\tariaExpanded: this._splitButtonAccInfo && this._splitButtonAccInfo.ariaExpanded,\n\t\t\tariaHaspopup: this._splitButtonAccInfo && this._splitButtonAccInfo.ariaHaspopup,\n\t\t\t// affects root element\n\t\t\tdescription: SplitButton.i18nBundle.getText(SPLIT_BUTTON_DESCRIPTION),\n\t\t\tkeyboardHint: SplitButton.i18nBundle.getText(SPLIT_BUTTON_KEYBOARD_HINT),\n\t\t};\n\t}\n\n\tget ariaLabelText() {\n\t\treturn [SplitButton.i18nBundle.getText(SPLIT_BUTTON_DESCRIPTION), SplitButton.i18nBundle.getText(SPLIT_BUTTON_KEYBOARD_HINT)].join(\" \");\n\t}\n}\n\nSplitButton.define();\n\nexport default SplitButton;\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,4CAA4C;AACnE,SACCC,QAAQ,EACRC,OAAO,EACPC,OAAO,EACPC,MAAM,EACNC,IAAI,EACJC,SAAS,EACTC,OAAO,EACPC,IAAI,EACJC,OAAO,QACD,sCAAsC;AAC7C,SAASC,aAAa,QAAQ,4CAA4C;AAC1E,OAAOC,SAAS,MAAM,sDAAsD;AAC5E,OAAOC,mBAAmB,MAAM,kDAAkD;AAClF,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,MAAM,MAAM,aAAa;AAEhC,SACCC,wBAAwB,EACxBC,0BAA0B,QACpB,mCAAmC;;AAE1C;AACA,OAAOC,cAAc,MAAM,uCAAuC;;AAElE;AACA;AACA;AACA,MAAMC,QAAQ,GAAG;EAChBC,GAAG,EAAE,kBAAkB;EACvBC,YAAY,EAAE,IAAI;EAClBC,UAAU,EAAE,6DAA8D;IACzE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEC,IAAI,EAAE;MACLC,IAAI,EAAEC;IACP,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;IACEC,UAAU,EAAE;MACXF,IAAI,EAAEC;IACP,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEE,MAAM,EAAE;MACPH,IAAI,EAAEV,YAAY;MAClBc,YAAY,EAAEd,YAAY,CAACe;IAC5B,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEC,QAAQ,EAAE;MACTN,IAAI,EAAEO;IACP,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;IACGC,cAAc,EAAE;MAChBR,IAAI,EAAEC,MAAM;MACZG,YAAY,EAAEK;IACf,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;IACGC,OAAO,EAAE;MACTV,IAAI,EAAEO;IACP,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;IACEI,mBAAmB,EAAE;MACpBX,IAAI,EAAEY;IACP,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;IACEC,SAAS,EAAE;MACVb,IAAI,EAAEC,MAAM;MACZG,YAAY,EAAE,GAAG;MACjBU,WAAW,EAAE;IACd,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;IACEC,aAAa,EAAE;MACdf,IAAI,EAAEO,OAAO;MACbO,WAAW,EAAE;IACd,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;IACEE,qBAAqB,EAAE;MACtBhB,IAAI,EAAEO,OAAO;MACbO,WAAW,EAAE;IACd,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;IACGG,iBAAiB,EAAE;MACnBjB,IAAI,EAAEO,OAAO;MACbO,WAAW,EAAE;IACd,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;IACGI,eAAe,EAAE;MACjBlB,IAAI,EAAEC,MAAM;MACZa,WAAW,EAAE;IACd,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;IACGK,kBAAkB,EAAE;MACpBnB,IAAI,EAAEO,OAAO;MACbO,WAAW,EAAE;IACd;EACD,CAAC;EACDM,KAAK,EAAE,6DAA8D;IACpE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,SAAS,EAAE;MACVpB,IAAI,EAAEqB,IAAI;MACVC,YAAY,EAAE;IACf;EACD,CAAC;EACDC,MAAM,EAAE,6DAA8D;IACrE;AACF;AACA;AACA;AACA;IACE,OAAO,EAAE,CAAC,CAAC;IAEX;AACF;AACA;AACA;AACA;IACE,aAAa,EAAE,CAAC;EAChB;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,WAAW,SAAS/C,UAAU,CAAC;EACpC,WAAWkB,QAAQ,GAAG;IACrB,OAAOA,QAAQ;EAChB;EAEA,WAAW8B,MA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"},"metadata":{},"sourceType":"module"}