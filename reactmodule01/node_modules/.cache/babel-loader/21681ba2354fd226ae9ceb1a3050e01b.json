{"ast":null,"code":"import { isSpace, isEnter, isDelete } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport \"@ui5/webcomponents-icons/dist/decline.js\";\nimport \"@ui5/webcomponents-icons/dist/edit.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport ListItemType from \"./types/ListItemType.js\";\nimport ListMode from \"./types/ListMode.js\";\nimport ListItemBase from \"./ListItemBase.js\";\nimport RadioButton from \"./RadioButton.js\";\nimport CheckBox from \"./CheckBox.js\";\nimport Button from \"./Button.js\";\nimport { DELETE, ARIA_LABEL_LIST_ITEM_CHECKBOX, ARIA_LABEL_LIST_ITEM_RADIO_BUTTON, LIST_ITEM_SELECTED, LIST_ITEM_NOT_SELECTED } from \"./generated/i18n/i18n-defaults.js\";\n\n// Styles\nimport styles from \"./generated/themes/ListItem.css.js\";\n\n/**\n * @public\n */\nconst metadata = {\n  languageAware: true,\n  properties: /** @lends sap.ui.webcomponents.main.ListItem.prototype */{\n    /**\n     * Defines the visual indication and behavior of the list items.\n     * Available options are <code>Active</code> (by default), <code>Inactive</code> and <code>Detail</code>.\n     * <br><br>\n     * <b>Note:</b> When set to <code>Active</code>, the item will provide visual response upon press and hover,\n     * while with type <code>Inactive</code> and <code>Detail</code> - will not.\n     *\n     * @type {sap.ui.webcomponents.main.types.ListItemType}\n     * @defaultvalue \"Active\"\n     * @public\n    */\n    type: {\n      type: ListItemType,\n      defaultValue: ListItemType.Active\n    },\n    /**\n     * Indicates if the list item is active, e.g pressed down with the mouse or the keyboard keys.\n     *\n     * @type {boolean}\n     * @private\n    */\n    active: {\n      type: Boolean\n    },\n    /**\n     * Defines the tooltip of the component.\n     * @type {string}\n     * @defaultvalue \"\"\n     * @private\n     * @since 1.0.0-rc.15\n     */\n    title: {\n      type: String\n    },\n    /**\n     * Indicates if the list item is actionable, e.g has hover and pressed effects.\n     *\n     * @type {boolean}\n     * @private\n    */\n    actionable: {\n      type: Boolean\n    },\n    /**\n     * Used to define the role of the list item.\n     *\n     * @private\n     * @type {string}\n     * @defaultvalue \"listitem\"\n     * @since 1.0.0-rc.9\n     *\n     */\n    role: {\n      type: String,\n      defaultValue: \"listitem\"\n    },\n    /**\n     * Used to define the role of the list item.\n     *\n     * @private\n     * @type {string}\n     * @defaultvalue \"\"\n     * @since 1.3.0\n     *\n     */\n    accessibleRole: {\n      type: String\n    },\n    _mode: {\n      type: ListMode,\n      defaultValue: ListMode.None\n    },\n    _ariaHasPopup: {\n      type: String,\n      noAttribute: true\n    }\n  },\n  events: /** @lends sap.ui.webcomponents.main.ListItem.prototype */{\n    /**\n     * Fired when the user clicks on the detail button when type is <code>Detail</code>.\n     *\n     * @event sap.ui.webcomponents.main.ListItem#detail-click\n     * @public\n     */\n    \"detail-click\": {},\n    _press: {},\n    _focused: {},\n    \"_selection-requested\": {}\n  },\n  managedSlots: true,\n  slots: /** @lends sap.ui.webcomponents.main.ListItem.prototype */{\n    /**\n     * Defines the delete button, displayed in \"Delete\" mode.\n     * <b>Note:</b> While the slot allows custom buttons, to match\n     * design guidelines, please use the <code>ui5-button</code> component.\n     * <b>Note:</b> When the slot is not present, a built-in delete button will be displayed.\n     * @type {sap.ui.webcomponents.main.IButton}\n     * @since 1.9.0\n     * @slot\n     * @public\n     */\n    deleteButton: {\n      type: HTMLElement\n    }\n  }\n};\n\n/**\n * @class\n * A class to serve as a base\n * for the <code>StandardListItem</code> and <code>CustomListItem</code> classes.\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.ListItem\n * @extends sap.ui.webcomponents.main.ListItemBase\n * @public\n */\nclass ListItem extends ListItemBase {\n  static get metadata() {\n    return metadata;\n  }\n  static get styles() {\n    return [ListItemBase.styles, styles];\n  }\n  static get dependencies() {\n    return [Button, RadioButton, CheckBox];\n  }\n  constructor() {\n    super();\n    this.deactivateByKey = event => {\n      if (isEnter(event)) {\n        this.deactivate();\n      }\n    };\n    this.deactivate = () => {\n      if (this.active) {\n        this.active = false;\n      }\n    };\n    const handleTouchStartEvent = event => {\n      this._onmousedown(event);\n    };\n    this._ontouchstart = {\n      handleEvent: handleTouchStartEvent,\n      passive: true\n    };\n  }\n  onBeforeRendering() {\n    this.actionable = this.type === ListItemType.Active && this._mode !== ListMode.Delete;\n  }\n  onEnterDOM() {\n    document.addEventListener(\"mouseup\", this.deactivate);\n    document.addEventListener(\"touchend\", this.deactivate);\n    document.addEventListener(\"keyup\", this.deactivateByKey);\n  }\n  onExitDOM() {\n    document.removeEventListener(\"mouseup\", this.deactivate);\n    document.removeEventListener(\"keyup\", this.deactivateByKey);\n    document.removeEventListener(\"touchend\", this.deactivate);\n  }\n  _onkeydown(event) {\n    super._onkeydown(event);\n    const itemActive = this.type === ListItemType.Active;\n    if (isSpace(event)) {\n      event.preventDefault();\n    }\n    if ((isSpace(event) || isEnter(event)) && itemActive) {\n      this.activate();\n    }\n    if (isEnter(event)) {\n      this.fireItemPress(event);\n    }\n  }\n  _onkeyup(event) {\n    if (isSpace(event) || isEnter(event)) {\n      this.deactivate();\n    }\n    if (isSpace(event)) {\n      this.fireItemPress(event);\n    }\n    if (this.modeDelete && isDelete(event)) {\n      this.onDelete();\n    }\n  }\n  _onmousedown(event) {\n    if (event.isMarked === \"button\") {\n      return;\n    }\n    this.activate();\n  }\n  _onmouseup(event) {\n    if (event.isMarked === \"button\") {\n      return;\n    }\n    this.deactivate();\n  }\n  _ontouchend(event) {\n    this._onmouseup(event);\n  }\n  _onfocusout() {\n    super._onfocusout();\n    this.deactivate();\n  }\n  _onclick(event) {\n    if (event.isMarked === \"button\") {\n      return;\n    }\n    this.fireItemPress(event);\n  }\n\n  /*\n   * Called when selection components in Single (ui5-radio-button)\n   * and Multi (ui5-checkbox) selection modes are used.\n   */\n  onMultiSelectionComponentPress(event) {\n    if (this.isInactive) {\n      return;\n    }\n    this.fireEvent(\"_selection-requested\", {\n      item: this,\n      selected: event.target.checked,\n      selectionComponentPressed: true\n    });\n  }\n  onSingleSelectionComponentPress(event) {\n    if (this.isInactive) {\n      return;\n    }\n    this.fireEvent(\"_selection-requested\", {\n      item: this,\n      selected: !event.target.selected,\n      selectionComponentPressed: true\n    });\n  }\n  activate() {\n    if (this.type === ListItemType.Active) {\n      this.active = true;\n    }\n  }\n  onDelete(event) {\n    this.fireEvent(\"_selection-requested\", {\n      item: this,\n      selectionComponentPressed: false\n    });\n  }\n  onDetailClick(event) {\n    this.fireEvent(\"detail-click\", {\n      item: this,\n      selected: this.selected\n    });\n  }\n  fireItemPress(event) {\n    if (this.isInactive) {\n      return;\n    }\n    event.preventDefault();\n    this.fireEvent(\"_press\", {\n      item: this,\n      selected: this.selected,\n      key: event.key\n    });\n  }\n  get isInactive() {\n    return this.type === ListItemType.Inactive || this.type === ListItemType.Detail;\n  }\n  get placeSelectionElementBefore() {\n    return this._mode === ListMode.MultiSelect || this._mode === ListMode.SingleSelectBegin;\n  }\n  get placeSelectionElementAfter() {\n    return !this.placeSelectionElementBefore && (this._mode === ListMode.SingleSelectEnd || this._mode === ListMode.Delete);\n  }\n  get modeSingleSelect() {\n    return [ListMode.SingleSelectBegin, ListMode.SingleSelectEnd, ListMode.SingleSelect].includes(this._mode);\n  }\n  get modeMultiSelect() {\n    return this._mode === ListMode.MultiSelect;\n  }\n  get modeDelete() {\n    return this._mode === ListMode.Delete;\n  }\n\n  /**\n   * Used in UploadCollectionItem\n   */\n  get renderDeleteButton() {\n    return this.modeDelete;\n  }\n  get disableDeleteButton() {\n    return false;\n  }\n  /**\n   * End\n   */\n\n  get typeDetail() {\n    return this.type === ListItemType.Detail;\n  }\n  get typeActive() {\n    return this.type === ListItemType.Active;\n  }\n  get ariaSelected() {\n    if (this.modeMultiSelect || this.modeSingleSelect) {\n      return this.selected;\n    }\n    return undefined;\n  }\n  get ariaSelectedText() {\n    let ariaSelectedText;\n\n    // Selected state needs to be supported separately since now the role mapping is list -> listitem[]\n    // to avoid the issue of nesting interactive elements, ex. (option -> radio/checkbox);\n    // The text is added to aria-describedby because as part of the aria-labelledby\n    // the whole content of the item is readout when the aria-labelledby value is changed.\n    if (this.ariaSelected !== undefined) {\n      ariaSelectedText = this.ariaSelected ? ListItem.i18nBundle.getText(LIST_ITEM_SELECTED) : ListItem.i18nBundle.getText(LIST_ITEM_NOT_SELECTED);\n    }\n    return ariaSelectedText;\n  }\n  get deleteText() {\n    return ListItem.i18nBundle.getText(DELETE);\n  }\n  get hasDeleteButtonSlot() {\n    return !!this.deleteButton.length;\n  }\n  get _accessibleNameRef() {\n    if (this.accessibleName) {\n      // accessibleName is set - return labels excluding content\n      return `${this._id}-invisibleText`;\n    }\n\n    // accessibleName is not set - return _accInfo.listItemAriaLabel including content\n    return `${this._id}-content ${this._id}-invisibleText`;\n  }\n  get _accInfo() {\n    return {\n      role: this.accessibleRole || this.role,\n      ariaExpanded: undefined,\n      ariaLevel: undefined,\n      ariaLabel: ListItem.i18nBundle.getText(ARIA_LABEL_LIST_ITEM_CHECKBOX),\n      ariaLabelRadioButton: ListItem.i18nBundle.getText(ARIA_LABEL_LIST_ITEM_RADIO_BUTTON),\n      ariaSelectedText: this.ariaSelectedText,\n      ariaHaspopup: this._ariaHasPopup || undefined\n    };\n  }\n  static async onDefine() {\n    ListItem.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n  }\n}\nexport default ListItem;","map":{"version":3,"names":["isSpace","isEnter","isDelete","getI18nBundle","ListItemType","ListMode","ListItemBase","RadioButton","CheckBox","Button","DELETE","ARIA_LABEL_LIST_ITEM_CHECKBOX","ARIA_LABEL_LIST_ITEM_RADIO_BUTTON","LIST_ITEM_SELECTED","LIST_ITEM_NOT_SELECTED","styles","metadata","languageAware","properties","type","defaultValue","Active","active","Boolean","title","String","actionable","role","accessibleRole","_mode","None","_ariaHasPopup","noAttribute","events","_press","_focused","managedSlots","slots","deleteButton","HTMLElement","ListItem","dependencies","constructor","deactivateByKey","event","deactivate","handleTouchStartEvent","_onmousedown","_ontouchstart","handleEvent","passive","onBeforeRendering","Delete","onEnterDOM","document","addEventListener","onExitDOM","removeEventListener","_onkeydown","itemActive","preventDefault","activate","fireItemPress","_onkeyup","modeDelete","onDelete","isMarked","_onmouseup","_ontouchend","_onfocusout","_onclick","onMultiSelectionComponentPress","isInactive","fireEvent","item","selected","target","checked","selectionComponentPressed","onSingleSelectionComponentPress","onDetailClick","key","Inactive","Detail","placeSelectionElementBefore","MultiSelect","SingleSelectBegin","placeSelectionElementAfter","SingleSelectEnd","modeSingleSelect","SingleSelect","includes","modeMultiSelect","renderDeleteButton","disableDeleteButton","typeDetail","typeActive","ariaSelected","undefined","ariaSelectedText","i18nBundle","getText","deleteText","hasDeleteButtonSlot","length","_accessibleNameRef","accessibleName","_id","_accInfo","ariaExpanded","ariaLevel","ariaLabel","ariaLabelRadioButton","ariaHaspopup","onDefine"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/node_modules/@ui5/webcomponents/dist/ListItem.js"],"sourcesContent":["import { isSpace, isEnter, isDelete } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport \"@ui5/webcomponents-icons/dist/decline.js\";\nimport \"@ui5/webcomponents-icons/dist/edit.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport ListItemType from \"./types/ListItemType.js\";\nimport ListMode from \"./types/ListMode.js\";\nimport ListItemBase from \"./ListItemBase.js\";\nimport RadioButton from \"./RadioButton.js\";\nimport CheckBox from \"./CheckBox.js\";\nimport Button from \"./Button.js\";\nimport {\n\tDELETE,\n\tARIA_LABEL_LIST_ITEM_CHECKBOX,\n\tARIA_LABEL_LIST_ITEM_RADIO_BUTTON,\n\tLIST_ITEM_SELECTED,\n\tLIST_ITEM_NOT_SELECTED,\n} from \"./generated/i18n/i18n-defaults.js\";\n\n// Styles\nimport styles from \"./generated/themes/ListItem.css.js\";\n\n/**\n * @public\n */\nconst metadata = {\n\tlanguageAware: true,\n\tproperties: /** @lends sap.ui.webcomponents.main.ListItem.prototype */ {\n\n\t\t/**\n\t\t * Defines the visual indication and behavior of the list items.\n\t\t * Available options are <code>Active</code> (by default), <code>Inactive</code> and <code>Detail</code>.\n\t\t * <br><br>\n\t\t * <b>Note:</b> When set to <code>Active</code>, the item will provide visual response upon press and hover,\n\t\t * while with type <code>Inactive</code> and <code>Detail</code> - will not.\n\t\t *\n\t\t * @type {sap.ui.webcomponents.main.types.ListItemType}\n\t\t * @defaultvalue \"Active\"\n\t\t * @public\n\t\t*/\n\t\ttype: {\n\t\t\ttype: ListItemType,\n\t\t\tdefaultValue: ListItemType.Active,\n\t\t},\n\n\t\t/**\n\t\t * Indicates if the list item is active, e.g pressed down with the mouse or the keyboard keys.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @private\n\t\t*/\n\t\tactive: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines the tooltip of the component.\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @private\n\t\t * @since 1.0.0-rc.15\n\t\t */\n\t\ttitle: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Indicates if the list item is actionable, e.g has hover and pressed effects.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @private\n\t\t*/\n\t\tactionable: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Used to define the role of the list item.\n\t\t *\n\t\t * @private\n\t\t * @type {string}\n\t\t * @defaultvalue \"listitem\"\n\t\t * @since 1.0.0-rc.9\n\t\t *\n\t\t */\n\t\trole: {\n\t\t\ttype: String,\n\t\t\tdefaultValue: \"listitem\",\n\t\t},\n\n\t\t/**\n\t\t * Used to define the role of the list item.\n\t\t *\n\t\t * @private\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @since 1.3.0\n\t\t *\n\t\t */\n\t\taccessibleRole: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t_mode: {\n\t\t\ttype: ListMode,\n\t\t\tdefaultValue: ListMode.None,\n\t\t},\n\n\t\t_ariaHasPopup: {\n\t\t\ttype: String,\n\t\t\tnoAttribute: true,\n\t\t},\n\n\t},\n\tevents: /** @lends sap.ui.webcomponents.main.ListItem.prototype */ {\n\t\t/**\n\t\t * Fired when the user clicks on the detail button when type is <code>Detail</code>.\n\t\t *\n\t\t * @event sap.ui.webcomponents.main.ListItem#detail-click\n\t\t * @public\n\t\t */\n\t\t\"detail-click\": {},\n\t\t_press: {},\n\t\t_focused: {},\n\t\t\"_selection-requested\": {},\n\t},\n\tmanagedSlots: true,\n\tslots: /** @lends sap.ui.webcomponents.main.ListItem.prototype */ {\n\n\t\t/**\n\t\t * Defines the delete button, displayed in \"Delete\" mode.\n\t\t * <b>Note:</b> While the slot allows custom buttons, to match\n\t\t * design guidelines, please use the <code>ui5-button</code> component.\n\t\t * <b>Note:</b> When the slot is not present, a built-in delete button will be displayed.\n\t\t * @type {sap.ui.webcomponents.main.IButton}\n\t\t * @since 1.9.0\n\t\t * @slot\n\t\t * @public\n\t\t */\n\t\tdeleteButton: {\n\t\t\ttype: HTMLElement,\n\t\t},\n\t},\n};\n\n/**\n * @class\n * A class to serve as a base\n * for the <code>StandardListItem</code> and <code>CustomListItem</code> classes.\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.ListItem\n * @extends sap.ui.webcomponents.main.ListItemBase\n * @public\n */\nclass ListItem extends ListItemBase {\n\tstatic get metadata() {\n\t\treturn metadata;\n\t}\n\n\tstatic get styles() {\n\t\treturn [ListItemBase.styles, styles];\n\t}\n\n\tstatic get dependencies() {\n\t\treturn [\n\t\t\tButton,\n\t\t\tRadioButton,\n\t\t\tCheckBox,\n\t\t];\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.deactivateByKey = event => {\n\t\t\tif (isEnter(event)) {\n\t\t\t\tthis.deactivate();\n\t\t\t}\n\t\t};\n\n\t\tthis.deactivate = () => {\n\t\t\tif (this.active) {\n\t\t\t\tthis.active = false;\n\t\t\t}\n\t\t};\n\n\t\tconst handleTouchStartEvent = event => {\n\t\t\tthis._onmousedown(event);\n\t\t};\n\n\t\tthis._ontouchstart = {\n\t\t\thandleEvent: handleTouchStartEvent,\n\t\t\tpassive: true,\n\t\t};\n\t}\n\n\tonBeforeRendering(...params) {\n\t\tthis.actionable = (this.type === ListItemType.Active) && (this._mode !== ListMode.Delete);\n\t}\n\n\tonEnterDOM() {\n\t\tdocument.addEventListener(\"mouseup\", this.deactivate);\n\t\tdocument.addEventListener(\"touchend\", this.deactivate);\n\t\tdocument.addEventListener(\"keyup\", this.deactivateByKey);\n\t}\n\n\tonExitDOM() {\n\t\tdocument.removeEventListener(\"mouseup\", this.deactivate);\n\t\tdocument.removeEventListener(\"keyup\", this.deactivateByKey);\n\t\tdocument.removeEventListener(\"touchend\", this.deactivate);\n\t}\n\n\t_onkeydown(event) {\n\t\tsuper._onkeydown(event);\n\n\t\tconst itemActive = this.type === ListItemType.Active;\n\n\t\tif (isSpace(event)) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t\tif ((isSpace(event) || isEnter(event)) && itemActive) {\n\t\t\tthis.activate();\n\t\t}\n\n\t\tif (isEnter(event)) {\n\t\t\tthis.fireItemPress(event);\n\t\t}\n\t}\n\n\t_onkeyup(event) {\n\t\tif (isSpace(event) || isEnter(event)) {\n\t\t\tthis.deactivate();\n\t\t}\n\n\t\tif (isSpace(event)) {\n\t\t\tthis.fireItemPress(event);\n\t\t}\n\n\t\tif (this.modeDelete && isDelete(event)) {\n\t\t\tthis.onDelete();\n\t\t}\n\t}\n\n\t_onmousedown(event) {\n\t\tif (event.isMarked === \"button\") {\n\t\t\treturn;\n\t\t}\n\t\tthis.activate();\n\t}\n\n\t_onmouseup(event) {\n\t\tif (event.isMarked === \"button\") {\n\t\t\treturn;\n\t\t}\n\t\tthis.deactivate();\n\t}\n\n\t_ontouchend(event) {\n\t\tthis._onmouseup(event);\n\t}\n\n\t_onfocusout() {\n\t\tsuper._onfocusout();\n\t\tthis.deactivate();\n\t}\n\n\t_onclick(event) {\n\t\tif (event.isMarked === \"button\") {\n\t\t\treturn;\n\t\t}\n\t\tthis.fireItemPress(event);\n\t}\n\n\t/*\n\t * Called when selection components in Single (ui5-radio-button)\n\t * and Multi (ui5-checkbox) selection modes are used.\n\t */\n\tonMultiSelectionComponentPress(event) {\n\t\tif (this.isInactive) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.fireEvent(\"_selection-requested\", { item: this, selected: event.target.checked, selectionComponentPressed: true });\n\t}\n\n\tonSingleSelectionComponentPress(event) {\n\t\tif (this.isInactive) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.fireEvent(\"_selection-requested\", { item: this, selected: !event.target.selected, selectionComponentPressed: true });\n\t}\n\n\tactivate() {\n\t\tif (this.type === ListItemType.Active) {\n\t\t\tthis.active = true;\n\t\t}\n\t}\n\n\tonDelete(event) {\n\t\tthis.fireEvent(\"_selection-requested\", { item: this, selectionComponentPressed: false });\n\t}\n\n\tonDetailClick(event) {\n\t\tthis.fireEvent(\"detail-click\", { item: this, selected: this.selected });\n\t}\n\n\tfireItemPress(event) {\n\t\tif (this.isInactive) {\n\t\t\treturn;\n\t\t}\n\n\t\tevent.preventDefault();\n\t\tthis.fireEvent(\"_press\", { item: this, selected: this.selected, key: event.key });\n\t}\n\n\tget isInactive() {\n\t\treturn this.type === ListItemType.Inactive || this.type === ListItemType.Detail;\n\t}\n\n\tget placeSelectionElementBefore() {\n\t\treturn this._mode === ListMode.MultiSelect\n\t\t\t|| this._mode === ListMode.SingleSelectBegin;\n\t}\n\n\tget placeSelectionElementAfter() {\n\t\treturn !this.placeSelectionElementBefore\n\t\t\t&& (this._mode === ListMode.SingleSelectEnd || this._mode === ListMode.Delete);\n\t}\n\n\tget modeSingleSelect() {\n\t\treturn [\n\t\t\tListMode.SingleSelectBegin,\n\t\t\tListMode.SingleSelectEnd,\n\t\t\tListMode.SingleSelect,\n\t\t].includes(this._mode);\n\t}\n\n\tget modeMultiSelect() {\n\t\treturn this._mode === ListMode.MultiSelect;\n\t}\n\n\tget modeDelete() {\n\t\treturn this._mode === ListMode.Delete;\n\t}\n\n\t/**\n\t * Used in UploadCollectionItem\n\t */\n\tget renderDeleteButton() {\n\t\treturn this.modeDelete;\n\t}\n\n\tget disableDeleteButton() {\n\t\treturn false;\n\t}\n\t/**\n\t * End\n\t */\n\n\tget typeDetail() {\n\t\treturn this.type === ListItemType.Detail;\n\t}\n\n\tget typeActive() {\n\t\treturn this.type === ListItemType.Active;\n\t}\n\n\tget ariaSelected() {\n\t\tif (this.modeMultiSelect || this.modeSingleSelect) {\n\t\t\treturn this.selected;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tget ariaSelectedText() {\n\t\tlet ariaSelectedText;\n\n\t\t// Selected state needs to be supported separately since now the role mapping is list -> listitem[]\n\t\t// to avoid the issue of nesting interactive elements, ex. (option -> radio/checkbox);\n\t\t// The text is added to aria-describedby because as part of the aria-labelledby\n\t\t// the whole content of the item is readout when the aria-labelledby value is changed.\n\t\tif (this.ariaSelected !== undefined) {\n\t\t\tariaSelectedText = this.ariaSelected ? ListItem.i18nBundle.getText(LIST_ITEM_SELECTED) : ListItem.i18nBundle.getText(LIST_ITEM_NOT_SELECTED);\n\t\t}\n\n\t\treturn ariaSelectedText;\n\t}\n\n\tget deleteText() {\n\t\treturn ListItem.i18nBundle.getText(DELETE);\n\t}\n\n\tget hasDeleteButtonSlot() {\n\t\treturn !!this.deleteButton.length;\n\t}\n\n\tget _accessibleNameRef() {\n\t\tif (this.accessibleName) {\n\t\t\t// accessibleName is set - return labels excluding content\n\t\t\treturn `${this._id}-invisibleText`;\n\t\t}\n\n\t\t// accessibleName is not set - return _accInfo.listItemAriaLabel including content\n\t\treturn `${this._id}-content ${this._id}-invisibleText`;\n\t}\n\n\tget _accInfo() {\n\t\treturn {\n\t\t\trole: this.accessibleRole || this.role,\n\t\t\tariaExpanded: undefined,\n\t\t\tariaLevel: undefined,\n\t\t\tariaLabel: ListItem.i18nBundle.getText(ARIA_LABEL_LIST_ITEM_CHECKBOX),\n\t\t\tariaLabelRadioButton: ListItem.i18nBundle.getText(ARIA_LABEL_LIST_ITEM_RADIO_BUTTON),\n\t\t\tariaSelectedText: this.ariaSelectedText,\n\t\t\tariaHaspopup: this._ariaHasPopup || undefined,\n\t\t};\n\t}\n\n\tstatic async onDefine() {\n\t\tListItem.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n\t}\n}\n\nexport default ListItem;\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,sCAAsC;AACjF,OAAO,0CAA0C;AACjD,OAAO,uCAAuC;AAC9C,SAASC,aAAa,QAAQ,4CAA4C;AAC1E,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,YAAY,MAAM,mBAAmB;AAC5C,OAAOC,WAAW,MAAM,kBAAkB;AAC1C,OAAOC,QAAQ,MAAM,eAAe;AACpC,OAAOC,MAAM,MAAM,aAAa;AAChC,SACCC,MAAM,EACNC,6BAA6B,EAC7BC,iCAAiC,EACjCC,kBAAkB,EAClBC,sBAAsB,QAChB,mCAAmC;;AAE1C;AACA,OAAOC,MAAM,MAAM,oCAAoC;;AAEvD;AACA;AACA;AACA,MAAMC,QAAQ,GAAG;EAChBC,aAAa,EAAE,IAAI;EACnBC,UAAU,EAAE,0DAA2D;IAEtE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEC,IAAI,EAAE;MACLA,IAAI,EAAEf,YAAY;MAClBgB,YAAY,EAAEhB,YAAY,CAACiB;IAC5B,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;IACEC,MAAM,EAAE;MACPH,IAAI,EAAEI;IACP,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;IACEC,KAAK,EAAE;MACNL,IAAI,EAAEM;IACP,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;IACEC,UAAU,EAAE;MACXP,IAAI,EAAEI;IACP,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEI,IAAI,EAAE;MACLR,IAAI,EAAEM,MAAM;MACZL,YAAY,EAAE;IACf,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEQ,cAAc,EAAE;MACfT,IAAI,EAAEM;IACP,CAAC;IAEDI,KAAK,EAAE;MACNV,IAAI,EAAEd,QAAQ;MACde,YAAY,EAAEf,QAAQ,CAACyB;IACxB,CAAC;IAEDC,aAAa,EAAE;MACdZ,IAAI,EAAEM,MAAM;MACZO,WAAW,EAAE;IACd;EAED,CAAC;EACDC,MAAM,EAAE,0DAA2D;IAClE;AACF;AACA;AACA;AACA;AACA;IACE,cAAc,EAAE,CAAC,CAAC;IAClBC,MAAM,EAAE,CAAC,CAAC;IACVC,QAAQ,EAAE,CAAC,CAAC;IACZ,sBAAsB,EAAE,CAAC;EAC1B,CAAC;EACDC,YAAY,EAAE,IAAI;EAClBC,KAAK,EAAE,0DAA2D;IAEjE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEC,YAAY,EAAE;MACbnB,IAAI,EAAEoB;IACP;EACD;AACD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,QAAQ,SAASlC,YAAY,CAAC;EACnC,WAAWU,QAAQ,GAAG;IACrB,OAAOA,QAAQ;EAChB;EAEA,WAAWD,MAAM,GAAG;IACnB,OAAO,CAACT,YAAY,CAACS,MAAM,EAAEA,MAAM,CAAC;EACrC;EAEA,WAAW0B,YAAY,GAAG;IACzB,OAAO,CACNhC,MAAM,EACNF,WAAW,EACXC,QAAQ,CACR;EACF;EAEAkC,WAAW,GAAG;IACb,KAAK,EAAE;IAEP,IAAI,CAACC,eAAe,GAAGC,KAAK,IAAI;MAC/B,IAAI3C,OAAO,CAAC2C,KAAK,CAAC,EAAE;QACnB,IAAI,CAACC,UAAU,EAAE;MAClB;IACD,CAAC;IAED,IAAI,CAACA,UAAU,GAAG,MAAM;MACvB,IAAI,IAAI,CAACvB,MAAM,EAAE;QAChB,IAAI,CAACA,MAAM,GAAG,KAAK;MACpB;IACD,CAAC;IAED,MAAMwB,qBAAqB,GAAGF,KAAK,IAAI;MACtC,IAAI,CAACG,YAAY,CAACH,KAAK,CAAC;IACzB,CAAC;IAED,IAAI,CAACI,aAAa,GAAG;MACpBC,WAAW,EAAEH,qBAAqB;MAClCI,OAAO,EAAE;IACV,CAAC;EACF;EAEAC,iBAAiB,GAAY;IAC5B,IAAI,CAACzB,UAAU,GAAI,IAAI,CAACP,IAAI,KAAKf,YAAY,CAACiB,MAAM,IAAM,IAAI,CAACQ,KAAK,KAAKxB,QAAQ,CAAC+C,MAAO;EAC1F;EAEAC,UAAU,GAAG;IACZC,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAACV,UAAU,CAAC;IACrDS,QAAQ,CAACC,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAACV,UAAU,CAAC;IACtDS,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAACZ,eAAe,CAAC;EACzD;EAEAa,SAAS,GAAG;IACXF,QAAQ,CAACG,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAACZ,UAAU,CAAC;IACxDS,QAAQ,CAACG,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAACd,eAAe,CAAC;IAC3DW,QAAQ,CAACG,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAACZ,UAAU,CAAC;EAC1D;EAEAa,UAAU,CAACd,KAAK,EAAE;IACjB,KAAK,CAACc,UAAU,CAACd,KAAK,CAAC;IAEvB,MAAMe,UAAU,GAAG,IAAI,CAACxC,IAAI,KAAKf,YAAY,CAACiB,MAAM;IAEpD,IAAIrB,OAAO,CAAC4C,KAAK,CAAC,EAAE;MACnBA,KAAK,CAACgB,cAAc,EAAE;IACvB;IAEA,IAAI,CAAC5D,OAAO,CAAC4C,KAAK,CAAC,IAAI3C,OAAO,CAAC2C,KAAK,CAAC,KAAKe,UAAU,EAAE;MACrD,IAAI,CAACE,QAAQ,EAAE;IAChB;IAEA,IAAI5D,OAAO,CAAC2C,KAAK,CAAC,EAAE;MACnB,IAAI,CAACkB,aAAa,CAAClB,KAAK,CAAC;IAC1B;EACD;EAEAmB,QAAQ,CAACnB,KAAK,EAAE;IACf,IAAI5C,OAAO,CAAC4C,KAAK,CAAC,IAAI3C,OAAO,CAAC2C,KAAK,CAAC,EAAE;MACrC,IAAI,CAACC,UAAU,EAAE;IAClB;IAEA,IAAI7C,OAAO,CAAC4C,KAAK,CAAC,EAAE;MACnB,IAAI,CAACkB,aAAa,CAAClB,KAAK,CAAC;IAC1B;IAEA,IAAI,IAAI,CAACoB,UAAU,IAAI9D,QAAQ,CAAC0C,KAAK,CAAC,EAAE;MACvC,IAAI,CAACqB,QAAQ,EAAE;IAChB;EACD;EAEAlB,YAAY,CAACH,KAAK,EAAE;IACnB,IAAIA,KAAK,CAACsB,QAAQ,KAAK,QAAQ,EAAE;MAChC;IACD;IACA,IAAI,CAACL,QAAQ,EAAE;EAChB;EAEAM,UAAU,CAACvB,KAAK,EAAE;IACjB,IAAIA,KAAK,CAACsB,QAAQ,KAAK,QAAQ,EAAE;MAChC;IACD;IACA,IAAI,CAACrB,UAAU,EAAE;EAClB;EAEAuB,WAAW,CAACxB,KAAK,EAAE;IAClB,IAAI,CAACuB,UAAU,CAACvB,KAAK,CAAC;EACvB;EAEAyB,WAAW,GAAG;IACb,KAAK,CAACA,WAAW,EAAE;IACnB,IAAI,CAACxB,UAAU,EAAE;EAClB;EAEAyB,QAAQ,CAAC1B,KAAK,EAAE;IACf,IAAIA,KAAK,CAACsB,QAAQ,KAAK,QAAQ,EAAE;MAChC;IACD;IACA,IAAI,CAACJ,aAAa,CAAClB,KAAK,CAAC;EAC1B;;EAEA;AACD;AACA;AACA;EACC2B,8BAA8B,CAAC3B,KAAK,EAAE;IACrC,IAAI,IAAI,CAAC4B,UAAU,EAAE;MACpB;IACD;IAEA,IAAI,CAACC,SAAS,CAAC,sBAAsB,EAAE;MAAEC,IAAI,EAAE,IAAI;MAAEC,QAAQ,EAAE/B,KAAK,CAACgC,MAAM,CAACC,OAAO;MAAEC,yBAAyB,EAAE;IAAK,CAAC,CAAC;EACxH;EAEAC,+BAA+B,CAACnC,KAAK,EAAE;IACtC,IAAI,IAAI,CAAC4B,UAAU,EAAE;MACpB;IACD;IAEA,IAAI,CAACC,SAAS,CAAC,sBAAsB,EAAE;MAAEC,IAAI,EAAE,IAAI;MAAEC,QAAQ,EAAE,CAAC/B,KAAK,CAACgC,MAAM,CAACD,QAAQ;MAAEG,yBAAyB,EAAE;IAAK,CAAC,CAAC;EAC1H;EAEAjB,QAAQ,GAAG;IACV,IAAI,IAAI,CAAC1C,IAAI,KAAKf,YAAY,CAACiB,MAAM,EAAE;MACtC,IAAI,CAACC,MAAM,GAAG,IAAI;IACnB;EACD;EAEA2C,QAAQ,CAACrB,KAAK,EAAE;IACf,IAAI,CAAC6B,SAAS,CAAC,sBAAsB,EAAE;MAAEC,IAAI,EAAE,IAAI;MAAEI,yBAAyB,EAAE;IAAM,CAAC,CAAC;EACzF;EAEAE,aAAa,CAACpC,KAAK,EAAE;IACpB,IAAI,CAAC6B,SAAS,CAAC,cAAc,EAAE;MAAEC,IAAI,EAAE,IAAI;MAAEC,QAAQ,EAAE,IAAI,CAACA;IAAS,CAAC,CAAC;EACxE;EAEAb,aAAa,CAAClB,KAAK,EAAE;IACpB,IAAI,IAAI,CAAC4B,UAAU,EAAE;MACpB;IACD;IAEA5B,KAAK,CAACgB,cAAc,EAAE;IACtB,IAAI,CAACa,SAAS,CAAC,QAAQ,EAAE;MAAEC,IAAI,EAAE,IAAI;MAAEC,QAAQ,EAAE,IAAI,CAACA,QAAQ;MAAEM,GAAG,EAAErC,KAAK,CAACqC;IAAI,CAAC,CAAC;EAClF;EAEA,IAAIT,UAAU,GAAG;IAChB,OAAO,IAAI,CAACrD,IAAI,KAAKf,YAAY,CAAC8E,QAAQ,IAAI,IAAI,CAAC/D,IAAI,KAAKf,YAAY,CAAC+E,MAAM;EAChF;EAEA,IAAIC,2BAA2B,GAAG;IACjC,OAAO,IAAI,CAACvD,KAAK,KAAKxB,QAAQ,CAACgF,WAAW,IACtC,IAAI,CAACxD,KAAK,KAAKxB,QAAQ,CAACiF,iBAAiB;EAC9C;EAEA,IAAIC,0BAA0B,GAAG;IAChC,OAAO,CAAC,IAAI,CAACH,2BAA2B,KACnC,IAAI,CAACvD,KAAK,KAAKxB,QAAQ,CAACmF,eAAe,IAAI,IAAI,CAAC3D,KAAK,KAAKxB,QAAQ,CAAC+C,MAAM,CAAC;EAChF;EAEA,IAAIqC,gBAAgB,GAAG;IACtB,OAAO,CACNpF,QAAQ,CAACiF,iBAAiB,EAC1BjF,QAAQ,CAACmF,eAAe,EACxBnF,QAAQ,CAACqF,YAAY,CACrB,CAACC,QAAQ,CAAC,IAAI,CAAC9D,KAAK,CAAC;EACvB;EAEA,IAAI+D,eAAe,GAAG;IACrB,OAAO,IAAI,CAAC/D,KAAK,KAAKxB,QAAQ,CAACgF,WAAW;EAC3C;EAEA,IAAIrB,UAAU,GAAG;IAChB,OAAO,IAAI,CAACnC,KAAK,KAAKxB,QAAQ,CAAC+C,MAAM;EACtC;;EAEA;AACD;AACA;EACC,IAAIyC,kBAAkB,GAAG;IACxB,OAAO,IAAI,CAAC7B,UAAU;EACvB;EAEA,IAAI8B,mBAAmB,GAAG;IACzB,OAAO,KAAK;EACb;EACA;AACD;AACA;;EAEC,IAAIC,UAAU,GAAG;IAChB,OAAO,IAAI,CAAC5E,IAAI,KAAKf,YAAY,CAAC+E,MAAM;EACzC;EAEA,IAAIa,UAAU,GAAG;IAChB,OAAO,IAAI,CAAC7E,IAAI,KAAKf,YAAY,CAACiB,MAAM;EACzC;EAEA,IAAI4E,YAAY,GAAG;IAClB,IAAI,IAAI,CAACL,eAAe,IAAI,IAAI,CAACH,gBAAgB,EAAE;MAClD,OAAO,IAAI,CAACd,QAAQ;IACrB;IAEA,OAAOuB,SAAS;EACjB;EAEA,IAAIC,gBAAgB,GAAG;IACtB,IAAIA,gBAAgB;;IAEpB;IACA;IACA;IACA;IACA,IAAI,IAAI,CAACF,YAAY,KAAKC,SAAS,EAAE;MACpCC,gBAAgB,GAAG,IAAI,CAACF,YAAY,GAAGzD,QAAQ,CAAC4D,UAAU,CAACC,OAAO,CAACxF,kBAAkB,CAAC,GAAG2B,QAAQ,CAAC4D,UAAU,CAACC,OAAO,CAACvF,sBAAsB,CAAC;IAC7I;IAEA,OAAOqF,gBAAgB;EACxB;EAEA,IAAIG,UAAU,GAAG;IAChB,OAAO9D,QAAQ,CAAC4D,UAAU,CAACC,OAAO,CAAC3F,MAAM,CAAC;EAC3C;EAEA,IAAI6F,mBAAmB,GAAG;IACzB,OAAO,CAAC,CAAC,IAAI,CAACjE,YAAY,CAACkE,MAAM;EAClC;EAEA,IAAIC,kBAAkB,GAAG;IACxB,IAAI,IAAI,CAACC,cAAc,EAAE;MACxB;MACA,OAAQ,GAAE,IAAI,CAACC,GAAI,gBAAe;IACnC;;IAEA;IACA,OAAQ,GAAE,IAAI,CAACA,GAAI,YAAW,IAAI,CAACA,GAAI,gBAAe;EACvD;EAEA,IAAIC,QAAQ,GAAG;IACd,OAAO;MACNjF,IAAI,EAAE,IAAI,CAACC,cAAc,IAAI,IAAI,CAACD,IAAI;MACtCkF,YAAY,EAAEX,SAAS;MACvBY,SAAS,EAAEZ,SAAS;MACpBa,SAAS,EAAEvE,QAAQ,CAAC4D,UAAU,CAACC,OAAO,CAAC1F,6BAA6B,CAAC;MACrEqG,oBAAoB,EAAExE,QAAQ,CAAC4D,UAAU,CAACC,OAAO,CAACzF,iCAAiC,CAAC;MACpFuF,gBAAgB,EAAE,IAAI,CAACA,gBAAgB;MACvCc,YAAY,EAAE,IAAI,CAAClF,aAAa,IAAImE;IACrC,CAAC;EACF;EAEA,aAAagB,QAAQ,GAAG;IACvB1E,QAAQ,CAAC4D,UAAU,GAAG,MAAMjG,aAAa,CAAC,oBAAoB,CAAC;EAChE;AACD;AAEA,eAAeqC,QAAQ"},"metadata":{},"sourceType":"module"}