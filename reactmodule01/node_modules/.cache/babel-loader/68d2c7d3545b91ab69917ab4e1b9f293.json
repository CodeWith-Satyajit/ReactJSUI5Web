{"ast":null,"code":"import '@ui5/webcomponents-icons/dist/overflow.js';\nimport { Device, useIsomorphicId } from '@ui5/webcomponents-react-base';\nimport clsx from 'clsx';\nimport React, { cloneElement, useCallback, useEffect, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { ButtonDesign, PopoverPlacementType } from '../../enums';\nimport { OverflowPopoverContext } from '../../internal/OverflowPopoverContext';\nimport { stopPropagation } from '../../internal/stopPropagation';\nimport { Popover, ToggleButton } from '../../webComponents';\nconst isPhone = Device.isPhone();\nexport const OverflowPopover = props => {\n  var _a, _b, _c, _d;\n  const {\n    lastVisibleIndex,\n    classes,\n    children,\n    portalContainer,\n    overflowContentRef,\n    numberOfAlwaysVisibleItems,\n    showMoreText,\n    overflowPopoverRef,\n    overflowButton\n  } = props;\n  const uniqueId = useIsomorphicId();\n  const [pressed, setPressed] = useState(false);\n  const toggleBtnRef = useRef(null);\n  const handleToggleButtonClick = e => {\n    e.stopPropagation();\n    if (!pressed) {\n      setPressed(true);\n    } else {\n      setPressed(false);\n    }\n  };\n  const handleBeforeOpen = () => {\n    if (toggleBtnRef.current) {\n      toggleBtnRef.current.accessibilityAttributes = {\n        expanded: true,\n        hasPopup: 'menu'\n      };\n    }\n  };\n  const handleAfterOpen = () => {\n    setPressed(true);\n  };\n  const handleClose = e => {\n    if (toggleBtnRef.current) {\n      toggleBtnRef.current.accessibilityAttributes = {\n        expanded: false,\n        hasPopup: 'menu'\n      };\n    }\n    stopPropagation(e);\n    setPressed(false);\n  };\n  const renderChildren = useCallback(() => {\n    return children.map((item, index) => {\n      if (index > lastVisibleIndex && index > numberOfAlwaysVisibleItems - 1) {\n        if (item.type.displayName === 'ToolbarSeparator') {\n          return React.cloneElement(item, {\n            style: {\n              height: '0.0625rem',\n              margin: '0.375rem 0.1875rem',\n              width: '100%'\n            }\n          });\n        }\n        return item;\n      }\n      return null;\n    });\n  }, [children, lastVisibleIndex]);\n  useEffect(() => {\n    customElements.whenDefined('ui5-toggle-button').then(() => {\n      if (toggleBtnRef.current) {\n        toggleBtnRef.current.accessibilityAttributes = {\n          expanded: pressed,\n          hasPopup: 'menu'\n        };\n      }\n    });\n  }, []);\n  const clonedOverflowButtonClick = e => {\n    var _a;\n    if (typeof ((_a = overflowButton === null || overflowButton === void 0 ? void 0 : overflowButton.props) === null || _a === void 0 ? void 0 : _a.onClick) === 'function') {\n      overflowButton.props.onClick(e);\n    }\n    if (!e.defaultPrevented) {\n      handleToggleButtonClick(e);\n    }\n  };\n  return React.createElement(OverflowPopoverContext.Provider, {\n    value: {\n      inPopover: true\n    }\n  }, overflowButton ? cloneElement(overflowButton, {\n    onClick: clonedOverflowButtonClick,\n    id: (_b = (_a = overflowButton === null || overflowButton === void 0 ? void 0 : overflowButton.props) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : uniqueId\n  }) : React.createElement(ToggleButton, {\n    ref: toggleBtnRef,\n    design: ButtonDesign.Transparent,\n    icon: \"overflow\",\n    onClick: handleToggleButtonClick,\n    pressed: pressed,\n    accessibleName: showMoreText,\n    tooltip: showMoreText,\n    id: uniqueId\n  }), createPortal(React.createElement(Popover, {\n    className: clsx(classes.popover, isPhone && classes.popoverPhone),\n    placementType: PopoverPlacementType.Bottom,\n    ref: overflowPopoverRef,\n    open: pressed,\n    opener: (_d = (_c = overflowButton === null || overflowButton === void 0 ? void 0 : overflowButton.props) === null || _c === void 0 ? void 0 : _c.id) !== null && _d !== void 0 ? _d : uniqueId,\n    onAfterClose: handleClose,\n    onBeforeOpen: handleBeforeOpen,\n    onAfterOpen: handleAfterOpen,\n    hideArrow: true\n  }, React.createElement(\"div\", {\n    className: classes.popoverContent,\n    ref: overflowContentRef\n  }, renderChildren())), portalContainer));\n};","map":{"version":3,"names":["Device","useIsomorphicId","clsx","React","cloneElement","useCallback","useEffect","useRef","useState","createPortal","ButtonDesign","PopoverPlacementType","OverflowPopoverContext","stopPropagation","Popover","ToggleButton","isPhone","OverflowPopover","props","_a","_b","_c","_d","lastVisibleIndex","classes","children","portalContainer","overflowContentRef","numberOfAlwaysVisibleItems","showMoreText","overflowPopoverRef","overflowButton","uniqueId","pressed","setPressed","toggleBtnRef","handleToggleButtonClick","e","handleBeforeOpen","current","accessibilityAttributes","expanded","hasPopup","handleAfterOpen","handleClose","renderChildren","map","item","index","type","displayName","style","height","margin","width","customElements","whenDefined","then","clonedOverflowButtonClick","onClick","defaultPrevented","createElement","Provider","value","inPopover","id","ref","design","Transparent","icon","accessibleName","tooltip","className","popover","popoverPhone","placementType","Bottom","open","opener","onAfterClose","onBeforeOpen","onAfterOpen","hideArrow","popoverContent"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/node_modules/@ui5/webcomponents-react/dist/components/Toolbar/OverflowPopover.js"],"sourcesContent":["import '@ui5/webcomponents-icons/dist/overflow.js';\nimport { Device, useIsomorphicId } from '@ui5/webcomponents-react-base';\nimport clsx from 'clsx';\nimport React, { cloneElement, useCallback, useEffect, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { ButtonDesign, PopoverPlacementType } from '../../enums';\nimport { OverflowPopoverContext } from '../../internal/OverflowPopoverContext';\nimport { stopPropagation } from '../../internal/stopPropagation';\nimport { Popover, ToggleButton } from '../../webComponents';\nconst isPhone = Device.isPhone();\nexport const OverflowPopover = (props) => {\n    var _a, _b, _c, _d;\n    const { lastVisibleIndex, classes, children, portalContainer, overflowContentRef, numberOfAlwaysVisibleItems, showMoreText, overflowPopoverRef, overflowButton } = props;\n    const uniqueId = useIsomorphicId();\n    const [pressed, setPressed] = useState(false);\n    const toggleBtnRef = useRef(null);\n    const handleToggleButtonClick = (e) => {\n        e.stopPropagation();\n        if (!pressed) {\n            setPressed(true);\n        }\n        else {\n            setPressed(false);\n        }\n    };\n    const handleBeforeOpen = () => {\n        if (toggleBtnRef.current) {\n            toggleBtnRef.current.accessibilityAttributes = { expanded: true, hasPopup: 'menu' };\n        }\n    };\n    const handleAfterOpen = () => {\n        setPressed(true);\n    };\n    const handleClose = (e) => {\n        if (toggleBtnRef.current) {\n            toggleBtnRef.current.accessibilityAttributes = { expanded: false, hasPopup: 'menu' };\n        }\n        stopPropagation(e);\n        setPressed(false);\n    };\n    const renderChildren = useCallback(() => {\n        return children.map((item, index) => {\n            if (index > lastVisibleIndex && index > numberOfAlwaysVisibleItems - 1) {\n                if (item.type.displayName === 'ToolbarSeparator') {\n                    return React.cloneElement(item, {\n                        style: {\n                            height: '0.0625rem',\n                            margin: '0.375rem 0.1875rem',\n                            width: '100%'\n                        }\n                    });\n                }\n                return item;\n            }\n            return null;\n        });\n    }, [children, lastVisibleIndex]);\n    useEffect(() => {\n        customElements.whenDefined('ui5-toggle-button').then(() => {\n            if (toggleBtnRef.current) {\n                toggleBtnRef.current.accessibilityAttributes = { expanded: pressed, hasPopup: 'menu' };\n            }\n        });\n    }, []);\n    const clonedOverflowButtonClick = (e) => {\n        var _a;\n        if (typeof ((_a = overflowButton === null || overflowButton === void 0 ? void 0 : overflowButton.props) === null || _a === void 0 ? void 0 : _a.onClick) === 'function') {\n            overflowButton.props.onClick(e);\n        }\n        if (!e.defaultPrevented) {\n            handleToggleButtonClick(e);\n        }\n    };\n    return (React.createElement(OverflowPopoverContext.Provider, { value: { inPopover: true } },\n        overflowButton ? (cloneElement(overflowButton, { onClick: clonedOverflowButtonClick, id: (_b = (_a = overflowButton === null || overflowButton === void 0 ? void 0 : overflowButton.props) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : uniqueId })) : (React.createElement(ToggleButton, { ref: toggleBtnRef, design: ButtonDesign.Transparent, icon: \"overflow\", onClick: handleToggleButtonClick, pressed: pressed, accessibleName: showMoreText, tooltip: showMoreText, id: uniqueId })),\n        createPortal(React.createElement(Popover, { className: clsx(classes.popover, isPhone && classes.popoverPhone), placementType: PopoverPlacementType.Bottom, ref: overflowPopoverRef, open: pressed, opener: (_d = (_c = overflowButton === null || overflowButton === void 0 ? void 0 : overflowButton.props) === null || _c === void 0 ? void 0 : _c.id) !== null && _d !== void 0 ? _d : uniqueId, onAfterClose: handleClose, onBeforeOpen: handleBeforeOpen, onAfterOpen: handleAfterOpen, hideArrow: true },\n            React.createElement(\"div\", { className: classes.popoverContent, ref: overflowContentRef }, renderChildren())), portalContainer)));\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}