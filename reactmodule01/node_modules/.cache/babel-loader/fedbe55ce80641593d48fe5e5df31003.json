{"ast":null,"code":"import { actions } from 'react-table';\nexport const stateReducer = (prevState, action) => {\n  const {\n    payload\n  } = action;\n  if (prevState.isRtl && action.type === actions.columnResizing) {\n    const {\n      clientX\n    } = action;\n    const {\n      startX,\n      columnWidth,\n      headerIdWidths\n    } = prevState.columnResizing;\n    const deltaX = startX - clientX;\n    const percentageDeltaX = deltaX / columnWidth;\n    const newColumnWidths = {};\n    headerIdWidths.forEach(_ref => {\n      let [headerId, headerWidth] = _ref;\n      newColumnWidths[headerId] = Math.max(headerWidth + headerWidth * percentageDeltaX, 0);\n    });\n    return Object.assign(Object.assign({}, prevState), {\n      columnResizing: Object.assign(Object.assign({}, prevState.columnResizing), {\n        columnWidths: Object.assign(Object.assign({}, prevState.columnResizing.columnWidths), newColumnWidths)\n      })\n    });\n  }\n  switch (action.type) {\n    case 'TABLE_RESIZE':\n      return Object.assign(Object.assign({}, prevState), {\n        tableClientWidth: payload.tableClientWidth\n      });\n    case 'VISIBLE_ROWS':\n      return Object.assign(Object.assign({}, prevState), {\n        visibleRows: payload.visibleRows\n      });\n    case 'TABLE_SCROLLING_ENABLED':\n      return Object.assign(Object.assign({}, prevState), {\n        isScrollable: payload.isScrollable\n      });\n    case 'SET_SELECTED_ROW_IDS':\n      return Object.assign(Object.assign({}, prevState), {\n        selectedRowIds: payload.selectedRowIds\n      });\n    case 'SET_POPIN_COLUMNS':\n      return Object.assign(Object.assign({}, prevState), {\n        popInColumns: payload\n      });\n    case 'INTERACTIVE_ROWS_HAVE_POPIN':\n      return Object.assign(Object.assign({}, prevState), {\n        interactiveRowsHavePopIn: payload\n      });\n    case 'IS_RTL':\n      return Object.assign(Object.assign({}, prevState), {\n        isRtl: payload.isRtl\n      });\n    case 'SUB_COMPONENTS_HEIGHT':\n      return Object.assign(Object.assign({}, prevState), {\n        subComponentsHeight: payload\n      });\n    case 'TABLE_COL_RESIZED':\n      return Object.assign(Object.assign({}, prevState), {\n        tableColResized: payload\n      });\n    case 'SELECT_ROW_CB':\n      return Object.assign(Object.assign({}, prevState), {\n        selectedRowPayload: payload\n      });\n    default:\n      return prevState;\n  }\n};","map":{"version":3,"names":["actions","stateReducer","prevState","action","payload","isRtl","type","columnResizing","clientX","startX","columnWidth","headerIdWidths","deltaX","percentageDeltaX","newColumnWidths","forEach","headerId","headerWidth","Math","max","Object","assign","columnWidths","tableClientWidth","visibleRows","isScrollable","selectedRowIds","popInColumns","interactiveRowsHavePopIn","subComponentsHeight","tableColResized","selectedRowPayload"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/tableReducer/stateReducer.js"],"sourcesContent":["import { actions } from 'react-table';\nexport const stateReducer = (prevState, action) => {\n    const { payload } = action;\n    if (prevState.isRtl && action.type === actions.columnResizing) {\n        const { clientX } = action;\n        const { startX, columnWidth, headerIdWidths } = prevState.columnResizing;\n        const deltaX = startX - clientX;\n        const percentageDeltaX = deltaX / columnWidth;\n        const newColumnWidths = {};\n        headerIdWidths.forEach(([headerId, headerWidth]) => {\n            newColumnWidths[headerId] = Math.max(headerWidth + headerWidth * percentageDeltaX, 0);\n        });\n        return Object.assign(Object.assign({}, prevState), { columnResizing: Object.assign(Object.assign({}, prevState.columnResizing), { columnWidths: Object.assign(Object.assign({}, prevState.columnResizing.columnWidths), newColumnWidths) }) });\n    }\n    switch (action.type) {\n        case 'TABLE_RESIZE':\n            return Object.assign(Object.assign({}, prevState), { tableClientWidth: payload.tableClientWidth });\n        case 'VISIBLE_ROWS':\n            return Object.assign(Object.assign({}, prevState), { visibleRows: payload.visibleRows });\n        case 'TABLE_SCROLLING_ENABLED':\n            return Object.assign(Object.assign({}, prevState), { isScrollable: payload.isScrollable });\n        case 'SET_SELECTED_ROW_IDS':\n            return Object.assign(Object.assign({}, prevState), { selectedRowIds: payload.selectedRowIds });\n        case 'SET_POPIN_COLUMNS':\n            return Object.assign(Object.assign({}, prevState), { popInColumns: payload });\n        case 'INTERACTIVE_ROWS_HAVE_POPIN':\n            return Object.assign(Object.assign({}, prevState), { interactiveRowsHavePopIn: payload });\n        case 'IS_RTL':\n            return Object.assign(Object.assign({}, prevState), { isRtl: payload.isRtl });\n        case 'SUB_COMPONENTS_HEIGHT':\n            return Object.assign(Object.assign({}, prevState), { subComponentsHeight: payload });\n        case 'TABLE_COL_RESIZED':\n            return Object.assign(Object.assign({}, prevState), { tableColResized: payload });\n        case 'SELECT_ROW_CB':\n            return Object.assign(Object.assign({}, prevState), { selectedRowPayload: payload });\n        default:\n            return prevState;\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}