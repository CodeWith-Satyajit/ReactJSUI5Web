{"ast":null,"code":"import { reRenderAllUI5Elements } from \"../Render.js\";\nimport getSharedResource from \"../getSharedResource.js\";\nimport EventProvider from \"../EventProvider.js\";\nconst eventProvider = getSharedResource(\"CustomStyle.eventProvider\", new EventProvider());\nconst CUSTOM_CSS_CHANGE = \"CustomCSSChange\";\nconst attachCustomCSSChange = listener => {\n  eventProvider.attachEvent(CUSTOM_CSS_CHANGE, listener);\n};\nconst detachCustomCSSChange = listener => {\n  eventProvider.detachEvent(CUSTOM_CSS_CHANGE, listener);\n};\nconst fireCustomCSSChange = tag => {\n  return eventProvider.fireEvent(CUSTOM_CSS_CHANGE, tag);\n};\nconst customCSSFor = getSharedResource(\"CustomStyle.customCSSFor\", {});\n\n// Listen to the eventProvider, in case other copies of this CustomStyle module fire this\n// event, and this copy would therefore need to reRender the ui5 webcomponents; but\n// don't reRender if it was this copy that fired the event to begin with.\nlet skipRerender;\nattachCustomCSSChange(tag => {\n  if (!skipRerender) {\n    reRenderAllUI5Elements({\n      tag\n    });\n  }\n});\nconst addCustomCSS = (tag, css) => {\n  if (!customCSSFor[tag]) {\n    customCSSFor[tag] = [];\n  }\n  customCSSFor[tag].push(css);\n  skipRerender = true;\n  try {\n    // The event is fired and the attached event listeners are all called synchronously\n    // The skipRerender flag will be used to avoid calling reRenderAllUI5Elements twice when it is this copy\n    // of CustomStyle.js which is firing the `CustomCSSChange` event.\n    fireCustomCSSChange(tag);\n  } finally {\n    skipRerender = false;\n  }\n  return reRenderAllUI5Elements({\n    tag\n  });\n};\nconst getCustomCSS = tag => {\n  return customCSSFor[tag] ? customCSSFor[tag].join(\"\") : \"\";\n};\nexport { addCustomCSS, getCustomCSS, attachCustomCSSChange, detachCustomCSSChange };","map":{"version":3,"names":["reRenderAllUI5Elements","getSharedResource","EventProvider","eventProvider","CUSTOM_CSS_CHANGE","attachCustomCSSChange","listener","attachEvent","detachCustomCSSChange","detachEvent","fireCustomCSSChange","tag","fireEvent","customCSSFor","skipRerender","addCustomCSS","css","push","getCustomCSS","join"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/node_modules/@ui5/webcomponents-base/dist/theming/CustomStyle.js"],"sourcesContent":["import { reRenderAllUI5Elements } from \"../Render.js\";\nimport getSharedResource from \"../getSharedResource.js\";\nimport EventProvider from \"../EventProvider.js\";\n\nconst eventProvider = getSharedResource(\"CustomStyle.eventProvider\", new EventProvider());\nconst CUSTOM_CSS_CHANGE = \"CustomCSSChange\";\n\nconst attachCustomCSSChange = listener => {\n\teventProvider.attachEvent(CUSTOM_CSS_CHANGE, listener);\n};\n\nconst detachCustomCSSChange = listener => {\n\teventProvider.detachEvent(CUSTOM_CSS_CHANGE, listener);\n};\n\nconst fireCustomCSSChange = tag => {\n\treturn eventProvider.fireEvent(CUSTOM_CSS_CHANGE, tag);\n};\n\nconst customCSSFor = getSharedResource(\"CustomStyle.customCSSFor\", {});\n\n// Listen to the eventProvider, in case other copies of this CustomStyle module fire this\n// event, and this copy would therefore need to reRender the ui5 webcomponents; but\n// don't reRender if it was this copy that fired the event to begin with.\nlet skipRerender;\nattachCustomCSSChange(tag => {\n\tif (!skipRerender) {\n\t\treRenderAllUI5Elements({ tag });\n\t}\n});\n\nconst addCustomCSS = (tag, css) => {\n\tif (!customCSSFor[tag]) {\n\t\tcustomCSSFor[tag] = [];\n\t}\n\tcustomCSSFor[tag].push(css);\n\n\tskipRerender = true;\n\ttry {\n\t\t// The event is fired and the attached event listeners are all called synchronously\n\t\t// The skipRerender flag will be used to avoid calling reRenderAllUI5Elements twice when it is this copy\n\t\t// of CustomStyle.js which is firing the `CustomCSSChange` event.\n\t\tfireCustomCSSChange(tag);\n\t} finally {\n\t\tskipRerender = false;\n\t}\n\n\treturn reRenderAllUI5Elements({ tag });\n};\n\nconst getCustomCSS = tag => {\n\treturn customCSSFor[tag] ? customCSSFor[tag].join(\"\") : \"\";\n};\n\nexport {\n\taddCustomCSS,\n\tgetCustomCSS,\n\tattachCustomCSSChange,\n\tdetachCustomCSSChange,\n};\n"],"mappings":"AAAA,SAASA,sBAAsB,QAAQ,cAAc;AACrD,OAAOC,iBAAiB,MAAM,yBAAyB;AACvD,OAAOC,aAAa,MAAM,qBAAqB;AAE/C,MAAMC,aAAa,GAAGF,iBAAiB,CAAC,2BAA2B,EAAE,IAAIC,aAAa,EAAE,CAAC;AACzF,MAAME,iBAAiB,GAAG,iBAAiB;AAE3C,MAAMC,qBAAqB,GAAGC,QAAQ,IAAI;EACzCH,aAAa,CAACI,WAAW,CAACH,iBAAiB,EAAEE,QAAQ,CAAC;AACvD,CAAC;AAED,MAAME,qBAAqB,GAAGF,QAAQ,IAAI;EACzCH,aAAa,CAACM,WAAW,CAACL,iBAAiB,EAAEE,QAAQ,CAAC;AACvD,CAAC;AAED,MAAMI,mBAAmB,GAAGC,GAAG,IAAI;EAClC,OAAOR,aAAa,CAACS,SAAS,CAACR,iBAAiB,EAAEO,GAAG,CAAC;AACvD,CAAC;AAED,MAAME,YAAY,GAAGZ,iBAAiB,CAAC,0BAA0B,EAAE,CAAC,CAAC,CAAC;;AAEtE;AACA;AACA;AACA,IAAIa,YAAY;AAChBT,qBAAqB,CAACM,GAAG,IAAI;EAC5B,IAAI,CAACG,YAAY,EAAE;IAClBd,sBAAsB,CAAC;MAAEW;IAAI,CAAC,CAAC;EAChC;AACD,CAAC,CAAC;AAEF,MAAMI,YAAY,GAAG,CAACJ,GAAG,EAAEK,GAAG,KAAK;EAClC,IAAI,CAACH,YAAY,CAACF,GAAG,CAAC,EAAE;IACvBE,YAAY,CAACF,GAAG,CAAC,GAAG,EAAE;EACvB;EACAE,YAAY,CAACF,GAAG,CAAC,CAACM,IAAI,CAACD,GAAG,CAAC;EAE3BF,YAAY,GAAG,IAAI;EACnB,IAAI;IACH;IACA;IACA;IACAJ,mBAAmB,CAACC,GAAG,CAAC;EACzB,CAAC,SAAS;IACTG,YAAY,GAAG,KAAK;EACrB;EAEA,OAAOd,sBAAsB,CAAC;IAAEW;EAAI,CAAC,CAAC;AACvC,CAAC;AAED,MAAMO,YAAY,GAAGP,GAAG,IAAI;EAC3B,OAAOE,YAAY,CAACF,GAAG,CAAC,GAAGE,YAAY,CAACF,GAAG,CAAC,CAACQ,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE;AAC3D,CAAC;AAED,SACCJ,YAAY,EACZG,YAAY,EACZb,qBAAqB,EACrBG,qBAAqB"},"metadata":{},"sourceType":"module"}