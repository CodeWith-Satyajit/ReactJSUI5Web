{"ast":null,"code":"import { Children, cloneElement, Fragment } from 'react';\nexport function flattenFragments(children) {\n  let depth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  const flatChildren = [];\n  const removeFragments = function (element) {\n    let level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    var _a;\n    if (!element) {\n      return;\n    }\n    if (Array.isArray(element)) {\n      Children.toArray(element).forEach((child, index) => {\n        removeFragments(child, level + 1, [...key, index]);\n      });\n      return;\n    }\n    if (element.type === Fragment && level <= depth) {\n      Children.toArray((_a = element.props) === null || _a === void 0 ? void 0 : _a.children).forEach((item, index) => {\n        removeFragments(item, level + 1, [...key, index]);\n      });\n    } else if (typeof element === 'string' || typeof element === 'number') {\n      flatChildren.push(element);\n    } else {\n      flatChildren.push(cloneElement(element, {\n        key: key.join('.')\n      }));\n    }\n  };\n  removeFragments(children);\n  return flatChildren;\n}","map":{"version":3,"names":["Children","cloneElement","Fragment","flattenFragments","children","depth","flatChildren","removeFragments","element","level","key","_a","Array","isArray","toArray","forEach","child","index","type","props","item","push","join"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/node_modules/@ui5/webcomponents-react/dist/internal/utils.js"],"sourcesContent":["import { Children, cloneElement, Fragment } from 'react';\nexport function flattenFragments(children, depth = 1) {\n    const flatChildren = [];\n    const removeFragments = (element, level = 0, key = []) => {\n        var _a;\n        if (!element) {\n            return;\n        }\n        if (Array.isArray(element)) {\n            Children.toArray(element).forEach((child, index) => {\n                removeFragments(child, level + 1, [...key, index]);\n            });\n            return;\n        }\n        if (element.type === Fragment && level <= depth) {\n            Children.toArray((_a = element.props) === null || _a === void 0 ? void 0 : _a.children).forEach((item, index) => {\n                removeFragments(item, level + 1, [...key, index]);\n            });\n        }\n        else if (typeof element === 'string' || typeof element === 'number') {\n            flatChildren.push(element);\n        }\n        else {\n            flatChildren.push(cloneElement(element, { key: key.join('.') }));\n        }\n    };\n    removeFragments(children);\n    return flatChildren;\n}\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,YAAY,EAAEC,QAAQ,QAAQ,OAAO;AACxD,OAAO,SAASC,gBAAgB,CAACC,QAAQ,EAAa;EAAA,IAAXC,KAAK,uEAAG,CAAC;EAChD,MAAMC,YAAY,GAAG,EAAE;EACvB,MAAMC,eAAe,GAAG,UAACC,OAAO,EAA0B;IAAA,IAAxBC,KAAK,uEAAG,CAAC;IAAA,IAAEC,GAAG,uEAAG,EAAE;IACjD,IAAIC,EAAE;IACN,IAAI,CAACH,OAAO,EAAE;MACV;IACJ;IACA,IAAII,KAAK,CAACC,OAAO,CAACL,OAAO,CAAC,EAAE;MACxBR,QAAQ,CAACc,OAAO,CAACN,OAAO,CAAC,CAACO,OAAO,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;QAChDV,eAAe,CAACS,KAAK,EAAEP,KAAK,GAAG,CAAC,EAAE,CAAC,GAAGC,GAAG,EAAEO,KAAK,CAAC,CAAC;MACtD,CAAC,CAAC;MACF;IACJ;IACA,IAAIT,OAAO,CAACU,IAAI,KAAKhB,QAAQ,IAAIO,KAAK,IAAIJ,KAAK,EAAE;MAC7CL,QAAQ,CAACc,OAAO,CAAC,CAACH,EAAE,GAAGH,OAAO,CAACW,KAAK,MAAM,IAAI,IAAIR,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACP,QAAQ,CAAC,CAACW,OAAO,CAAC,CAACK,IAAI,EAAEH,KAAK,KAAK;QAC7GV,eAAe,CAACa,IAAI,EAAEX,KAAK,GAAG,CAAC,EAAE,CAAC,GAAGC,GAAG,EAAEO,KAAK,CAAC,CAAC;MACrD,CAAC,CAAC;IACN,CAAC,MACI,IAAI,OAAOT,OAAO,KAAK,QAAQ,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;MACjEF,YAAY,CAACe,IAAI,CAACb,OAAO,CAAC;IAC9B,CAAC,MACI;MACDF,YAAY,CAACe,IAAI,CAACpB,YAAY,CAACO,OAAO,EAAE;QAAEE,GAAG,EAAEA,GAAG,CAACY,IAAI,CAAC,GAAG;MAAE,CAAC,CAAC,CAAC;IACpE;EACJ,CAAC;EACDf,eAAe,CAACH,QAAQ,CAAC;EACzB,OAAOE,YAAY;AACvB"},"metadata":{},"sourceType":"module"}