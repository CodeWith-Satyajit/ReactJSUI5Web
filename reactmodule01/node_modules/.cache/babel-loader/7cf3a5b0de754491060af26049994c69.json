{"ast":null,"code":"var _jsxFileName = \"/home/user/projects/reactwithcap01/reactmodule01/src/LoaderComponent.js\",\n  _s = $RefreshSig$();\nimport { Card, Loader, CardHeader, FlexBox, Text, Icon, useStat } from '@ui5/webcomponents-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoaderComponent = () => {\n  _s();\n  const initialText = 'This is a text that will be updated 5 seconds after the header is clicked. The text will be visible until the new text has been fetched. To let the user know that the text is updating, the Loader will be displayed.';\n  const [text, setText] = useState(initialText);\n  const [loading, setLoading] = useState(false);\n  const onHeaderClick = () => {\n    setLoading(true);\n  };\n  useEffect(() => {\n    if (loading) {\n      setTimeout(() => {\n        setText(prev => prev === initialText ? 'Updated (⌐■_■)' : initialText);\n        setLoading(false);\n      }, 5000);\n    }\n  }, [loading]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    header: /*#__PURE__*/_jsxDEV(CardHeader, {\n      titleText: \"Click the header to update the text below.\",\n      interactive: true,\n      avatar: /*#__PURE__*/_jsxDEV(Icon, {\n        name: \"activate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this),\n      onClick: onHeaderClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this),\n    style: {\n      width: '400px'\n    },\n    children: /*#__PURE__*/_jsxDEV(FlexBox, {\n      direction: FlexBoxDirection.Column,\n      children: [loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        style: spacing.sapUiContentPadding,\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n};\n_s(LoaderComponent, \"Uo/uAtYyypVKIpxCSAqF5Qxhtqg=\");\n_c = LoaderComponent;\nexport default LoaderComponent;\nvar _c;\n$RefreshReg$(_c, \"LoaderComponent\");","map":{"version":3,"names":["Card","Loader","CardHeader","FlexBox","Text","Icon","useStat","LoaderComponent","initialText","text","setText","useState","loading","setLoading","onHeaderClick","useEffect","setTimeout","prev","width","FlexBoxDirection","Column","spacing","sapUiContentPadding"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/src/LoaderComponent.js"],"sourcesContent":["import { Card, Loader, CardHeader, FlexBox ,Text, Icon, useStat } from '@ui5/webcomponents-react';\n\n\nconst LoaderComponent = () => {\n    const initialText =\n      'This is a text that will be updated 5 seconds after the header is clicked. The text will be visible until the new text has been fetched. To let the user know that the text is updating, the Loader will be displayed.';\n    const [text, setText] = useState(initialText);\n    const [loading, setLoading] = useState(false);\n    const onHeaderClick = () => {\n      setLoading(true);\n    };\n    useEffect(() => {\n      if (loading) {\n        setTimeout(() => {\n          setText((prev) => (prev === initialText ? 'Updated (⌐■_■)' : initialText));\n          setLoading(false);\n        }, 5000);\n      }\n    }, [loading]);\n    return (\n      <Card\n        header={\n          <CardHeader\n            titleText=\"Click the header to update the text below.\"\n            interactive\n            avatar={<Icon name=\"activate\" />}\n            onClick={onHeaderClick}\n          />\n        }\n        style={{ width: '400px' }}\n      >\n        <FlexBox direction={FlexBoxDirection.Column}>\n          {loading && <Loader />}\n          <Text style={spacing.sapUiContentPadding}>{text}</Text>\n        </FlexBox>\n      </Card>\n    );\n  };\n  export default LoaderComponent;"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAEC,IAAI,EAAEC,IAAI,EAAEC,OAAO,QAAQ,0BAA0B;AAAC;AAGlG,MAAMC,eAAe,GAAG,MAAM;EAAA;EAC1B,MAAMC,WAAW,GACf,wNAAwN;EAC1N,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAACH,WAAW,CAAC;EAC7C,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGF,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMG,aAAa,GAAG,MAAM;IAC1BD,UAAU,CAAC,IAAI,CAAC;EAClB,CAAC;EACDE,SAAS,CAAC,MAAM;IACd,IAAIH,OAAO,EAAE;MACXI,UAAU,CAAC,MAAM;QACfN,OAAO,CAAEO,IAAI,IAAMA,IAAI,KAAKT,WAAW,GAAG,gBAAgB,GAAGA,WAAY,CAAC;QAC1EK,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC,EAAE,CAACD,OAAO,CAAC,CAAC;EACb,oBACE,QAAC,IAAI;IACH,MAAM,eACJ,QAAC,UAAU;MACT,SAAS,EAAC,4CAA4C;MACtD,WAAW;MACX,MAAM,eAAE,QAAC,IAAI;QAAC,IAAI,EAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAI;MACjC,OAAO,EAAEE;IAAc;MAAA;MAAA;MAAA;IAAA,QAE1B;IACD,KAAK,EAAE;MAAEI,KAAK,EAAE;IAAQ,CAAE;IAAA,uBAE1B,QAAC,OAAO;MAAC,SAAS,EAAEC,gBAAgB,CAACC,MAAO;MAAA,WACzCR,OAAO,iBAAI,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eACtB,QAAC,IAAI;QAAC,KAAK,EAAES,OAAO,CAACC,mBAAoB;QAAA,UAAEb;MAAI;QAAA;QAAA;QAAA;MAAA,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA;EAC/C;IAAA;IAAA;IAAA;EAAA,QACL;AAEX,CAAC;AAAC,GAlCEF,eAAe;AAAA,KAAfA,eAAe;AAmCnB,eAAeA,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module"}