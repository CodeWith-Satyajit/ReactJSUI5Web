{"ast":null,"code":"import getSharedResource from \"../getSharedResource.js\";\nimport IconCollectionsAlias from \"../assets-meta/IconCollectionsAlias.js\";\nimport { getEffectiveDefaultIconCollection } from \"../config/Icons.js\";\nconst loaders = new Map();\nconst registry = getSharedResource(\"SVGIcons.registry\", new Map());\nconst iconCollectionPromises = getSharedResource(\"SVGIcons.promises\", new Map());\nconst ICON_NOT_FOUND = \"ICON_NOT_FOUND\";\n\n/**\n * @deprecated\n */\nconst registerIconBundle = async (collectionName, bundleData) => {\n  throw new Error(\"This method has been removed. Use `registerIconLoader` instead.\");\n};\nconst registerIconLoader = async (collectionName, loader) => {\n  loaders.set(collectionName, loader);\n};\nconst _loadIconCollectionOnce = async collectionName => {\n  if (!iconCollectionPromises.has(collectionName)) {\n    if (!loaders.has(collectionName)) {\n      throw new Error(`No loader registered for the ${collectionName} icons collection. Probably you forgot to import the \"AllIcons.js\" module for the respective package.`);\n    }\n    const loadIcons = loaders.get(collectionName);\n    iconCollectionPromises.set(collectionName, loadIcons(collectionName));\n  }\n  return iconCollectionPromises.get(collectionName);\n};\nconst _fillRegistry = bundleData => {\n  Object.keys(bundleData.data).forEach(iconName => {\n    const iconData = bundleData.data[iconName];\n    registerIcon(iconName, {\n      pathData: iconData.path || iconData.paths,\n      ltr: iconData.ltr,\n      accData: iconData.acc,\n      collection: bundleData.collection,\n      packageName: bundleData.packageName\n    });\n  });\n};\n\n// set\nconst registerIcon = function (name) {\n  let {\n    pathData,\n    ltr,\n    accData,\n    collection,\n    packageName,\n    customTemplate,\n    viewBox\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  // eslint-disable-line\n  if (!collection) {\n    collection = getEffectiveDefaultIconCollection();\n  }\n  const key = `${collection}/${name}`;\n  registry.set(key, {\n    pathData,\n    ltr,\n    accData,\n    packageName,\n    customTemplate,\n    viewBox\n  });\n};\nconst _parseName = name => {\n  // silently support ui5-compatible URIs\n  if (name.startsWith(\"sap-icon://\")) {\n    name = name.replace(\"sap-icon://\", \"\");\n  }\n  let collection;\n  [name, collection] = name.split(\"/\").reverse();\n  collection = collection || getEffectiveDefaultIconCollection();\n\n  // Normalize collection name.\n  // - resolve `SAP-icons-TNT` to `tnt`.\n  // - resolve `BusinessSuiteInAppSymbols` to `business-suite`.\n  // - resolve `horizon` to `SAP-icons-v5`,\n  // Note: aliases can be made as a feature, if more collections need it or more aliases are needed.\n  collection = _normalizeCollection(collection);\n  name = name.replace(\"icon-\", \"\");\n  const registryKey = `${collection}/${name}`;\n  return {\n    name,\n    collection,\n    registryKey\n  };\n};\nconst getIconDataSync = nameProp => {\n  const {\n    registryKey\n  } = _parseName(nameProp);\n  return registry.get(registryKey);\n};\nconst getIconData = async nameProp => {\n  const {\n    collection,\n    registryKey\n  } = _parseName(nameProp);\n  let iconData = ICON_NOT_FOUND;\n  try {\n    iconData = await _loadIconCollectionOnce(collection);\n  } catch (e) {\n    console.error(e.message); /* eslint-disable-line */\n  }\n\n  if (iconData === ICON_NOT_FOUND) {\n    return iconData;\n  }\n  if (!registry.has(registryKey)) {\n    // not filled by another await. many getters will await on the same loader, but fill only once\n    _fillRegistry(iconData);\n  }\n  return registry.get(registryKey);\n};\n\n// test page usage only\nconst _getRegisteredNames = async () => {\n  // fetch one icon of each collection to trigger the bundle load\n  await getIconData(\"edit\");\n  await getIconData(\"tnt/arrow\");\n  await getIconData(\"business-suite/3d\");\n  return Array.from(registry.keys());\n};\nconst _normalizeCollection = collectionName => {\n  if (IconCollectionsAlias[collectionName]) {\n    return IconCollectionsAlias[collectionName];\n  }\n  return collectionName;\n};\nexport { registerIconBundle, registerIconLoader, getIconData, getIconDataSync, registerIcon, _getRegisteredNames };","map":{"version":3,"names":["getSharedResource","IconCollectionsAlias","getEffectiveDefaultIconCollection","loaders","Map","registry","iconCollectionPromises","ICON_NOT_FOUND","registerIconBundle","collectionName","bundleData","Error","registerIconLoader","loader","set","_loadIconCollectionOnce","has","loadIcons","get","_fillRegistry","Object","keys","data","forEach","iconName","iconData","registerIcon","pathData","path","paths","ltr","accData","acc","collection","packageName","name","customTemplate","viewBox","key","_parseName","startsWith","replace","split","reverse","_normalizeCollection","registryKey","getIconDataSync","nameProp","getIconData","e","console","error","message","_getRegisteredNames","Array","from"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/node_modules/@ui5/webcomponents-base/dist/asset-registries/Icons.js"],"sourcesContent":["import getSharedResource from \"../getSharedResource.js\";\nimport IconCollectionsAlias from \"../assets-meta/IconCollectionsAlias.js\";\nimport { getEffectiveDefaultIconCollection } from \"../config/Icons.js\";\n\nconst loaders = new Map();\nconst registry = getSharedResource(\"SVGIcons.registry\", new Map());\nconst iconCollectionPromises = getSharedResource(\"SVGIcons.promises\", new Map());\n\nconst ICON_NOT_FOUND = \"ICON_NOT_FOUND\";\n\n/**\n * @deprecated\n */\nconst registerIconBundle = async (collectionName, bundleData) => {\n\tthrow new Error(\"This method has been removed. Use `registerIconLoader` instead.\");\n};\n\nconst registerIconLoader = async (collectionName, loader) => {\n\tloaders.set(collectionName, loader);\n};\n\nconst _loadIconCollectionOnce = async collectionName => {\n\tif (!iconCollectionPromises.has(collectionName)) {\n\t\tif (!loaders.has(collectionName)) {\n\t\t\tthrow new Error(`No loader registered for the ${collectionName} icons collection. Probably you forgot to import the \"AllIcons.js\" module for the respective package.`);\n\t\t}\n\t\tconst loadIcons = loaders.get(collectionName);\n\t\ticonCollectionPromises.set(collectionName, loadIcons(collectionName));\n\t}\n\n\treturn iconCollectionPromises.get(collectionName);\n};\n\nconst _fillRegistry = bundleData => {\n\tObject.keys(bundleData.data).forEach(iconName => {\n\t\tconst iconData = bundleData.data[iconName];\n\n\t\tregisterIcon(iconName, {\n\t\t\tpathData: iconData.path || iconData.paths,\n\t\t\tltr: iconData.ltr,\n\t\t\taccData: iconData.acc,\n\t\t\tcollection: bundleData.collection,\n\t\t\tpackageName: bundleData.packageName,\n\t\t });\n\t});\n};\n\n// set\nconst registerIcon = (name, { pathData, ltr, accData, collection, packageName, customTemplate, viewBox } = {}) => { // eslint-disable-line\n\tif (!collection) {\n\t\tcollection = getEffectiveDefaultIconCollection();\n\t}\n\n\tconst key = `${collection}/${name}`;\n\tregistry.set(key, {\n\t\tpathData,\n\t\tltr,\n\t\taccData,\n\t\tpackageName,\n\t\tcustomTemplate,\n\t\tviewBox,\n\t});\n};\n\nconst _parseName = name => {\n\t// silently support ui5-compatible URIs\n\tif (name.startsWith(\"sap-icon://\")) {\n\t\tname = name.replace(\"sap-icon://\", \"\");\n\t}\n\n\tlet collection;\n\t[name, collection] = name.split(\"/\").reverse();\n\tcollection = collection || getEffectiveDefaultIconCollection();\n\n\t// Normalize collection name.\n\t// - resolve `SAP-icons-TNT` to `tnt`.\n\t// - resolve `BusinessSuiteInAppSymbols` to `business-suite`.\n\t// - resolve `horizon` to `SAP-icons-v5`,\n\t// Note: aliases can be made as a feature, if more collections need it or more aliases are needed.\n\tcollection = _normalizeCollection(collection);\n\tname = name.replace(\"icon-\", \"\");\n\n\tconst registryKey = `${collection}/${name}`;\n\treturn { name, collection, registryKey };\n};\n\nconst getIconDataSync = nameProp => {\n\tconst { registryKey } = _parseName(nameProp);\n\treturn registry.get(registryKey);\n};\n\nconst getIconData = async nameProp => {\n\tconst { collection, registryKey } = _parseName(nameProp);\n\n\tlet iconData = ICON_NOT_FOUND;\n\ttry {\n\t\ticonData = await _loadIconCollectionOnce(collection);\n\t} catch (e) {\n\t\tconsole.error(e.message); /* eslint-disable-line */\n\t}\n\n\tif (iconData === ICON_NOT_FOUND) {\n\t\treturn iconData;\n\t}\n\n\tif (!registry.has(registryKey)) {\n\t\t// not filled by another await. many getters will await on the same loader, but fill only once\n\t\t_fillRegistry(iconData);\n\t}\n\treturn registry.get(registryKey);\n};\n\n// test page usage only\nconst _getRegisteredNames = async () => {\n\t// fetch one icon of each collection to trigger the bundle load\n\tawait getIconData(\"edit\");\n\tawait getIconData(\"tnt/arrow\");\n\tawait getIconData(\"business-suite/3d\");\n\treturn Array.from(registry.keys());\n};\n\nconst _normalizeCollection = collectionName => {\n\tif (IconCollectionsAlias[collectionName]) {\n\t\treturn IconCollectionsAlias[collectionName];\n\t}\n\n\treturn collectionName;\n};\n\nexport {\n\tregisterIconBundle,\n\tregisterIconLoader,\n\tgetIconData,\n\tgetIconDataSync,\n\tregisterIcon,\n\t_getRegisteredNames,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}