{"ast":null,"code":"var _jsxFileName = \"/home/user/projects/reactwithcap01/reactmodule01/src/LoaderComponent.js\",\n  _s = $RefreshSig$();\nimport { Card, Loader, CardHeader, FlexBox, Text, Icon, Table, TableColumn, Label, TableCell, TableRow } from '@ui5/webcomponents-react';\nimport React, { useState, useEffect } from 'react';\nimport \"@ui5/webcomponents-icons/dist/AllIcons.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoaderComponent = () => {\n  _s();\n  const initialText = 'This is a text that will be updated 5 seconds after the header is clicked. The text will be visible until the new text has been fetched. To let the user know that the text is updating, the Loader will be displayed.';\n  const [text, setText] = useState(initialText);\n  const [loading, setLoading] = useState(false);\n  const onHeaderClick = () => {\n    setLoading(true);\n  };\n  useEffect(() => {\n    if (loading) {\n      setTimeout(() => {\n        setText(prev => prev === initialText ? 'Updated (⌐■_■)' : initialText);\n        setLoading(false);\n      }, 5000);\n    }\n  }, [loading]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    header: /*#__PURE__*/_jsxDEV(CardHeader, {\n      titleText: \"Click here to update the table below.\",\n      interactive: true,\n      avatar: /*#__PURE__*/_jsxDEV(Icon, {\n        name: \"activate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 29\n      }, this),\n      onClick: onHeaderClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this),\n    style: {\n      width: '1200px'\n    },\n    children: /*#__PURE__*/_jsxDEV(FlexBox, {\n      direction: \"Column\",\n      children: [loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        columns: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(TableColumn, {\n            style: {\n              width: '12rem'\n            },\n            children: /*#__PURE__*/_jsxDEV(Label, {\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 72\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(TableColumn, {\n            minWidth: 800,\n            popinText: \"Supplier\",\n            children: /*#__PURE__*/_jsxDEV(Label, {\n              children: \"Supplier\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 157\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 108\n          }, this), /*#__PURE__*/_jsxDEV(TableColumn, {\n            demandPopin: true,\n            minWidth: 600,\n            popinText: \"Dimensions\",\n            children: /*#__PURE__*/_jsxDEV(Label, {\n              children: \"Dimensions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 257\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 194\n          }, this), /*#__PURE__*/_jsxDEV(TableColumn, {\n            demandPopin: true,\n            minWidth: 600,\n            popinText: \"Weight\",\n            children: /*#__PURE__*/_jsxDEV(Label, {\n              children: \"Weight\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 355\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 296\n          }, this), /*#__PURE__*/_jsxDEV(TableColumn, {\n            children: /*#__PURE__*/_jsxDEV(Label, {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 403\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 390\n          }, this)]\n        }, void 0, true),\n        onLoadMore: function noRefCheck() {},\n        onPopinChange: function noRefCheck() {},\n        onRowClick: function noRefCheck() {},\n        onSelectionChange: function noRefCheck() {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(LoaderComponent, \"Uo/uAtYyypVKIpxCSAqF5Qxhtqg=\");\n_c = LoaderComponent;\nexport default LoaderComponent;\nvar _c;\n$RefreshReg$(_c, \"LoaderComponent\");","map":{"version":3,"names":["Card","Loader","CardHeader","FlexBox","Text","Icon","Table","TableColumn","Label","TableCell","TableRow","React","useState","useEffect","LoaderComponent","initialText","text","setText","loading","setLoading","onHeaderClick","setTimeout","prev","width","noRefCheck"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/src/LoaderComponent.js"],"sourcesContent":["import { Card, Loader, CardHeader, FlexBox, Text, Icon, Table, TableColumn, Label, TableCell, TableRow } from '@ui5/webcomponents-react';\nimport React, { useState, useEffect } from 'react';\nimport \"@ui5/webcomponents-icons/dist/AllIcons.js\";\n\nconst LoaderComponent = () => {\n    const initialText =\n        'This is a text that will be updated 5 seconds after the header is clicked. The text will be visible until the new text has been fetched. To let the user know that the text is updating, the Loader will be displayed.';\n    const [text, setText] = useState(initialText);\n    const [loading, setLoading] = useState(false);\n    const onHeaderClick = () => {\n        setLoading(true);\n    };\n    useEffect(() => {\n        if (loading) {\n            setTimeout(() => {\n                setText((prev) => (prev === initialText ? 'Updated (⌐■_■)' : initialText));\n                setLoading(false);\n            }, 5000);\n        }\n    }, [loading]);\n    return (\n        <Card\n            header={\n                <CardHeader\n                    titleText=\"Click here to update the table below.\"\n                    interactive\n                    avatar={<Icon name=\"activate\" />}\n                    onClick={onHeaderClick}\n                />\n            }\n            style={{ width: '1200px' }}\n        >\n            <FlexBox direction=\"Column\">\n                {loading && <Loader />}\n                {/* <Text style={{}}>{text}</Text> */}\n                <Table\n                    columns={<><TableColumn style={{ width: '12rem' }}><Label>Product</Label></TableColumn><TableColumn minWidth={800} popinText=\"Supplier\"><Label>Supplier</Label></TableColumn><TableColumn demandPopin minWidth={600} popinText=\"Dimensions\"><Label>Dimensions</Label></TableColumn><TableColumn demandPopin minWidth={600} popinText=\"Weight\"><Label>Weight</Label></TableColumn><TableColumn><Label>Price</Label></TableColumn></>}\n                    onLoadMore={function noRefCheck() { }}\n                    onPopinChange={function noRefCheck() { }}\n                    onRowClick={function noRefCheck() { }}\n                    onSelectionChange={function noRefCheck() { }}\n                >\n                    \n                </Table>\n            </FlexBox>\n            {/* <FlexBox>\n          {loading && <Loader />}\n          <Text>{text}</Text>\n        </FlexBox> */}\n        </Card>\n    );\n};\nexport default LoaderComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module"}