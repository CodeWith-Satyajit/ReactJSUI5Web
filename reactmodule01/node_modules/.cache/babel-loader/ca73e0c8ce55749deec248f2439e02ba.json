{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { debounce, enrichEventWithDetails, useI18nBundle, useIsomorphicLayoutEffect, useSyncRef } from '@ui5/webcomponents-react-base';\nimport clsx from 'clsx';\nimport React, { createRef, forwardRef, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { ToolbarDesign, ToolbarStyle } from '../../enums';\nimport { SHOW_MORE } from '../../i18n/i18n-defaults';\nimport { flattenFragments } from '../../internal/utils';\nimport { OverflowPopover } from './OverflowPopover';\nimport { styles } from './Toolbar.jss';\nconst useStyles = createUseStyles(styles, {\n  name: 'Toolbar'\n});\nconst OVERFLOW_BUTTON_WIDTH = 36 + 8 + 8; // width + padding end + spacing start\n/**\n * Horizontal container most commonly used to display buttons, labels, selects and various other input controls.\n *\n * The content of the `Toolbar` moves into the overflow area from right to left when the available space is not enough in the visible area of the container.\n * It can be accessed by the user through the overflow button that opens it in a popover.\n */\nconst Toolbar = forwardRef((props, ref) => {\n  const {\n      children,\n      toolbarStyle,\n      design,\n      active,\n      style,\n      className,\n      onClick,\n      slot,\n      as,\n      portalContainer,\n      numberOfAlwaysVisibleItems,\n      onOverflowChange,\n      overflowPopoverRef,\n      overflowButton\n    } = props,\n    rest = __rest(props, [\"children\", \"toolbarStyle\", \"design\", \"active\", \"style\", \"className\", \"onClick\", \"slot\", \"as\", \"portalContainer\", \"numberOfAlwaysVisibleItems\", \"onOverflowChange\", \"overflowPopoverRef\", \"overflowButton\"]);\n  const classes = useStyles();\n  const [componentRef, outerContainer] = useSyncRef(ref);\n  const controlMetaData = useRef([]);\n  const [lastVisibleIndex, setLastVisibleIndex] = useState(null);\n  const contentRef = useRef(null);\n  const overflowContentRef = useRef(null);\n  const overflowBtnRef = useRef(null);\n  const [minWidth, setMinWidth] = useState('0');\n  const i18nBundle = useI18nBundle('@ui5/webcomponents-react');\n  const showMoreText = i18nBundle.getText(SHOW_MORE);\n  const toolbarClasses = clsx(classes.outerContainer, toolbarStyle === ToolbarStyle.Clear && classes.clear, active && classes.active, design === ToolbarDesign.Solid && classes.solid, design === ToolbarDesign.Transparent && classes.transparent, design === ToolbarDesign.Info && classes.info, className);\n  const flatChildren = useMemo(() => {\n    return flattenFragments(children, 10);\n  }, [children]);\n  const childrenWithRef = useMemo(() => {\n    controlMetaData.current = [];\n    return flatChildren.map((item, index) => {\n      var _a;\n      const itemRef = createRef();\n      const isSpacer = ((_a = item === null || item === void 0 ? void 0 : item.type) === null || _a === void 0 ? void 0 : _a.displayName) === 'ToolbarSpacer';\n      controlMetaData.current.push({\n        ref: itemRef,\n        isSpacer\n      });\n      if (isSpacer) {\n        return item;\n      }\n      return React.createElement(\"div\", {\n        ref: itemRef,\n        key: index,\n        className: classes.childContainer,\n        \"data-component-name\": \"ToolbarChildContainer\"\n      }, item);\n    });\n  }, [flatChildren, controlMetaData, classes.childContainer]);\n  const overflowNeeded = (lastVisibleIndex || lastVisibleIndex === 0) && React.Children.count(childrenWithRef) !== lastVisibleIndex + 1 && numberOfAlwaysVisibleItems < React.Children.count(flatChildren);\n  useEffect(() => {\n    let lastElementResizeObserver;\n    const lastElement = contentRef.current.children[numberOfAlwaysVisibleItems - 1];\n    const debouncedObserverFn = debounce(() => {\n      setMinWidth(`${lastElement.getBoundingClientRect().right + OVERFLOW_BUTTON_WIDTH}px`);\n    }, 200);\n    if (numberOfAlwaysVisibleItems && overflowNeeded && lastElement) {\n      lastElementResizeObserver = new ResizeObserver(debouncedObserverFn);\n      lastElementResizeObserver.observe(contentRef.current);\n    }\n    return () => {\n      debouncedObserverFn.cancel();\n      lastElementResizeObserver === null || lastElementResizeObserver === void 0 ? void 0 : lastElementResizeObserver.disconnect();\n    };\n  }, [numberOfAlwaysVisibleItems, overflowNeeded]);\n  const requestAnimationFrameRef = useRef();\n  const calculateVisibleItems = useCallback(() => {\n    requestAnimationFrameRef.current = requestAnimationFrame(() => {\n      if (!outerContainer.current) return;\n      const availableWidth = outerContainer.current.getBoundingClientRect().width;\n      let consumedWidth = 0;\n      let lastIndex = null;\n      if (availableWidth - OVERFLOW_BUTTON_WIDTH <= 0) {\n        lastIndex = -1;\n      } else {\n        let prevItemsAreSpacer = true;\n        controlMetaData.current.forEach((item, index) => {\n          const currentMeta = controlMetaData.current[index];\n          if (currentMeta && currentMeta.ref && currentMeta.ref.current) {\n            let nextWidth = currentMeta.ref.current.getBoundingClientRect().width;\n            nextWidth += index === 0 || index === controlMetaData.current.length - 1 ? 4 : 8; // first & last element = padding: 4px\n            if (index === controlMetaData.current.length - 1) {\n              if (consumedWidth + nextWidth <= availableWidth - 8) {\n                lastIndex = index;\n              } else if (index === 0 || prevItemsAreSpacer) {\n                lastIndex = index - 1;\n              }\n            } else {\n              if (consumedWidth + nextWidth <= availableWidth - OVERFLOW_BUTTON_WIDTH) {\n                lastIndex = index;\n              }\n              if (consumedWidth < availableWidth - OVERFLOW_BUTTON_WIDTH && consumedWidth + nextWidth >= availableWidth - OVERFLOW_BUTTON_WIDTH) {\n                lastIndex = index - 1;\n              }\n            }\n            if (prevItemsAreSpacer && !item.isSpacer) {\n              prevItemsAreSpacer = false;\n            }\n            consumedWidth += nextWidth;\n          }\n        });\n      }\n      setLastVisibleIndex(lastIndex);\n    });\n  }, [outerContainer.current, controlMetaData.current, setLastVisibleIndex, childrenWithRef, overflowNeeded]);\n  const observer = useRef(new ResizeObserver(calculateVisibleItems));\n  useEffect(() => {\n    if (outerContainer.current) {\n      observer.current.observe(outerContainer.current);\n    }\n    return () => {\n      cancelAnimationFrame(requestAnimationFrameRef.current);\n      observer.current.disconnect();\n    };\n  }, [outerContainer.current]);\n  useIsomorphicLayoutEffect(() => {\n    calculateVisibleItems();\n  }, [calculateVisibleItems]);\n  const handleToolbarClick = useCallback(e => {\n    if (active && typeof onClick === 'function') {\n      onClick(enrichEventWithDetails(e));\n    }\n  }, [onClick, active]);\n  const prevChildren = useRef(flatChildren);\n  const debouncedOverflowChange = useRef(debounce(onOverflowChange, 60));\n  useEffect(() => {\n    debouncedOverflowChange.current = debounce(onOverflowChange, 60);\n  }, [onOverflowChange]);\n  useEffect(() => {\n    var _a, _b;\n    const haveChildrenChanged = prevChildren.current.length !== flatChildren.length;\n    if ((lastVisibleIndex !== null || haveChildrenChanged) && typeof onOverflowChange === 'function') {\n      prevChildren.current = flatChildren;\n      const toolbarChildren = (_a = contentRef.current) === null || _a === void 0 ? void 0 : _a.children;\n      let toolbarElements = [];\n      const overflowElements = (_b = overflowContentRef.current) === null || _b === void 0 ? void 0 : _b.children;\n      if ((toolbarChildren === null || toolbarChildren === void 0 ? void 0 : toolbarChildren.length) > 0) {\n        toolbarElements = Array.from(toolbarChildren).filter((item, index) => index <= lastVisibleIndex);\n      }\n      debouncedOverflowChange.current({\n        toolbarElements,\n        overflowElements,\n        target: outerContainer.current\n      });\n    }\n    return () => {\n      debouncedOverflowChange.current.cancel();\n    };\n  }, [lastVisibleIndex, flatChildren, debouncedOverflowChange]);\n  const CustomTag = as;\n  const styleWithMinWidth = minWidth !== '0' ? Object.assign({\n    minWidth\n  }, style) : style;\n  return React.createElement(CustomTag, Object.assign({\n    style: styleWithMinWidth,\n    className: clsx(toolbarClasses, overflowNeeded && classes.hasOverflow),\n    ref: componentRef,\n    slot: slot,\n    onClick: handleToolbarClick\n  }, rest), React.createElement(\"div\", {\n    className: classes.toolbar,\n    \"data-component-name\": \"ToolbarContent\",\n    ref: contentRef\n  }, overflowNeeded && React.Children.map(childrenWithRef, (item, index) => {\n    if (index >= lastVisibleIndex + 1 && index > numberOfAlwaysVisibleItems - 1) {\n      return React.cloneElement(item, {\n        style: {\n          visibility: 'hidden',\n          position: 'absolute',\n          pointerEvents: 'none'\n        }\n      });\n    }\n    return item;\n  }), !overflowNeeded && childrenWithRef), overflowNeeded && React.createElement(\"div\", {\n    ref: overflowBtnRef,\n    className: classes.overflowButtonContainer,\n    \"data-component-name\": \"ToolbarOverflowButtonContainer\"\n  }, React.createElement(OverflowPopover, {\n    overflowPopoverRef: overflowPopoverRef,\n    lastVisibleIndex: lastVisibleIndex,\n    classes: classes,\n    portalContainer: portalContainer,\n    overflowContentRef: overflowContentRef,\n    numberOfAlwaysVisibleItems: numberOfAlwaysVisibleItems,\n    showMoreText: showMoreText,\n    overflowButton: overflowButton\n  }, flatChildren)));\n});\nToolbar.defaultProps = {\n  as: 'div',\n  toolbarStyle: ToolbarStyle.Standard,\n  design: ToolbarDesign.Auto,\n  active: false,\n  portalContainer: document.body,\n  numberOfAlwaysVisibleItems: 0\n};\nToolbar.displayName = 'Toolbar';\nexport { Toolbar };","map":{"version":3,"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","debounce","enrichEventWithDetails","useI18nBundle","useIsomorphicLayoutEffect","useSyncRef","clsx","React","createRef","forwardRef","useCallback","useEffect","useMemo","useRef","useState","createUseStyles","ToolbarDesign","ToolbarStyle","SHOW_MORE","flattenFragments","OverflowPopover","styles","useStyles","name","OVERFLOW_BUTTON_WIDTH","Toolbar","props","ref","children","toolbarStyle","design","active","style","className","onClick","slot","as","portalContainer","numberOfAlwaysVisibleItems","onOverflowChange","overflowPopoverRef","overflowButton","rest","classes","componentRef","outerContainer","controlMetaData","lastVisibleIndex","setLastVisibleIndex","contentRef","overflowContentRef","overflowBtnRef","minWidth","setMinWidth","i18nBundle","showMoreText","getText","toolbarClasses","Clear","clear","Solid","solid","Transparent","transparent","Info","info","flatChildren","childrenWithRef","current","map","item","index","_a","itemRef","isSpacer","type","displayName","push","createElement","key","childContainer","overflowNeeded","Children","count","lastElementResizeObserver","lastElement","debouncedObserverFn","getBoundingClientRect","right","ResizeObserver","observe","cancel","disconnect","requestAnimationFrameRef","calculateVisibleItems","requestAnimationFrame","availableWidth","width","consumedWidth","lastIndex","prevItemsAreSpacer","forEach","currentMeta","nextWidth","observer","cancelAnimationFrame","handleToolbarClick","prevChildren","debouncedOverflowChange","_b","haveChildrenChanged","toolbarChildren","toolbarElements","overflowElements","Array","from","filter","target","CustomTag","styleWithMinWidth","assign","hasOverflow","toolbar","cloneElement","visibility","position","pointerEvents","overflowButtonContainer","defaultProps","Standard","Auto","document","body"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/node_modules/@ui5/webcomponents-react/dist/components/Toolbar/index.js"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { debounce, enrichEventWithDetails, useI18nBundle, useIsomorphicLayoutEffect, useSyncRef } from '@ui5/webcomponents-react-base';\nimport clsx from 'clsx';\nimport React, { createRef, forwardRef, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { ToolbarDesign, ToolbarStyle } from '../../enums';\nimport { SHOW_MORE } from '../../i18n/i18n-defaults';\nimport { flattenFragments } from '../../internal/utils';\nimport { OverflowPopover } from './OverflowPopover';\nimport { styles } from './Toolbar.jss';\nconst useStyles = createUseStyles(styles, { name: 'Toolbar' });\nconst OVERFLOW_BUTTON_WIDTH = 36 + 8 + 8; // width + padding end + spacing start\n/**\n * Horizontal container most commonly used to display buttons, labels, selects and various other input controls.\n *\n * The content of the `Toolbar` moves into the overflow area from right to left when the available space is not enough in the visible area of the container.\n * It can be accessed by the user through the overflow button that opens it in a popover.\n */\nconst Toolbar = forwardRef((props, ref) => {\n    const { children, toolbarStyle, design, active, style, className, onClick, slot, as, portalContainer, numberOfAlwaysVisibleItems, onOverflowChange, overflowPopoverRef, overflowButton } = props, rest = __rest(props, [\"children\", \"toolbarStyle\", \"design\", \"active\", \"style\", \"className\", \"onClick\", \"slot\", \"as\", \"portalContainer\", \"numberOfAlwaysVisibleItems\", \"onOverflowChange\", \"overflowPopoverRef\", \"overflowButton\"]);\n    const classes = useStyles();\n    const [componentRef, outerContainer] = useSyncRef(ref);\n    const controlMetaData = useRef([]);\n    const [lastVisibleIndex, setLastVisibleIndex] = useState(null);\n    const contentRef = useRef(null);\n    const overflowContentRef = useRef(null);\n    const overflowBtnRef = useRef(null);\n    const [minWidth, setMinWidth] = useState('0');\n    const i18nBundle = useI18nBundle('@ui5/webcomponents-react');\n    const showMoreText = i18nBundle.getText(SHOW_MORE);\n    const toolbarClasses = clsx(classes.outerContainer, toolbarStyle === ToolbarStyle.Clear && classes.clear, active && classes.active, design === ToolbarDesign.Solid && classes.solid, design === ToolbarDesign.Transparent && classes.transparent, design === ToolbarDesign.Info && classes.info, className);\n    const flatChildren = useMemo(() => {\n        return flattenFragments(children, 10);\n    }, [children]);\n    const childrenWithRef = useMemo(() => {\n        controlMetaData.current = [];\n        return flatChildren.map((item, index) => {\n            var _a;\n            const itemRef = createRef();\n            const isSpacer = ((_a = item === null || item === void 0 ? void 0 : item.type) === null || _a === void 0 ? void 0 : _a.displayName) === 'ToolbarSpacer';\n            controlMetaData.current.push({\n                ref: itemRef,\n                isSpacer\n            });\n            if (isSpacer) {\n                return item;\n            }\n            return (React.createElement(\"div\", { ref: itemRef, key: index, className: classes.childContainer, \"data-component-name\": \"ToolbarChildContainer\" }, item));\n        });\n    }, [flatChildren, controlMetaData, classes.childContainer]);\n    const overflowNeeded = (lastVisibleIndex || lastVisibleIndex === 0) &&\n        React.Children.count(childrenWithRef) !== lastVisibleIndex + 1 &&\n        numberOfAlwaysVisibleItems < React.Children.count(flatChildren);\n    useEffect(() => {\n        let lastElementResizeObserver;\n        const lastElement = contentRef.current.children[numberOfAlwaysVisibleItems - 1];\n        const debouncedObserverFn = debounce(() => {\n            setMinWidth(`${lastElement.getBoundingClientRect().right + OVERFLOW_BUTTON_WIDTH}px`);\n        }, 200);\n        if (numberOfAlwaysVisibleItems && overflowNeeded && lastElement) {\n            lastElementResizeObserver = new ResizeObserver(debouncedObserverFn);\n            lastElementResizeObserver.observe(contentRef.current);\n        }\n        return () => {\n            debouncedObserverFn.cancel();\n            lastElementResizeObserver === null || lastElementResizeObserver === void 0 ? void 0 : lastElementResizeObserver.disconnect();\n        };\n    }, [numberOfAlwaysVisibleItems, overflowNeeded]);\n    const requestAnimationFrameRef = useRef();\n    const calculateVisibleItems = useCallback(() => {\n        requestAnimationFrameRef.current = requestAnimationFrame(() => {\n            if (!outerContainer.current)\n                return;\n            const availableWidth = outerContainer.current.getBoundingClientRect().width;\n            let consumedWidth = 0;\n            let lastIndex = null;\n            if (availableWidth - OVERFLOW_BUTTON_WIDTH <= 0) {\n                lastIndex = -1;\n            }\n            else {\n                let prevItemsAreSpacer = true;\n                controlMetaData.current.forEach((item, index) => {\n                    const currentMeta = controlMetaData.current[index];\n                    if (currentMeta && currentMeta.ref && currentMeta.ref.current) {\n                        let nextWidth = currentMeta.ref.current.getBoundingClientRect().width;\n                        nextWidth += index === 0 || index === controlMetaData.current.length - 1 ? 4 : 8; // first & last element = padding: 4px\n                        if (index === controlMetaData.current.length - 1) {\n                            if (consumedWidth + nextWidth <= availableWidth - 8) {\n                                lastIndex = index;\n                            }\n                            else if (index === 0 || prevItemsAreSpacer) {\n                                lastIndex = index - 1;\n                            }\n                        }\n                        else {\n                            if (consumedWidth + nextWidth <= availableWidth - OVERFLOW_BUTTON_WIDTH) {\n                                lastIndex = index;\n                            }\n                            if (consumedWidth < availableWidth - OVERFLOW_BUTTON_WIDTH &&\n                                consumedWidth + nextWidth >= availableWidth - OVERFLOW_BUTTON_WIDTH) {\n                                lastIndex = index - 1;\n                            }\n                        }\n                        if (prevItemsAreSpacer && !item.isSpacer) {\n                            prevItemsAreSpacer = false;\n                        }\n                        consumedWidth += nextWidth;\n                    }\n                });\n            }\n            setLastVisibleIndex(lastIndex);\n        });\n    }, [outerContainer.current, controlMetaData.current, setLastVisibleIndex, childrenWithRef, overflowNeeded]);\n    const observer = useRef(new ResizeObserver(calculateVisibleItems));\n    useEffect(() => {\n        if (outerContainer.current) {\n            observer.current.observe(outerContainer.current);\n        }\n        return () => {\n            cancelAnimationFrame(requestAnimationFrameRef.current);\n            observer.current.disconnect();\n        };\n    }, [outerContainer.current]);\n    useIsomorphicLayoutEffect(() => {\n        calculateVisibleItems();\n    }, [calculateVisibleItems]);\n    const handleToolbarClick = useCallback((e) => {\n        if (active && typeof onClick === 'function') {\n            onClick(enrichEventWithDetails(e));\n        }\n    }, [onClick, active]);\n    const prevChildren = useRef(flatChildren);\n    const debouncedOverflowChange = useRef(debounce(onOverflowChange, 60));\n    useEffect(() => {\n        debouncedOverflowChange.current = debounce(onOverflowChange, 60);\n    }, [onOverflowChange]);\n    useEffect(() => {\n        var _a, _b;\n        const haveChildrenChanged = prevChildren.current.length !== flatChildren.length;\n        if ((lastVisibleIndex !== null || haveChildrenChanged) && typeof onOverflowChange === 'function') {\n            prevChildren.current = flatChildren;\n            const toolbarChildren = (_a = contentRef.current) === null || _a === void 0 ? void 0 : _a.children;\n            let toolbarElements = [];\n            const overflowElements = (_b = overflowContentRef.current) === null || _b === void 0 ? void 0 : _b.children;\n            if ((toolbarChildren === null || toolbarChildren === void 0 ? void 0 : toolbarChildren.length) > 0) {\n                toolbarElements = Array.from(toolbarChildren).filter((item, index) => index <= lastVisibleIndex);\n            }\n            debouncedOverflowChange.current({\n                toolbarElements,\n                overflowElements,\n                target: outerContainer.current\n            });\n        }\n        return () => {\n            debouncedOverflowChange.current.cancel();\n        };\n    }, [lastVisibleIndex, flatChildren, debouncedOverflowChange]);\n    const CustomTag = as;\n    const styleWithMinWidth = minWidth !== '0' ? Object.assign({ minWidth }, style) : style;\n    return (React.createElement(CustomTag, Object.assign({ style: styleWithMinWidth, className: clsx(toolbarClasses, overflowNeeded && classes.hasOverflow), ref: componentRef, slot: slot, onClick: handleToolbarClick }, rest),\n        React.createElement(\"div\", { className: classes.toolbar, \"data-component-name\": \"ToolbarContent\", ref: contentRef },\n            overflowNeeded &&\n                React.Children.map(childrenWithRef, (item, index) => {\n                    if (index >= lastVisibleIndex + 1 && index > numberOfAlwaysVisibleItems - 1) {\n                        return React.cloneElement(item, {\n                            style: { visibility: 'hidden', position: 'absolute', pointerEvents: 'none' }\n                        });\n                    }\n                    return item;\n                }),\n            !overflowNeeded && childrenWithRef),\n        overflowNeeded && (React.createElement(\"div\", { ref: overflowBtnRef, className: classes.overflowButtonContainer, \"data-component-name\": \"ToolbarOverflowButtonContainer\" },\n            React.createElement(OverflowPopover, { overflowPopoverRef: overflowPopoverRef, lastVisibleIndex: lastVisibleIndex, classes: classes, portalContainer: portalContainer, overflowContentRef: overflowContentRef, numberOfAlwaysVisibleItems: numberOfAlwaysVisibleItems, showMoreText: showMoreText, overflowButton: overflowButton }, flatChildren)))));\n});\nToolbar.defaultProps = {\n    as: 'div',\n    toolbarStyle: ToolbarStyle.Standard,\n    design: ToolbarDesign.Auto,\n    active: false,\n    portalContainer: document.body,\n    numberOfAlwaysVisibleItems: 0\n};\nToolbar.displayName = 'Toolbar';\nexport { Toolbar };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}