{"ast":null,"code":"const getMetaTagValue = metaTagName => {\n  const metaTag = document.querySelector(`META[name=\"${metaTagName}\"]`),\n    metaTagContent = metaTag && metaTag.getAttribute(\"content\");\n  return metaTagContent;\n};\nconst validateThemeOrigin = origin => {\n  const allowedOrigins = getMetaTagValue(\"sap-allowedThemeOrigins\");\n  return allowedOrigins && allowedOrigins.split(\",\").some(allowedOrigin => {\n    return allowedOrigin === \"*\" || origin === allowedOrigin.trim();\n  });\n};\nconst buildCorrectUrl = (oldUrl, newOrigin) => {\n  const oldUrlPath = new URL(oldUrl).pathname;\n  return new URL(oldUrlPath, newOrigin).toString();\n};\nconst validateThemeRoot = themeRoot => {\n  let themeRootURL, resultUrl;\n  try {\n    themeRootURL = new URL(themeRoot);\n    const origin = themeRootURL.origin;\n    themeRootURL = themeRootURL.toString();\n    if (themeRootURL.startsWith(\".\") || themeRootURL.startsWith(\"/\")) {\n      // Handle relative url\n      // new URL(\"/newExmPath\", \"http://example.com/exmPath\") => http://example.com/newExmPath\n      // new URL(\"./newExmPath\", \"http://example.com/exmPath\") => http://example.com/exmPath/newExmPath\n      // new URL(\"../newExmPath\", \"http://example.com/exmPath\") => http://example.com/newExmPath\n      resultUrl = new URL(themeRootURL, window.location.href).toString();\n    } else if (origin && validateThemeOrigin(origin)) {\n      // If origin is allowed, use it\n      resultUrl = themeRootURL.toString();\n    } else {\n      // If origin is not allow and the URL is not relative, we have to replace the origin\n      // with current location\n      resultUrl = buildCorrectUrl(themeRootURL, window.location.href);\n    }\n    if (!resultUrl.endsWith(\"/\")) {\n      resultUrl = `${resultUrl}/`;\n    }\n    return `${resultUrl}UI5/`;\n  } catch (e) {\n    // Catch if URL is not correct\n  }\n};\nexport default validateThemeRoot;","map":{"version":3,"names":["getMetaTagValue","metaTagName","metaTag","document","querySelector","metaTagContent","getAttribute","validateThemeOrigin","origin","allowedOrigins","split","some","allowedOrigin","trim","buildCorrectUrl","oldUrl","newOrigin","oldUrlPath","URL","pathname","toString","validateThemeRoot","themeRoot","themeRootURL","resultUrl","startsWith","window","location","href","endsWith","e"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/node_modules/@ui5/webcomponents-base/dist/validateThemeRoot.js"],"sourcesContent":["const getMetaTagValue = metaTagName => {\n\tconst metaTag = document.querySelector(`META[name=\"${metaTagName}\"]`),\n\t\tmetaTagContent = metaTag && metaTag.getAttribute(\"content\");\n\n\treturn metaTagContent;\n};\n\nconst validateThemeOrigin = origin => {\n\tconst allowedOrigins = getMetaTagValue(\"sap-allowedThemeOrigins\");\n\n\treturn allowedOrigins && allowedOrigins.split(\",\").some(allowedOrigin => {\n\t\treturn allowedOrigin === \"*\" || origin === allowedOrigin.trim();\n\t});\n};\n\nconst buildCorrectUrl = (oldUrl, newOrigin) => {\n\tconst oldUrlPath = new URL(oldUrl).pathname;\n\n\treturn new URL(oldUrlPath, newOrigin).toString();\n};\n\nconst validateThemeRoot = themeRoot => {\n\tlet themeRootURL,\n\t\tresultUrl;\n\n\ttry {\n\t\tthemeRootURL = new URL(themeRoot);\n\n\t\tconst origin = themeRootURL.origin;\n\n\t\tthemeRootURL = themeRootURL.toString();\n\n\t\tif (themeRootURL.startsWith(\".\") || themeRootURL.startsWith(\"/\")) {\n\t\t\t// Handle relative url\n\t\t\t// new URL(\"/newExmPath\", \"http://example.com/exmPath\") => http://example.com/newExmPath\n\t\t\t// new URL(\"./newExmPath\", \"http://example.com/exmPath\") => http://example.com/exmPath/newExmPath\n\t\t\t// new URL(\"../newExmPath\", \"http://example.com/exmPath\") => http://example.com/newExmPath\n\t\t\tresultUrl = new URL(themeRootURL, window.location.href).toString();\n\t\t} else if (origin && validateThemeOrigin(origin)) {\n\t\t\t// If origin is allowed, use it\n\t\t\tresultUrl = themeRootURL.toString();\n\t\t} else {\n\t\t\t// If origin is not allow and the URL is not relative, we have to replace the origin\n\t\t\t// with current location\n\t\t\tresultUrl = buildCorrectUrl(themeRootURL, window.location.href);\n\t\t}\n\n\t\tif (!resultUrl.endsWith(\"/\")) {\n\t\t\tresultUrl = `${resultUrl}/`;\n\t\t}\n\n\t\treturn `${resultUrl}UI5/`;\n\t} catch (e) {\n\t\t// Catch if URL is not correct\n\t}\n};\n\nexport default validateThemeRoot;\n"],"mappings":"AAAA,MAAMA,eAAe,GAAGC,WAAW,IAAI;EACtC,MAAMC,OAAO,GAAGC,QAAQ,CAACC,aAAa,CAAE,cAAaH,WAAY,IAAG,CAAC;IACpEI,cAAc,GAAGH,OAAO,IAAIA,OAAO,CAACI,YAAY,CAAC,SAAS,CAAC;EAE5D,OAAOD,cAAc;AACtB,CAAC;AAED,MAAME,mBAAmB,GAAGC,MAAM,IAAI;EACrC,MAAMC,cAAc,GAAGT,eAAe,CAAC,yBAAyB,CAAC;EAEjE,OAAOS,cAAc,IAAIA,cAAc,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,IAAI,CAACC,aAAa,IAAI;IACxE,OAAOA,aAAa,KAAK,GAAG,IAAIJ,MAAM,KAAKI,aAAa,CAACC,IAAI,EAAE;EAChE,CAAC,CAAC;AACH,CAAC;AAED,MAAMC,eAAe,GAAG,CAACC,MAAM,EAAEC,SAAS,KAAK;EAC9C,MAAMC,UAAU,GAAG,IAAIC,GAAG,CAACH,MAAM,CAAC,CAACI,QAAQ;EAE3C,OAAO,IAAID,GAAG,CAACD,UAAU,EAAED,SAAS,CAAC,CAACI,QAAQ,EAAE;AACjD,CAAC;AAED,MAAMC,iBAAiB,GAAGC,SAAS,IAAI;EACtC,IAAIC,YAAY,EACfC,SAAS;EAEV,IAAI;IACHD,YAAY,GAAG,IAAIL,GAAG,CAACI,SAAS,CAAC;IAEjC,MAAMd,MAAM,GAAGe,YAAY,CAACf,MAAM;IAElCe,YAAY,GAAGA,YAAY,CAACH,QAAQ,EAAE;IAEtC,IAAIG,YAAY,CAACE,UAAU,CAAC,GAAG,CAAC,IAAIF,YAAY,CAACE,UAAU,CAAC,GAAG,CAAC,EAAE;MACjE;MACA;MACA;MACA;MACAD,SAAS,GAAG,IAAIN,GAAG,CAACK,YAAY,EAAEG,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAC,CAACR,QAAQ,EAAE;IACnE,CAAC,MAAM,IAAIZ,MAAM,IAAID,mBAAmB,CAACC,MAAM,CAAC,EAAE;MACjD;MACAgB,SAAS,GAAGD,YAAY,CAACH,QAAQ,EAAE;IACpC,CAAC,MAAM;MACN;MACA;MACAI,SAAS,GAAGV,eAAe,CAACS,YAAY,EAAEG,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAC;IAChE;IAEA,IAAI,CAACJ,SAAS,CAACK,QAAQ,CAAC,GAAG,CAAC,EAAE;MAC7BL,SAAS,GAAI,GAAEA,SAAU,GAAE;IAC5B;IAEA,OAAQ,GAAEA,SAAU,MAAK;EAC1B,CAAC,CAAC,OAAOM,CAAC,EAAE;IACX;EAAA;AAEF,CAAC;AAED,eAAeT,iBAAiB"},"metadata":{},"sourceType":"module"}