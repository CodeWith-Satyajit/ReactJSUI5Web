{"ast":null,"code":"import merge from \"./thirdparty/merge.js\";\nimport { getFeature } from \"./FeaturesRegistry.js\";\nimport { DEFAULT_THEME } from \"./generated/AssetParameters.js\";\nimport validateThemeRoot from \"./validateThemeRoot.js\";\nlet initialized = false;\nlet initialConfig = {\n  animationMode: \"full\",\n  theme: DEFAULT_THEME,\n  themeRoot: null,\n  rtl: null,\n  language: null,\n  calendarType: null,\n  noConflict: false,\n  // no URL\n  formatSettings: {},\n  fetchDefaultLanguage: false\n};\n\n/* General settings */\nconst getAnimationMode = () => {\n  initConfiguration();\n  return initialConfig.animationMode;\n};\nconst getTheme = () => {\n  initConfiguration();\n  return initialConfig.theme;\n};\nconst getThemeRoot = () => {\n  initConfiguration();\n  return initialConfig.themeRoot;\n};\nconst getRTL = () => {\n  initConfiguration();\n  return initialConfig.rtl;\n};\nconst getLanguage = () => {\n  initConfiguration();\n  return initialConfig.language;\n};\n\n/**\n * Returns if the default language, that is inlined at build time,\n * should be fetched over the network instead.\n * @returns {Boolean}\n */\nconst getFetchDefaultLanguage = () => {\n  initConfiguration();\n  return initialConfig.fetchDefaultLanguage;\n};\nconst getNoConflict = () => {\n  initConfiguration();\n  return initialConfig.noConflict;\n};\nconst getCalendarType = () => {\n  initConfiguration();\n  return initialConfig.calendarType;\n};\nconst getFormatSettings = () => {\n  initConfiguration();\n  return initialConfig.formatSettings;\n};\nconst booleanMapping = new Map();\nbooleanMapping.set(\"true\", true);\nbooleanMapping.set(\"false\", false);\nconst parseConfigurationScript = () => {\n  const configScript = document.querySelector(\"[data-ui5-config]\") || document.querySelector(\"[data-id='sap-ui-config']\"); // for backward compatibility\n\n  let configJSON;\n  if (configScript) {\n    try {\n      configJSON = JSON.parse(configScript.innerHTML);\n    } catch (err) {\n      console.warn(\"Incorrect data-sap-ui-config format. Please use JSON\"); /* eslint-disable-line */\n    }\n\n    if (configJSON) {\n      initialConfig = merge(initialConfig, configJSON);\n    }\n  }\n};\nconst parseURLParameters = () => {\n  const params = new URLSearchParams(window.location.search);\n\n  // Process \"sap-*\" params first\n  params.forEach((value, key) => {\n    const parts = key.split(\"sap-\").length;\n    if (parts === 0 || parts === key.split(\"sap-ui-\").length) {\n      return;\n    }\n    applyURLParam(key, value, \"sap\");\n  });\n\n  // Process \"sap-ui-*\" params\n  params.forEach((value, key) => {\n    if (!key.startsWith(\"sap-ui\")) {\n      return;\n    }\n    applyURLParam(key, value, \"sap-ui\");\n  });\n};\nconst normalizeThemeRootParamValue = value => {\n  const themeRoot = value.split(\"@\")[1];\n  return validateThemeRoot(themeRoot);\n};\nconst normalizeThemeParamValue = (param, value) => {\n  if (param === \"theme\" && value.includes(\"@\")) {\n    // the theme parameter might have @<URL-TO-THEME> in the value - strip this\n    return value.split(\"@\")[0];\n  }\n  return value;\n};\nconst applyURLParam = (key, value, paramType) => {\n  const lowerCaseValue = value.toLowerCase();\n  const param = key.split(`${paramType}-`)[1];\n  if (booleanMapping.has(value)) {\n    value = booleanMapping.get(lowerCaseValue);\n  }\n  if (param === \"theme\") {\n    initialConfig.theme = normalizeThemeParamValue(param, value);\n    if (value && value.includes(\"@\")) {\n      initialConfig.themeRoot = normalizeThemeRootParamValue(value);\n    }\n  } else {\n    initialConfig[param] = value;\n  }\n};\nconst applyOpenUI5Configuration = () => {\n  const OpenUI5Support = getFeature(\"OpenUI5Support\");\n  if (!OpenUI5Support || !OpenUI5Support.isLoaded()) {\n    return;\n  }\n  const OpenUI5Config = OpenUI5Support.getConfigurationSettingsObject();\n  initialConfig = merge(initialConfig, OpenUI5Config);\n};\nconst initConfiguration = () => {\n  if (initialized) {\n    return;\n  }\n\n  // 1. Lowest priority - configuration script\n  parseConfigurationScript();\n\n  // 2. URL parameters overwrite configuration script parameters\n  parseURLParameters();\n\n  // 3. If OpenUI5 is detected, it has the highest priority\n  applyOpenUI5Configuration();\n  initialized = true;\n};\nexport { getAnimationMode, getTheme, getThemeRoot, getRTL, getLanguage, getFetchDefaultLanguage, getNoConflict, getCalendarType, getFormatSettings };","map":{"version":3,"names":["merge","getFeature","DEFAULT_THEME","validateThemeRoot","initialized","initialConfig","animationMode","theme","themeRoot","rtl","language","calendarType","noConflict","formatSettings","fetchDefaultLanguage","getAnimationMode","initConfiguration","getTheme","getThemeRoot","getRTL","getLanguage","getFetchDefaultLanguage","getNoConflict","getCalendarType","getFormatSettings","booleanMapping","Map","set","parseConfigurationScript","configScript","document","querySelector","configJSON","JSON","parse","innerHTML","err","console","warn","parseURLParameters","params","URLSearchParams","window","location","search","forEach","value","key","parts","split","length","applyURLParam","startsWith","normalizeThemeRootParamValue","normalizeThemeParamValue","param","includes","paramType","lowerCaseValue","toLowerCase","has","get","applyOpenUI5Configuration","OpenUI5Support","isLoaded","OpenUI5Config","getConfigurationSettingsObject"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/node_modules/@ui5/webcomponents-base/dist/InitialConfiguration.js"],"sourcesContent":["import merge from \"./thirdparty/merge.js\";\nimport { getFeature } from \"./FeaturesRegistry.js\";\nimport { DEFAULT_THEME } from \"./generated/AssetParameters.js\";\nimport validateThemeRoot from \"./validateThemeRoot.js\";\n\nlet initialized = false;\n\nlet initialConfig = {\n\tanimationMode: \"full\",\n\ttheme: DEFAULT_THEME,\n\tthemeRoot: null,\n\trtl: null,\n\tlanguage: null,\n\tcalendarType: null,\n\tnoConflict: false, // no URL\n\tformatSettings: {},\n\tfetchDefaultLanguage: false,\n};\n\n/* General settings */\nconst getAnimationMode = () => {\n\tinitConfiguration();\n\treturn initialConfig.animationMode;\n};\n\nconst getTheme = () => {\n\tinitConfiguration();\n\treturn initialConfig.theme;\n};\n\nconst getThemeRoot = () => {\n\tinitConfiguration();\n\treturn initialConfig.themeRoot;\n};\n\nconst getRTL = () => {\n\tinitConfiguration();\n\treturn initialConfig.rtl;\n};\n\nconst getLanguage = () => {\n\tinitConfiguration();\n\treturn initialConfig.language;\n};\n\n/**\n * Returns if the default language, that is inlined at build time,\n * should be fetched over the network instead.\n * @returns {Boolean}\n */\nconst getFetchDefaultLanguage = () => {\n\tinitConfiguration();\n\treturn initialConfig.fetchDefaultLanguage;\n};\n\nconst getNoConflict = () => {\n\tinitConfiguration();\n\treturn initialConfig.noConflict;\n};\n\nconst getCalendarType = () => {\n\tinitConfiguration();\n\treturn initialConfig.calendarType;\n};\n\nconst getFormatSettings = () => {\n\tinitConfiguration();\n\treturn initialConfig.formatSettings;\n};\n\nconst booleanMapping = new Map();\nbooleanMapping.set(\"true\", true);\nbooleanMapping.set(\"false\", false);\n\nconst parseConfigurationScript = () => {\n\tconst configScript = document.querySelector(\"[data-ui5-config]\") || document.querySelector(\"[data-id='sap-ui-config']\"); // for backward compatibility\n\n\tlet configJSON;\n\n\tif (configScript) {\n\t\ttry {\n\t\t\tconfigJSON = JSON.parse(configScript.innerHTML);\n\t\t} catch (err) {\n\t\t\tconsole.warn(\"Incorrect data-sap-ui-config format. Please use JSON\"); /* eslint-disable-line */\n\t\t}\n\n\t\tif (configJSON) {\n\t\t\tinitialConfig = merge(initialConfig, configJSON);\n\t\t}\n\t}\n};\n\nconst parseURLParameters = () => {\n\tconst params = new URLSearchParams(window.location.search);\n\n\t// Process \"sap-*\" params first\n\tparams.forEach((value, key) => {\n\t\tconst parts = key.split(\"sap-\").length;\n\t\tif (parts === 0 || parts === key.split(\"sap-ui-\").length) {\n\t\t\treturn;\n\t\t}\n\n\t\tapplyURLParam(key, value, \"sap\");\n\t});\n\n\t// Process \"sap-ui-*\" params\n\tparams.forEach((value, key) => {\n\t\tif (!key.startsWith(\"sap-ui\")) {\n\t\t\treturn;\n\t\t}\n\n\t\tapplyURLParam(key, value, \"sap-ui\");\n\t});\n};\n\nconst normalizeThemeRootParamValue = value => {\n\tconst themeRoot = value.split(\"@\")[1];\n\n\treturn validateThemeRoot(themeRoot);\n};\n\nconst normalizeThemeParamValue = (param, value) => {\n\tif (param === \"theme\" && value.includes(\"@\")) { // the theme parameter might have @<URL-TO-THEME> in the value - strip this\n\t\treturn value.split(\"@\")[0];\n\t}\n\n\treturn value;\n};\n\nconst applyURLParam = (key, value, paramType) => {\n\tconst lowerCaseValue = value.toLowerCase();\n\tconst param = key.split(`${paramType}-`)[1];\n\n\tif (booleanMapping.has(value)) {\n\t\tvalue = booleanMapping.get(lowerCaseValue);\n\t}\n\n\tif (param === \"theme\") {\n\t\tinitialConfig.theme = normalizeThemeParamValue(param, value);\n\n\t\tif (value && value.includes(\"@\")) {\n\t\t\tinitialConfig.themeRoot = normalizeThemeRootParamValue(value);\n\t\t}\n\t} else {\n\t\tinitialConfig[param] = value;\n\t}\n};\n\nconst applyOpenUI5Configuration = () => {\n\tconst OpenUI5Support = getFeature(\"OpenUI5Support\");\n\tif (!OpenUI5Support || !OpenUI5Support.isLoaded()) {\n\t\treturn;\n\t}\n\n\tconst OpenUI5Config = OpenUI5Support.getConfigurationSettingsObject();\n\tinitialConfig = merge(initialConfig, OpenUI5Config);\n};\n\nconst initConfiguration = () => {\n\tif (initialized) {\n\t\treturn;\n\t}\n\n\t// 1. Lowest priority - configuration script\n\tparseConfigurationScript();\n\n\t// 2. URL parameters overwrite configuration script parameters\n\tparseURLParameters();\n\n\t// 3. If OpenUI5 is detected, it has the highest priority\n\tapplyOpenUI5Configuration();\n\n\tinitialized = true;\n};\n\nexport {\n\tgetAnimationMode,\n\tgetTheme,\n\tgetThemeRoot,\n\tgetRTL,\n\tgetLanguage,\n\tgetFetchDefaultLanguage,\n\tgetNoConflict,\n\tgetCalendarType,\n\tgetFormatSettings,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}