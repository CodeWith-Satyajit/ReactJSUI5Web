{"ast":null,"code":"import CalendarDate from \"./CalendarDate.js\";\n\n/**\n * Adds or subtracts a given amount of days/months/years from a date.\n * If minDate or maxDate are given, the result will be enforced within these limits\n *\n * @param date CalendarDate instance\n * @param amount how many days/months/years to add (can be a negative number)\n * @param unit what to modify: \"day\", \"month\" or \"year\"\n * @param minDate minimum date to enforce\n * @param maxDate maximum date to enforce\n */\nconst modifyDateBy = function (date, amount, unit) {\n  let minDate = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  let maxDate = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  const newDate = new CalendarDate(date);\n  if (unit === \"day\") {\n    newDate.setDate(date.getDate() + amount);\n  } else if (unit === \"month\") {\n    newDate.setMonth(date.getMonth() + amount);\n    const stillSameMonth = amount === -1 && newDate.getMonth() === date.getMonth(); // f.e. PageUp remained in the same month\n    const monthSkipped = amount === 1 && newDate.getMonth() - date.getMonth() > 1; // f.e. PageDown skipped a whole month\n    if (stillSameMonth || monthSkipped) {\n      // Select the last day of the month in any of these 2 scenarios\n      newDate.setDate(0);\n    }\n  } else {\n    newDate.setYear(date.getYear() + amount);\n    if (newDate.getMonth() !== date.getMonth()) {\n      // f.e. 29th Feb to next/prev year\n      newDate.setDate(0); // Select the last day of the month\n    }\n  }\n\n  if (minDate && newDate.valueOf() < minDate.valueOf()) {\n    return new CalendarDate(minDate);\n  }\n  if (maxDate && newDate.valueOf() > maxDate.valueOf()) {\n    return new CalendarDate(maxDate);\n  }\n  return newDate;\n};\nexport default modifyDateBy;","map":{"version":3,"names":["CalendarDate","modifyDateBy","date","amount","unit","minDate","maxDate","newDate","setDate","getDate","setMonth","getMonth","stillSameMonth","monthSkipped","setYear","getYear","valueOf"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/node_modules/@ui5/webcomponents-localization/dist/dates/modifyDateBy.js"],"sourcesContent":["import CalendarDate from \"./CalendarDate.js\";\n\n/**\n * Adds or subtracts a given amount of days/months/years from a date.\n * If minDate or maxDate are given, the result will be enforced within these limits\n *\n * @param date CalendarDate instance\n * @param amount how many days/months/years to add (can be a negative number)\n * @param unit what to modify: \"day\", \"month\" or \"year\"\n * @param minDate minimum date to enforce\n * @param maxDate maximum date to enforce\n */\nconst modifyDateBy = (date, amount, unit, minDate = null, maxDate = null) => {\n\tconst newDate = new CalendarDate(date);\n\tif (unit === \"day\") {\n\t\tnewDate.setDate(date.getDate() + amount);\n\t} else if (unit === \"month\") {\n\t\tnewDate.setMonth(date.getMonth() + amount);\n\t\tconst stillSameMonth = amount === -1 && newDate.getMonth() === date.getMonth(); // f.e. PageUp remained in the same month\n\t\tconst monthSkipped = amount === 1 && newDate.getMonth() - date.getMonth() > 1; // f.e. PageDown skipped a whole month\n\t\tif (stillSameMonth || monthSkipped) { // Select the last day of the month in any of these 2 scenarios\n\t\t\tnewDate.setDate(0);\n\t\t}\n\t} else {\n\t\tnewDate.setYear(date.getYear() + amount);\n\t\tif (newDate.getMonth() !== date.getMonth()) { // f.e. 29th Feb to next/prev year\n\t\t\tnewDate.setDate(0); // Select the last day of the month\n\t\t}\n\t}\n\n\tif (minDate && newDate.valueOf() < minDate.valueOf()) {\n\t\treturn new CalendarDate(minDate);\n\t}\n\n\tif (maxDate && newDate.valueOf() > maxDate.valueOf()) {\n\t\treturn new CalendarDate(maxDate);\n\t}\n\n\treturn newDate;\n};\n\nexport default modifyDateBy;\n"],"mappings":"AAAA,OAAOA,YAAY,MAAM,mBAAmB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,YAAY,GAAG,UAACC,IAAI,EAAEC,MAAM,EAAEC,IAAI,EAAqC;EAAA,IAAnCC,OAAO,uEAAG,IAAI;EAAA,IAAEC,OAAO,uEAAG,IAAI;EACvE,MAAMC,OAAO,GAAG,IAAIP,YAAY,CAACE,IAAI,CAAC;EACtC,IAAIE,IAAI,KAAK,KAAK,EAAE;IACnBG,OAAO,CAACC,OAAO,CAACN,IAAI,CAACO,OAAO,EAAE,GAAGN,MAAM,CAAC;EACzC,CAAC,MAAM,IAAIC,IAAI,KAAK,OAAO,EAAE;IAC5BG,OAAO,CAACG,QAAQ,CAACR,IAAI,CAACS,QAAQ,EAAE,GAAGR,MAAM,CAAC;IAC1C,MAAMS,cAAc,GAAGT,MAAM,KAAK,CAAC,CAAC,IAAII,OAAO,CAACI,QAAQ,EAAE,KAAKT,IAAI,CAACS,QAAQ,EAAE,CAAC,CAAC;IAChF,MAAME,YAAY,GAAGV,MAAM,KAAK,CAAC,IAAII,OAAO,CAACI,QAAQ,EAAE,GAAGT,IAAI,CAACS,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;IAC/E,IAAIC,cAAc,IAAIC,YAAY,EAAE;MAAE;MACrCN,OAAO,CAACC,OAAO,CAAC,CAAC,CAAC;IACnB;EACD,CAAC,MAAM;IACND,OAAO,CAACO,OAAO,CAACZ,IAAI,CAACa,OAAO,EAAE,GAAGZ,MAAM,CAAC;IACxC,IAAII,OAAO,CAACI,QAAQ,EAAE,KAAKT,IAAI,CAACS,QAAQ,EAAE,EAAE;MAAE;MAC7CJ,OAAO,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IACrB;EACD;;EAEA,IAAIH,OAAO,IAAIE,OAAO,CAACS,OAAO,EAAE,GAAGX,OAAO,CAACW,OAAO,EAAE,EAAE;IACrD,OAAO,IAAIhB,YAAY,CAACK,OAAO,CAAC;EACjC;EAEA,IAAIC,OAAO,IAAIC,OAAO,CAACS,OAAO,EAAE,GAAGV,OAAO,CAACU,OAAO,EAAE,EAAE;IACrD,OAAO,IAAIhB,YAAY,CAACM,OAAO,CAAC;EACjC;EAEA,OAAOC,OAAO;AACf,CAAC;AAED,eAAeN,YAAY"},"metadata":{},"sourceType":"module"}