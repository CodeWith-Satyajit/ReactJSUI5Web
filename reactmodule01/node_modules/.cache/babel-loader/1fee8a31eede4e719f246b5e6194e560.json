{"ast":null,"code":"import { getCustomElementsScopingSuffix, shouldScopeCustomElement } from \"../CustomElementsScopeUtils.js\";\n\n/**\n * Runs a component's template with the component's current state, while also scoping HTML\n *\n * @param template - the template to execute\n * @param component - the component\n * @public\n * @returns {*}\n */\nconst executeTemplate = (template, component) => {\n  const tagsToScope = getTagsToScope(component);\n  const scope = getCustomElementsScopingSuffix();\n  return template(component, tagsToScope, scope);\n};\n\n/**\n * Returns all tags, used inside component's template subject to scoping.\n * @param component - the component\n * @returns {Array[]}\n * @private\n */\nconst getTagsToScope = component => {\n  const componentTag = component.constructor.getMetadata().getPureTag();\n  const tagsToScope = component.constructor.getUniqueDependencies().map(dep => dep.getMetadata().getPureTag()).filter(shouldScopeCustomElement);\n  if (shouldScopeCustomElement(componentTag)) {\n    tagsToScope.push(componentTag);\n  }\n  return tagsToScope;\n};\nexport default executeTemplate;","map":{"version":3,"names":["getCustomElementsScopingSuffix","shouldScopeCustomElement","executeTemplate","template","component","tagsToScope","getTagsToScope","scope","componentTag","constructor","getMetadata","getPureTag","getUniqueDependencies","map","dep","filter","push"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/node_modules/@ui5/webcomponents-base/dist/renderer/executeTemplate.js"],"sourcesContent":["import { getCustomElementsScopingSuffix, shouldScopeCustomElement } from \"../CustomElementsScopeUtils.js\";\n\n/**\n * Runs a component's template with the component's current state, while also scoping HTML\n *\n * @param template - the template to execute\n * @param component - the component\n * @public\n * @returns {*}\n */\nconst executeTemplate = (template, component) => {\n\tconst tagsToScope = getTagsToScope(component);\n\tconst scope = getCustomElementsScopingSuffix();\n\treturn template(component, tagsToScope, scope);\n};\n\n/**\n * Returns all tags, used inside component's template subject to scoping.\n * @param component - the component\n * @returns {Array[]}\n * @private\n */\nconst getTagsToScope = component => {\n\tconst componentTag = component.constructor.getMetadata().getPureTag();\n\tconst tagsToScope = component.constructor.getUniqueDependencies().map(dep => dep.getMetadata().getPureTag()).filter(shouldScopeCustomElement);\n\n\tif (shouldScopeCustomElement(componentTag)) {\n\t\ttagsToScope.push(componentTag);\n\t}\n\n\treturn tagsToScope;\n};\n\nexport default executeTemplate;\n"],"mappings":"AAAA,SAASA,8BAA8B,EAAEC,wBAAwB,QAAQ,gCAAgC;;AAEzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,eAAe,GAAG,CAACC,QAAQ,EAAEC,SAAS,KAAK;EAChD,MAAMC,WAAW,GAAGC,cAAc,CAACF,SAAS,CAAC;EAC7C,MAAMG,KAAK,GAAGP,8BAA8B,EAAE;EAC9C,OAAOG,QAAQ,CAACC,SAAS,EAAEC,WAAW,EAAEE,KAAK,CAAC;AAC/C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,MAAMD,cAAc,GAAGF,SAAS,IAAI;EACnC,MAAMI,YAAY,GAAGJ,SAAS,CAACK,WAAW,CAACC,WAAW,EAAE,CAACC,UAAU,EAAE;EACrE,MAAMN,WAAW,GAAGD,SAAS,CAACK,WAAW,CAACG,qBAAqB,EAAE,CAACC,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACJ,WAAW,EAAE,CAACC,UAAU,EAAE,CAAC,CAACI,MAAM,CAACd,wBAAwB,CAAC;EAE7I,IAAIA,wBAAwB,CAACO,YAAY,CAAC,EAAE;IAC3CH,WAAW,CAACW,IAAI,CAACR,YAAY,CAAC;EAC/B;EAEA,OAAOH,WAAW;AACnB,CAAC;AAED,eAAeH,eAAe"},"metadata":{},"sourceType":"module"}