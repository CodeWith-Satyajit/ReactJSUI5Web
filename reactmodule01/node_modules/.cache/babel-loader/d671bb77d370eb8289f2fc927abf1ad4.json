{"ast":null,"code":"import { CssSizeVariablesNames, enrichEventWithDetails } from '@ui5/webcomponents-react-base';\nimport React from 'react';\nimport { TableSelectionBehavior } from '../../../enums/TableSelectionBehavior';\nimport { TableSelectionMode } from '../../../enums/TableSelectionMode';\nimport { CheckBox } from '../../../webComponents/CheckBox';\nconst customCheckBoxStyling = {\n  verticalAlign: 'middle',\n  pointerEvents: 'none'\n};\n/*\n * COMPONENTS\n */\nconst Header = instance => {\n  const {\n    getToggleAllRowsSelectedProps,\n    webComponentsReactProperties: {\n      selectionMode\n    }\n  } = instance;\n  if (selectionMode === TableSelectionMode.SingleSelect) {\n    return null;\n  }\n  const checkBoxProps = getToggleAllRowsSelectedProps();\n  return React.createElement(CheckBox, Object.assign({}, checkBoxProps, {\n    style: customCheckBoxStyling,\n    tabIndex: -1,\n    onChange: undefined,\n    checked: checkBoxProps.indeterminate ? true : checkBoxProps.checked\n  }));\n};\nconst Cell = _ref => {\n  let {\n    row,\n    webComponentsReactProperties: {\n      selectionMode\n    }\n  } = _ref;\n  if (selectionMode === TableSelectionMode.SingleSelect || row.isGrouped) {\n    return null;\n  }\n  return React.createElement(CheckBox, Object.assign({}, row.getToggleRowSelectedProps(), {\n    tabIndex: -1,\n    style: customCheckBoxStyling,\n    \"data-name\": \"internal_selection_column\"\n  }));\n};\n/*\n * TABLE HOOKS\n */\nconst headerProps = (props, _ref2) => {\n  let {\n    instance: {\n      flatRows,\n      webComponentsReactProperties: {\n        onRowSelect,\n        selectionMode\n      },\n      toggleAllRowsSelected,\n      isAllRowsSelected\n    }\n  } = _ref2;\n  const style = Object.assign(Object.assign({}, props.style), {\n    cursor: 'pointer'\n  });\n  if (props.key === 'header___ui5wcr__internal_selection_column' && selectionMode === TableSelectionMode.MultiSelect) {\n    const onClick = e => {\n      toggleAllRowsSelected(!isAllRowsSelected);\n      if (typeof onRowSelect === 'function') {\n        onRowSelect(\n        // cannot use instance.selectedFlatRows here as it only returns all rows on the first level\n        enrichEventWithDetails(e, {\n          allRowsSelected: !isAllRowsSelected,\n          selectedFlatRows: !isAllRowsSelected ? flatRows : []\n        }));\n      }\n    };\n    const onKeyDown = e => {\n      if (e.code === 'Space' || e.code === 'Enter') {\n        e.preventDefault();\n        onClick(e);\n      }\n    };\n    return [props, {\n      onClick,\n      onKeyDown,\n      style\n    }];\n  }\n  return props;\n};\nconst columnDeps = (deps, _ref3) => {\n  let {\n    instance: {\n      webComponentsReactProperties\n    }\n  } = _ref3;\n  return [...deps, webComponentsReactProperties.selectionMode, webComponentsReactProperties.selectionBehavior];\n};\nconst visibleColumnsDeps = (deps, _ref4) => {\n  let {\n    instance\n  } = _ref4;\n  return [...deps, instance.webComponentsReactProperties.selectionMode, instance.webComponentsReactProperties.selectionBehavior];\n};\nconst visibleColumns = (currentVisibleColumns, _ref5) => {\n  let {\n    instance: {\n      webComponentsReactProperties\n    }\n  } = _ref5;\n  if (webComponentsReactProperties.selectionMode === TableSelectionMode.None || webComponentsReactProperties.selectionBehavior === TableSelectionBehavior.RowOnly) {\n    return currentVisibleColumns;\n  }\n  const selectionColumn = currentVisibleColumns.find(_ref6 => {\n    let {\n      id\n    } = _ref6;\n    return id === '__ui5wcr__internal_selection_column';\n  });\n  return [selectionColumn, ...currentVisibleColumns.filter(_ref7 => {\n    let {\n      id\n    } = _ref7;\n    return id !== '__ui5wcr__internal_selection_column';\n  })];\n};\nconst columns = (currentColumns, _ref8) => {\n  let {\n    instance\n  } = _ref8;\n  const {\n    webComponentsReactProperties\n  } = instance;\n  const {\n    selectionMode,\n    selectionBehavior,\n    tableRef\n  } = webComponentsReactProperties;\n  if (selectionMode === TableSelectionMode.None || selectionBehavior === TableSelectionBehavior.RowOnly) {\n    return currentColumns;\n  }\n  const tableSelectionColumnWidth = tableRef.current && parseInt(getComputedStyle(tableRef.current).getPropertyValue(CssSizeVariablesNames.sapWcrAnalyticalTableSelectionColumnWidth), 10);\n  const selectionColumnWidth = !isNaN(tableSelectionColumnWidth) ? tableSelectionColumnWidth : 47;\n  return [{\n    id: '__ui5wcr__internal_selection_column',\n    accessor: '__ui5wcr__internal_selection_column',\n    disableFilters: true,\n    disableSortBy: true,\n    disableGroupBy: true,\n    disableResizing: true,\n    disableDragAndDrop: true,\n    width: selectionColumnWidth,\n    minWidth: selectionColumnWidth,\n    maxWidth: selectionColumnWidth,\n    Header,\n    Cell\n  }, ...currentColumns];\n};\nconst getCellProps = (props, _ref9) => {\n  let {\n    cell\n  } = _ref9;\n  if (cell.column.id === '__ui5wcr__internal_selection_column') {\n    const style = Object.assign(Object.assign({}, props.style), {\n      cursor: 'pointer',\n      justifyContent: 'center'\n    });\n    return [props, {\n      style\n    }];\n  }\n  return props;\n};\nexport const useRowSelectionColumn = hooks => {\n  hooks.getCellProps.push(getCellProps);\n  hooks.getHeaderProps.push(headerProps);\n  hooks.columns.push(columns);\n  hooks.columnsDeps.push(columnDeps);\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps);\n  hooks.visibleColumns.push(visibleColumns);\n};\nuseRowSelectionColumn.pluginName = 'useRowSelectionColumn';","map":{"version":3,"names":["CssSizeVariablesNames","enrichEventWithDetails","React","TableSelectionBehavior","TableSelectionMode","CheckBox","customCheckBoxStyling","verticalAlign","pointerEvents","Header","instance","getToggleAllRowsSelectedProps","webComponentsReactProperties","selectionMode","SingleSelect","checkBoxProps","createElement","Object","assign","style","tabIndex","onChange","undefined","checked","indeterminate","Cell","row","isGrouped","getToggleRowSelectedProps","headerProps","props","flatRows","onRowSelect","toggleAllRowsSelected","isAllRowsSelected","cursor","key","MultiSelect","onClick","e","allRowsSelected","selectedFlatRows","onKeyDown","code","preventDefault","columnDeps","deps","selectionBehavior","visibleColumnsDeps","visibleColumns","currentVisibleColumns","None","RowOnly","selectionColumn","find","id","filter","columns","currentColumns","tableRef","tableSelectionColumnWidth","current","parseInt","getComputedStyle","getPropertyValue","sapWcrAnalyticalTableSelectionColumnWidth","selectionColumnWidth","isNaN","accessor","disableFilters","disableSortBy","disableGroupBy","disableResizing","disableDragAndDrop","width","minWidth","maxWidth","getCellProps","cell","column","justifyContent","useRowSelectionColumn","hooks","push","getHeaderProps","columnsDeps","pluginName"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/hooks/useRowSelectionColumn.js"],"sourcesContent":["import { CssSizeVariablesNames, enrichEventWithDetails } from '@ui5/webcomponents-react-base';\nimport React from 'react';\nimport { TableSelectionBehavior } from '../../../enums/TableSelectionBehavior';\nimport { TableSelectionMode } from '../../../enums/TableSelectionMode';\nimport { CheckBox } from '../../../webComponents/CheckBox';\nconst customCheckBoxStyling = {\n    verticalAlign: 'middle',\n    pointerEvents: 'none'\n};\n/*\n * COMPONENTS\n */\nconst Header = (instance) => {\n    const { getToggleAllRowsSelectedProps, webComponentsReactProperties: { selectionMode } } = instance;\n    if (selectionMode === TableSelectionMode.SingleSelect) {\n        return null;\n    }\n    const checkBoxProps = getToggleAllRowsSelectedProps();\n    return (React.createElement(CheckBox, Object.assign({}, checkBoxProps, { style: customCheckBoxStyling, tabIndex: -1, onChange: undefined, checked: checkBoxProps.indeterminate ? true : checkBoxProps.checked })));\n};\nconst Cell = ({ row, webComponentsReactProperties: { selectionMode } }) => {\n    if (selectionMode === TableSelectionMode.SingleSelect || row.isGrouped) {\n        return null;\n    }\n    return (React.createElement(CheckBox, Object.assign({}, row.getToggleRowSelectedProps(), { tabIndex: -1, style: customCheckBoxStyling, \"data-name\": \"internal_selection_column\" })));\n};\n/*\n * TABLE HOOKS\n */\nconst headerProps = (props, { instance: { flatRows, webComponentsReactProperties: { onRowSelect, selectionMode }, toggleAllRowsSelected, isAllRowsSelected } }) => {\n    const style = Object.assign(Object.assign({}, props.style), { cursor: 'pointer' });\n    if (props.key === 'header___ui5wcr__internal_selection_column' && selectionMode === TableSelectionMode.MultiSelect) {\n        const onClick = (e) => {\n            toggleAllRowsSelected(!isAllRowsSelected);\n            if (typeof onRowSelect === 'function') {\n                onRowSelect(\n                // cannot use instance.selectedFlatRows here as it only returns all rows on the first level\n                enrichEventWithDetails(e, {\n                    allRowsSelected: !isAllRowsSelected,\n                    selectedFlatRows: !isAllRowsSelected ? flatRows : []\n                }));\n            }\n        };\n        const onKeyDown = (e) => {\n            if (e.code === 'Space' || e.code === 'Enter') {\n                e.preventDefault();\n                onClick(e);\n            }\n        };\n        return [props, { onClick, onKeyDown, style }];\n    }\n    return props;\n};\nconst columnDeps = (deps, { instance: { webComponentsReactProperties } }) => {\n    return [...deps, webComponentsReactProperties.selectionMode, webComponentsReactProperties.selectionBehavior];\n};\nconst visibleColumnsDeps = (deps, { instance }) => [\n    ...deps,\n    instance.webComponentsReactProperties.selectionMode,\n    instance.webComponentsReactProperties.selectionBehavior\n];\nconst visibleColumns = (currentVisibleColumns, { instance: { webComponentsReactProperties } }) => {\n    if (webComponentsReactProperties.selectionMode === TableSelectionMode.None ||\n        webComponentsReactProperties.selectionBehavior === TableSelectionBehavior.RowOnly) {\n        return currentVisibleColumns;\n    }\n    const selectionColumn = currentVisibleColumns.find(({ id }) => id === '__ui5wcr__internal_selection_column');\n    return [selectionColumn, ...currentVisibleColumns.filter(({ id }) => id !== '__ui5wcr__internal_selection_column')];\n};\nconst columns = (currentColumns, { instance }) => {\n    const { webComponentsReactProperties } = instance;\n    const { selectionMode, selectionBehavior, tableRef } = webComponentsReactProperties;\n    if (selectionMode === TableSelectionMode.None || selectionBehavior === TableSelectionBehavior.RowOnly) {\n        return currentColumns;\n    }\n    const tableSelectionColumnWidth = tableRef.current &&\n        parseInt(getComputedStyle(tableRef.current).getPropertyValue(CssSizeVariablesNames.sapWcrAnalyticalTableSelectionColumnWidth), 10);\n    const selectionColumnWidth = !isNaN(tableSelectionColumnWidth) ? tableSelectionColumnWidth : 47;\n    return [\n        {\n            id: '__ui5wcr__internal_selection_column',\n            accessor: '__ui5wcr__internal_selection_column',\n            disableFilters: true,\n            disableSortBy: true,\n            disableGroupBy: true,\n            disableResizing: true,\n            disableDragAndDrop: true,\n            width: selectionColumnWidth,\n            minWidth: selectionColumnWidth,\n            maxWidth: selectionColumnWidth,\n            Header,\n            Cell\n        },\n        ...currentColumns\n    ];\n};\nconst getCellProps = (props, { cell }) => {\n    if (cell.column.id === '__ui5wcr__internal_selection_column') {\n        const style = Object.assign(Object.assign({}, props.style), { cursor: 'pointer', justifyContent: 'center' });\n        return [props, { style }];\n    }\n    return props;\n};\nexport const useRowSelectionColumn = (hooks) => {\n    hooks.getCellProps.push(getCellProps);\n    hooks.getHeaderProps.push(headerProps);\n    hooks.columns.push(columns);\n    hooks.columnsDeps.push(columnDeps);\n    hooks.visibleColumnsDeps.push(visibleColumnsDeps);\n    hooks.visibleColumns.push(visibleColumns);\n};\nuseRowSelectionColumn.pluginName = 'useRowSelectionColumn';\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}