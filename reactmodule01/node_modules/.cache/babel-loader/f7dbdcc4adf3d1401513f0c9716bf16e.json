{"ast":null,"code":"import { isClickInRect } from \"@ui5/webcomponents-base/dist/util/PopupUtils.js\";\nimport { getOpenedPopups, addOpenedPopup, removeOpenedPopup } from \"./OpenedPopupsRegistry.js\";\nlet updateInterval = null;\nconst intervalTimeout = 300;\nconst openedRegistry = [];\nconst repositionPopovers = event => {\n  openedRegistry.forEach(popover => {\n    popover.instance.reposition();\n  });\n};\nconst attachGlobalScrollHandler = () => {\n  document.body.addEventListener(\"scroll\", repositionPopovers, true);\n};\nconst detachGlobalScrollHandler = () => {\n  document.body.removeEventListener(\"scroll\", repositionPopovers, true);\n};\nconst runUpdateInterval = () => {\n  updateInterval = setInterval(() => {\n    repositionPopovers();\n  }, intervalTimeout);\n};\nconst stopUpdateInterval = () => {\n  clearInterval(updateInterval);\n};\nconst attachGlobalClickHandler = () => {\n  document.addEventListener(\"mousedown\", clickHandler);\n};\nconst detachGlobalClickHandler = () => {\n  document.removeEventListener(\"mousedown\", clickHandler);\n};\nconst clickHandler = event => {\n  const openedPopups = getOpenedPopups();\n  const isTopPopupPopover = openedPopups[openedPopups.length - 1].instance.showAt;\n  if (openedPopups.length === 0 || !isTopPopupPopover) {\n    return;\n  }\n\n  // loop all open popovers\n  for (let i = openedPopups.length - 1; i !== -1; i--) {\n    const popup = openedPopups[i].instance;\n\n    // if popup is modal, opener is clicked, popup is dialog skip closing\n    if (popup.isModal || popup.isOpenerClicked(event)) {\n      return;\n    }\n    if (isClickInRect(event, popup.getBoundingClientRect())) {\n      break;\n    }\n    popup.close();\n  }\n};\nconst attachScrollHandler = popover => {\n  popover && popover.shadowRoot.addEventListener(\"scroll\", repositionPopovers, true);\n};\nconst detachScrollHandler = popover => {\n  popover && popover.shadowRoot.removeEventListener(\"scroll\", repositionPopovers);\n};\nconst addOpenedPopover = instance => {\n  const parentPopovers = getParentPopoversIfNested(instance);\n  addOpenedPopup(instance, parentPopovers);\n  openedRegistry.push({\n    instance,\n    parentPopovers\n  });\n  attachScrollHandler(instance);\n  if (openedRegistry.length === 1) {\n    attachGlobalScrollHandler();\n    attachGlobalClickHandler();\n    runUpdateInterval();\n  }\n};\nconst removeOpenedPopover = instance => {\n  const popoversToClose = [instance];\n  for (let i = 0; i < openedRegistry.length; i++) {\n    const indexOfCurrentInstance = openedRegistry[i].parentPopovers.indexOf(instance);\n    if (openedRegistry[i].parentPopovers.length > 0 && indexOfCurrentInstance > -1) {\n      popoversToClose.push(openedRegistry[i].instance);\n    }\n  }\n  for (let i = popoversToClose.length - 1; i >= 0; i--) {\n    for (let j = 0; j < openedRegistry.length; j++) {\n      let indexOfItemToRemove;\n      if (popoversToClose[i] === openedRegistry[j].instance) {\n        indexOfItemToRemove = j;\n      }\n      if (indexOfItemToRemove >= 0) {\n        removeOpenedPopup(openedRegistry[indexOfItemToRemove].instance);\n        detachScrollHandler(openedRegistry[indexOfItemToRemove].instance);\n        const itemToClose = openedRegistry.splice(indexOfItemToRemove, 1);\n        itemToClose[0].instance.close(false, true);\n      }\n    }\n  }\n  if (!openedRegistry.length) {\n    detachGlobalScrollHandler();\n    detachGlobalClickHandler();\n    stopUpdateInterval();\n  }\n};\nconst getRegistry = () => {\n  return openedRegistry;\n};\nconst getParentPopoversIfNested = instance => {\n  let currentElement = instance.parentNode;\n  const parentPopovers = [];\n  while (currentElement.parentNode) {\n    for (let i = 0; i < openedRegistry.length; i++) {\n      if (currentElement && currentElement === openedRegistry[i].instance) {\n        parentPopovers.push(currentElement);\n      }\n    }\n    currentElement = currentElement.parentNode;\n  }\n  return parentPopovers;\n};\nexport { addOpenedPopover, removeOpenedPopover, getRegistry };","map":{"version":3,"names":["isClickInRect","getOpenedPopups","addOpenedPopup","removeOpenedPopup","updateInterval","intervalTimeout","openedRegistry","repositionPopovers","event","forEach","popover","instance","reposition","attachGlobalScrollHandler","document","body","addEventListener","detachGlobalScrollHandler","removeEventListener","runUpdateInterval","setInterval","stopUpdateInterval","clearInterval","attachGlobalClickHandler","clickHandler","detachGlobalClickHandler","openedPopups","isTopPopupPopover","length","showAt","i","popup","isModal","isOpenerClicked","getBoundingClientRect","close","attachScrollHandler","shadowRoot","detachScrollHandler","addOpenedPopover","parentPopovers","getParentPopoversIfNested","push","removeOpenedPopover","popoversToClose","indexOfCurrentInstance","indexOf","j","indexOfItemToRemove","itemToClose","splice","getRegistry","currentElement","parentNode"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/node_modules/@ui5/webcomponents/dist/popup-utils/PopoverRegistry.js"],"sourcesContent":["import { isClickInRect } from \"@ui5/webcomponents-base/dist/util/PopupUtils.js\";\nimport { getOpenedPopups, addOpenedPopup, removeOpenedPopup } from \"./OpenedPopupsRegistry.js\";\n\nlet updateInterval = null;\nconst intervalTimeout = 300;\nconst openedRegistry = [];\n\nconst repositionPopovers = event => {\n\topenedRegistry.forEach(popover => {\n\t\tpopover.instance.reposition();\n\t});\n};\n\nconst attachGlobalScrollHandler = () => {\n\tdocument.body.addEventListener(\"scroll\", repositionPopovers, true);\n};\n\nconst detachGlobalScrollHandler = () => {\n\tdocument.body.removeEventListener(\"scroll\", repositionPopovers, true);\n};\n\nconst runUpdateInterval = () => {\n\tupdateInterval = setInterval(() => {\n\t\trepositionPopovers();\n\t}, intervalTimeout);\n};\n\nconst stopUpdateInterval = () => {\n\tclearInterval(updateInterval);\n};\n\nconst attachGlobalClickHandler = () => {\n\tdocument.addEventListener(\"mousedown\", clickHandler);\n};\n\nconst detachGlobalClickHandler = () => {\n\tdocument.removeEventListener(\"mousedown\", clickHandler);\n};\n\nconst clickHandler = event => {\n\tconst openedPopups = getOpenedPopups();\n\tconst isTopPopupPopover = openedPopups[openedPopups.length - 1].instance.showAt;\n\n\tif (openedPopups.length === 0 || !isTopPopupPopover) {\n\t\treturn;\n\t}\n\n\t// loop all open popovers\n\tfor (let i = (openedPopups.length - 1); i !== -1; i--) {\n\t\tconst popup = openedPopups[i].instance;\n\n\t\t// if popup is modal, opener is clicked, popup is dialog skip closing\n\t\tif (popup.isModal || popup.isOpenerClicked(event)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (isClickInRect(event, popup.getBoundingClientRect())) {\n\t\t\tbreak;\n\t\t}\n\n\t\tpopup.close();\n\t}\n};\n\nconst attachScrollHandler = popover => {\n\tpopover && popover.shadowRoot.addEventListener(\"scroll\", repositionPopovers, true);\n};\n\nconst detachScrollHandler = popover => {\n\tpopover && popover.shadowRoot.removeEventListener(\"scroll\", repositionPopovers);\n};\n\nconst addOpenedPopover = instance => {\n\tconst parentPopovers = getParentPopoversIfNested(instance);\n\n\taddOpenedPopup(instance, parentPopovers);\n\topenedRegistry.push({\n\t\tinstance,\n\t\tparentPopovers,\n\t});\n\n\tattachScrollHandler(instance);\n\n\tif (openedRegistry.length === 1) {\n\t\tattachGlobalScrollHandler();\n\t\tattachGlobalClickHandler();\n\t\trunUpdateInterval();\n\t}\n};\n\nconst removeOpenedPopover = instance => {\n\tconst popoversToClose = [instance];\n\n\tfor (let i = 0; i < openedRegistry.length; i++) {\n\t\tconst indexOfCurrentInstance = openedRegistry[i].parentPopovers.indexOf(instance);\n\t\tif (openedRegistry[i].parentPopovers.length > 0 && indexOfCurrentInstance > -1) {\n\t\t\tpopoversToClose.push(openedRegistry[i].instance);\n\t\t}\n\t}\n\n\tfor (let i = popoversToClose.length - 1; i >= 0; i--) {\n\t\tfor (let j = 0; j < openedRegistry.length; j++) {\n\t\t\tlet indexOfItemToRemove;\n\t\t\tif (popoversToClose[i] === openedRegistry[j].instance) {\n\t\t\t\tindexOfItemToRemove = j;\n\t\t\t}\n\n\t\t\tif (indexOfItemToRemove >= 0) {\n\t\t\t\tremoveOpenedPopup(openedRegistry[indexOfItemToRemove].instance);\n\t\t\t\tdetachScrollHandler(openedRegistry[indexOfItemToRemove].instance);\n\t\t\t\tconst itemToClose = openedRegistry.splice(indexOfItemToRemove, 1);\n\t\t\t\titemToClose[0].instance.close(false, true);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!openedRegistry.length) {\n\t\tdetachGlobalScrollHandler();\n\t\tdetachGlobalClickHandler();\n\t\tstopUpdateInterval();\n\t}\n};\n\nconst getRegistry = () => {\n\treturn openedRegistry;\n};\n\nconst getParentPopoversIfNested = instance => {\n\tlet currentElement = instance.parentNode;\n\tconst parentPopovers = [];\n\n\twhile (currentElement.parentNode) {\n\t\tfor (let i = 0; i < openedRegistry.length; i++) {\n\t\t\tif (currentElement && currentElement === openedRegistry[i].instance) {\n\t\t\t\tparentPopovers.push(currentElement);\n\t\t\t}\n\t\t}\n\n\t\tcurrentElement = currentElement.parentNode;\n\t}\n\n\treturn parentPopovers;\n};\n\nexport { addOpenedPopover, removeOpenedPopover, getRegistry };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}