{"ast":null,"code":"import DataType from \"@ui5/webcomponents-base/dist/types/DataType.js\";\n\n/**\n * Different types of IllustrationMessageSize.\n * @lends sap.ui.webcomponents.fiori.types.IllustrationMessageSize.prototype\n * @public\n * @since 1.5.0\n */\nconst IllustrationMessageSizes = {\n  /**\n   * Automatically decides the <code>Illustration</code> size (<code>Base</code>, <code>Spot</code>,\n   * <code>Dialog</code>, or <code>Scene</code>) depending on the <code>IllustratedMessage</code> container width.\n   *\n   * <b>Note:</b> <code>Auto</code> is the only option where the illustration size is changed according to\n   * the available container width. If any other <code>IllustratedMessageSize</code> is chosen, it remains\n   * until changed by the app developer.\n   *\n   * @public\n   * @type {Auto}\n   */\n  Auto: \"Auto\",\n  /**\n   * Base <code>Illustration</code> size (XS breakpoint). Suitable for cards (two columns).\n   *\n   * <b>Note:</b> When <code>Base</code> is in use, no illustration is displayed.\n   *\n   * @public\n   * @type {Base}\n   */\n  Base: \"Base\",\n  /**\n   * Spot <code>Illustration</code> size (S breakpoint). Suitable for cards (four columns).\n   * @public\n   * @type {Spot}\n   */\n  Spot: \"Spot\",\n  /**\n   * Dialog <code>Illustration</code> size (M breakpoint). Suitable for dialogs.\n   * @public\n   * @type {Dialog}\n   */\n  Dialog: \"Dialog\",\n  /**\n   * Scene <code>Illustration</code> size (L breakpoint). Suitable for a <code>Page</code> or a table.\n   * @public\n   * @type {Scene}\n   */\n  Scene: \"Scene\"\n};\n\n/**\n * @class\n * Different types of IllustrationMessageSize.\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.fiori.types.IllustrationMessageSize\n * @public\n * @enum {string}\n */\nclass IllustrationMessageSize extends DataType {\n  static isValid(value) {\n    return !!IllustrationMessageSizes[value];\n  }\n}\nIllustrationMessageSize.generateTypeAccessors(IllustrationMessageSizes);\nexport default IllustrationMessageSize;","map":{"version":3,"names":["DataType","IllustrationMessageSizes","Auto","Base","Spot","Dialog","Scene","IllustrationMessageSize","isValid","value","generateTypeAccessors"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/node_modules/@ui5/webcomponents-fiori/dist/types/IllustrationMessageSize.js"],"sourcesContent":["import DataType from \"@ui5/webcomponents-base/dist/types/DataType.js\";\n\n/**\n * Different types of IllustrationMessageSize.\n * @lends sap.ui.webcomponents.fiori.types.IllustrationMessageSize.prototype\n * @public\n * @since 1.5.0\n */\nconst IllustrationMessageSizes = {\n\t/**\n\t * Automatically decides the <code>Illustration</code> size (<code>Base</code>, <code>Spot</code>,\n\t * <code>Dialog</code>, or <code>Scene</code>) depending on the <code>IllustratedMessage</code> container width.\n\t *\n\t * <b>Note:</b> <code>Auto</code> is the only option where the illustration size is changed according to\n\t * the available container width. If any other <code>IllustratedMessageSize</code> is chosen, it remains\n\t * until changed by the app developer.\n\t *\n\t * @public\n\t * @type {Auto}\n\t */\n\tAuto: \"Auto\",\n\t/**\n\t * Base <code>Illustration</code> size (XS breakpoint). Suitable for cards (two columns).\n\t *\n\t * <b>Note:</b> When <code>Base</code> is in use, no illustration is displayed.\n\t *\n\t * @public\n\t * @type {Base}\n\t */\n\tBase: \"Base\",\n\n\t/**\n\t * Spot <code>Illustration</code> size (S breakpoint). Suitable for cards (four columns).\n\t * @public\n\t * @type {Spot}\n\t */\n\tSpot: \"Spot\",\n\n\t/**\n\t * Dialog <code>Illustration</code> size (M breakpoint). Suitable for dialogs.\n\t * @public\n\t * @type {Dialog}\n\t */\n\tDialog: \"Dialog\",\n\n\t/**\n\t * Scene <code>Illustration</code> size (L breakpoint). Suitable for a <code>Page</code> or a table.\n\t * @public\n\t * @type {Scene}\n\t */\n\tScene: \"Scene\",\n};\n\n/**\n * @class\n * Different types of IllustrationMessageSize.\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.fiori.types.IllustrationMessageSize\n * @public\n * @enum {string}\n */\nclass IllustrationMessageSize extends DataType {\n\tstatic isValid(value) {\n\t\treturn !!IllustrationMessageSizes[value];\n\t}\n}\n\nIllustrationMessageSize.generateTypeAccessors(IllustrationMessageSizes);\n\nexport default IllustrationMessageSize;\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,gDAAgD;;AAErE;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,wBAAwB,GAAG;EAChC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCC,IAAI,EAAE,MAAM;EACZ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACCC,IAAI,EAAE,MAAM;EAEZ;AACD;AACA;AACA;AACA;EACCC,IAAI,EAAE,MAAM;EAEZ;AACD;AACA;AACA;AACA;EACCC,MAAM,EAAE,QAAQ;EAEhB;AACD;AACA;AACA;AACA;EACCC,KAAK,EAAE;AACR,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,uBAAuB,SAASP,QAAQ,CAAC;EAC9C,OAAOQ,OAAO,CAACC,KAAK,EAAE;IACrB,OAAO,CAAC,CAACR,wBAAwB,CAACQ,KAAK,CAAC;EACzC;AACD;AAEAF,uBAAuB,CAACG,qBAAqB,CAACT,wBAAwB,CAAC;AAEvE,eAAeM,uBAAuB"},"metadata":{},"sourceType":"module"}