{"ast":null,"code":"import { isDesktop } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport ValueState from \"@ui5/webcomponents-base/dist/types/ValueState.js\";\nimport { getFeature } from \"@ui5/webcomponents-base/dist/FeaturesRegistry.js\";\nimport { getEffectiveAriaLabelText } from \"@ui5/webcomponents-base/dist/util/AriaLabelHelper.js\";\nimport { isSpace, isEnter } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport \"@ui5/webcomponents-icons/dist/accept.js\";\nimport Icon from \"./Icon.js\";\nimport Label from \"./Label.js\";\nimport WrappingType from \"./types/WrappingType.js\";\nimport { VALUE_STATE_ERROR, VALUE_STATE_WARNING, VALUE_STATE_SUCCESS } from \"./generated/i18n/i18n-defaults.js\";\n\n// Template\nimport CheckBoxTemplate from \"./generated/templates/CheckBoxTemplate.lit.js\";\n\n// Styles\nimport checkboxCss from \"./generated/themes/CheckBox.css.js\";\nlet isGlobalHandlerAttached = false;\nlet activeCb = null;\n\n/**\n * @public\n */\nconst metadata = {\n  tag: \"ui5-checkbox\",\n  languageAware: true,\n  properties: /** @lends sap.ui.webcomponents.main.CheckBox.prototype */{\n    /**\n     * Receives id(or many ids) of the elements that label the component\n     * @type {string}\n     * @defaultvalue \"\"\n     * @public\n     * @since 1.1.0\n     */\n    accessibleNameRef: {\n      type: String,\n      defaultValue: \"\"\n    },\n    /**\n     * Defines the accessible ARIA name of the component.\n     *\n     * @type {string}\n     * @public\n     * @defaultvalue \"\"\n     * @since 1.1.0\n     */\n    accessibleName: {\n      type: String\n    },\n    /**\n     * Defines whether the component is disabled.\n     * <br><br>\n     * <b>Note:</b> A disabled component is completely noninteractive.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    disabled: {\n      type: Boolean\n    },\n    /**\n     * Defines whether the component is read-only.\n     * <br><br>\n     * <b>Note:</b> A red-only component is not editable,\n     * but still provides visual feedback upon user interaction.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    readonly: {\n      type: Boolean\n    },\n    /**\n     * Defines whether the component is required.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     * @since 1.3.0\n     */\n    required: {\n      type: Boolean\n    },\n    /**\n    * Defines whether the component is displayed as partially checked.\n    * <br><br>\n    * <b>Note:</b> The indeterminate state can be set only programmatically and canâ€™t be achieved by user\n    * interaction and the resulting visual state depends on the values of the <code>indeterminate</code>\n    * and <code>checked</code> properties:\n    * <ul>\n    * <li> If the component is checked and indeterminate, it will be displayed as partially checked\n    * <li> If the component is checked and it is not indeterminate, it will be displayed as checked\n    * <li> If the component is not checked, it will be displayed as not checked regardless value of the indeterminate attribute\n    * </ul>\n    *\n    * @type {boolean}\n    * @defaultvalue false\n    * @public\n    * @since 1.0.0-rc.15\n    */\n    indeterminate: {\n      type: Boolean\n    },\n    /**\n     * Defines if the component is checked.\n     * <br><br>\n     * <b>Note:</b> The property can be changed with user interaction,\n     * either by cliking/tapping on the component, or by\n     * pressing the Enter or Space key.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @formEvents change\n     * @formProperty\n     * @public\n     */\n    checked: {\n      type: Boolean\n    },\n    /**\n     * Defines the text of the component.\n     *\n     * @type {string}\n     * @defaultvalue \"\"\n     * @public\n     */\n    text: {\n      type: String\n    },\n    /**\n     * Defines the value state of the component.\n     *\n     * <br><br>\n     * <b>Note:</b>\n     *\n     * <ul>\n     * <li><code>Warning</code></li>\n     * <li><code>Error</code></li>\n     * <li><code>None</code>(default)</li>\n     * <li><code>Success</code></li>\n     * <li><code>Information</code></li>\n     * </ul>\n     *\n     * @type {sap.ui.webcomponents.base.types.ValueState}\n     * @defaultvalue \"None\"\n     * @public\n     */\n    valueState: {\n      type: ValueState,\n      defaultValue: ValueState.None\n    },\n    /**\n     * Defines whether the component text wraps when there is not enough space.\n     * <br><br>\n     * Available options are:\n     * <ul>\n     * <li><code>None</code> - The text will be truncated with an ellipsis.</li>\n     * <li><code>Normal</code> - The text will wrap. The words will not be broken based on hyphenation.</li>\n     * </ul>\n     *\n     * @type {sap.ui.webcomponents.main.types.WrappingType}\n     * @defaultvalue \"None\"\n     * @public\n     */\n    wrappingType: {\n      type: WrappingType,\n      defaultValue: WrappingType.None\n    },\n    /**\n     * Determines the name with which the component will be submitted in an HTML form.\n     *\n     * <br><br>\n     * <b>Important:</b> For the <code>name</code> property to have effect, you must add the following import to your project:\n     * <code>import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";</code>\n     *\n     * <br><br>\n     * <b>Note:</b> When set, a native <code>input</code> HTML element\n     * will be created inside the component so that it can be submitted as\n     * part of an HTML form. Do not use this property unless you need to submit a form.\n     *\n     * @type {string}\n     * @defaultvalue \"\"\n     * @public\n     */\n    name: {\n      type: String\n    },\n    /**\n     * Defines the active state (pressed or not) of the component.\n     * @private\n     */\n    active: {\n      type: Boolean\n    }\n  },\n  events: /** @lends sap.ui.webcomponents.main.CheckBox.prototype */{\n    /**\n     * Fired when the component checked state changes.\n     *\n     * @public\n     * @event\n     */\n    change: {}\n  },\n  slots: /** @lends sap.ui.webcomponents.main.CheckBox.prototype */{\n    /**\n     * The slot is used to render native <code>input</code> HTML element within Light DOM to enable form submit,\n     * when <code>name</code> property is set.\n     * @type {HTMLElement[]}\n     * @slot\n     * @private\n     */\n    formSupport: {\n      type: HTMLElement\n    }\n  }\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * Allows the user to set a binary value, such as true/false or yes/no for an item.\n * <br><br>\n * The <code>ui5-checkbox</code> component consists of a box and a label that describes its purpose.\n * If it's checked, an indicator is displayed inside the box.\n * To check/uncheck the <code>ui5-checkbox</code>, the user has to click or tap the square\n * box or its label.\n * <br><br>\n * The <code>ui5-checkbox</code> component only has 2 states - checked and unchecked.\n * Clicking or tapping toggles the <code>ui5-checkbox</code> between checked and unchecked state.\n *\n * <h3>Usage</h3>\n *\n * You can define the checkbox text with via the <code>text</code> property. If the text exceeds the available width, it is truncated by default.\n * In case you prefer text to wrap, set the <code>wrappingType</code> property to \"Normal\".\n * The touchable area for toggling the <code>ui5-checkbox</code> ends where the text ends.\n * <br><br>\n * You can disable the <code>ui5-checkbox</code> by setting the <code>disabled</code> property to\n * <code>true</code>,\n * or use the <code>ui5-checkbox</code> in read-only mode by setting the <code>readonly</code>\n * property to <code>true</code>.\n *\n * <br><br>\n * <h3>Keyboard Handling</h3>\n *\n * The user can use the following keyboard shortcuts to toggle the checked state of the <code>ui5-checkbox</code>.\n * <ul>\n * <li>[SPACE, ENTER] - Toggles between different states: checked, not checked.</li>\n * </ul>\n * <br><br>\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/CheckBox\";</code>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.CheckBox\n * @extends sap.ui.webcomponents.base.UI5Element\n * @tagname ui5-checkbox\n * @public\n */\nclass CheckBox extends UI5Element {\n  static get metadata() {\n    return metadata;\n  }\n  static get render() {\n    return litRender;\n  }\n  static get template() {\n    return CheckBoxTemplate;\n  }\n  static get styles() {\n    return checkboxCss;\n  }\n  constructor() {\n    super();\n    this._deactivate = () => {\n      if (activeCb) {\n        activeCb.active = false;\n      }\n    };\n    if (!isGlobalHandlerAttached) {\n      document.addEventListener(\"mouseup\", this._deactivate);\n      isGlobalHandlerAttached = true;\n    }\n  }\n  onBeforeRendering() {\n    this._enableFormSupport();\n  }\n  _enableFormSupport() {\n    const FormSupport = getFeature(\"FormSupport\");\n    if (FormSupport) {\n      FormSupport.syncNativeHiddenInput(this, (element, nativeInput) => {\n        nativeInput.disabled = element.disabled || !element.checked;\n        nativeInput.value = element.checked ? \"on\" : \"\";\n      });\n    } else if (this.name) {\n      console.warn(`In order for the \"name\" property to have effect, you should also: import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";`); // eslint-disable-line\n    }\n  }\n\n  _onclick() {\n    this.toggle();\n  }\n  _onmousedown() {\n    if (this.readonly || this.disabled) {\n      return;\n    }\n    this.active = true;\n    activeCb = this; // eslint-disable-line\n  }\n\n  _onmouseup() {\n    this.active = false;\n  }\n  _onfocusout() {\n    this.active = false;\n  }\n  _onkeydown(event) {\n    if (isSpace(event)) {\n      event.preventDefault();\n      this.active = true;\n    }\n    if (isEnter(event)) {\n      this.toggle();\n      this.active = true;\n    }\n  }\n  _onkeyup(event) {\n    if (isSpace(event)) {\n      this.toggle();\n    }\n    this.active = false;\n  }\n  toggle() {\n    if (this.canToggle()) {\n      if (this.indeterminate) {\n        this.indeterminate = false;\n        this.checked = true;\n      } else {\n        this.checked = !this.checked;\n      }\n      this.fireEvent(\"change\");\n      // Angular two way data binding\n      this.fireEvent(\"value-changed\");\n    }\n    return this;\n  }\n  canToggle() {\n    return !(this.disabled || this.readonly);\n  }\n  valueStateTextMappings() {\n    return {\n      \"Error\": CheckBox.i18nBundle.getText(VALUE_STATE_ERROR),\n      \"Warning\": CheckBox.i18nBundle.getText(VALUE_STATE_WARNING),\n      \"Success\": CheckBox.i18nBundle.getText(VALUE_STATE_SUCCESS)\n    };\n  }\n  get ariaLabelText() {\n    return getEffectiveAriaLabelText(this);\n  }\n  get classes() {\n    return {\n      main: {\n        \"ui5-checkbox--hoverable\": !this.disabled && !this.readonly && isDesktop()\n      }\n    };\n  }\n  get ariaReadonly() {\n    return this.readonly ? \"true\" : undefined;\n  }\n  get ariaDisabled() {\n    return this.disabled ? \"true\" : undefined;\n  }\n  get ariaChecked() {\n    return this.indeterminate && this.checked ? \"mixed\" : this.checked;\n  }\n  get ariaLabelledBy() {\n    if (!this.ariaLabelText) {\n      return this.text ? `${this._id}-label` : undefined;\n    }\n    return undefined;\n  }\n  get ariaDescribedBy() {\n    return this.hasValueState ? `${this._id}-descr` : undefined;\n  }\n  get hasValueState() {\n    return this.valueState !== ValueState.None;\n  }\n  get valueStateText() {\n    return this.valueStateTextMappings()[this.valueState];\n  }\n  get tabIndex() {\n    const tabindex = this.getAttribute(\"tabindex\");\n    return this.disabled ? undefined : tabindex || \"0\";\n  }\n  get isCompletelyChecked() {\n    return this.checked && !this.indeterminate;\n  }\n  static get dependencies() {\n    return [Label, Icon];\n  }\n  static async onDefine() {\n    CheckBox.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n  }\n}\nCheckBox.define();\nexport default CheckBox;","map":{"version":3,"names":["isDesktop","UI5Element","litRender","getI18nBundle","ValueState","getFeature","getEffectiveAriaLabelText","isSpace","isEnter","Icon","Label","WrappingType","VALUE_STATE_ERROR","VALUE_STATE_WARNING","VALUE_STATE_SUCCESS","CheckBoxTemplate","checkboxCss","isGlobalHandlerAttached","activeCb","metadata","tag","languageAware","properties","accessibleNameRef","type","String","defaultValue","accessibleName","disabled","Boolean","readonly","required","indeterminate","checked","text","valueState","None","wrappingType","name","active","events","change","slots","formSupport","HTMLElement","CheckBox","render","template","styles","constructor","_deactivate","document","addEventListener","onBeforeRendering","_enableFormSupport","FormSupport","syncNativeHiddenInput","element","nativeInput","value","console","warn","_onclick","toggle","_onmousedown","_onmouseup","_onfocusout","_onkeydown","event","preventDefault","_onkeyup","canToggle","fireEvent","valueStateTextMappings","i18nBundle","getText","ariaLabelText","classes","main","ariaReadonly","undefined","ariaDisabled","ariaChecked","ariaLabelledBy","_id","ariaDescribedBy","hasValueState","valueStateText","tabIndex","tabindex","getAttribute","isCompletelyChecked","dependencies","onDefine","define"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/node_modules/@ui5/webcomponents/dist/CheckBox.js"],"sourcesContent":["import { isDesktop } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport ValueState from \"@ui5/webcomponents-base/dist/types/ValueState.js\";\nimport { getFeature } from \"@ui5/webcomponents-base/dist/FeaturesRegistry.js\";\nimport { getEffectiveAriaLabelText } from \"@ui5/webcomponents-base/dist/util/AriaLabelHelper.js\";\nimport { isSpace, isEnter } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport \"@ui5/webcomponents-icons/dist/accept.js\";\nimport Icon from \"./Icon.js\";\nimport Label from \"./Label.js\";\nimport WrappingType from \"./types/WrappingType.js\";\nimport {\n\tVALUE_STATE_ERROR,\n\tVALUE_STATE_WARNING,\n\tVALUE_STATE_SUCCESS,\n} from \"./generated/i18n/i18n-defaults.js\";\n\n// Template\nimport CheckBoxTemplate from \"./generated/templates/CheckBoxTemplate.lit.js\";\n\n// Styles\nimport checkboxCss from \"./generated/themes/CheckBox.css.js\";\n\nlet isGlobalHandlerAttached = false;\nlet activeCb = null;\n\n/**\n * @public\n */\nconst metadata = {\n\ttag: \"ui5-checkbox\",\n\tlanguageAware: true,\n\tproperties: /** @lends sap.ui.webcomponents.main.CheckBox.prototype */ {\n\n\t\t/**\n\t\t * Receives id(or many ids) of the elements that label the component\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @public\n\t\t * @since 1.1.0\n\t\t */\n\t\taccessibleNameRef: {\n\t\t\ttype: String,\n\t\t\tdefaultValue: \"\",\n\t\t},\n\n\t\t/**\n\t\t * Defines the accessible ARIA name of the component.\n\t\t *\n\t\t * @type {string}\n\t\t * @public\n\t\t * @defaultvalue \"\"\n\t\t * @since 1.1.0\n\t\t */\n\t\taccessibleName: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Defines whether the component is disabled.\n\t\t * <br><br>\n\t\t * <b>Note:</b> A disabled component is completely noninteractive.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\tdisabled: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines whether the component is read-only.\n\t\t * <br><br>\n\t\t * <b>Note:</b> A red-only component is not editable,\n\t\t * but still provides visual feedback upon user interaction.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\treadonly: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines whether the component is required.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t * @since 1.3.0\n\t\t */\n\t\trequired: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t* Defines whether the component is displayed as partially checked.\n\t\t* <br><br>\n\t\t* <b>Note:</b> The indeterminate state can be set only programmatically and canâ€™t be achieved by user\n\t\t* interaction and the resulting visual state depends on the values of the <code>indeterminate</code>\n\t\t* and <code>checked</code> properties:\n\t\t* <ul>\n\t\t* <li> If the component is checked and indeterminate, it will be displayed as partially checked\n\t\t* <li> If the component is checked and it is not indeterminate, it will be displayed as checked\n\t\t* <li> If the component is not checked, it will be displayed as not checked regardless value of the indeterminate attribute\n\t\t* </ul>\n\t\t*\n\t\t* @type {boolean}\n\t\t* @defaultvalue false\n\t\t* @public\n\t\t* @since 1.0.0-rc.15\n\t\t*/\n\t\tindeterminate: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines if the component is checked.\n\t\t * <br><br>\n\t\t * <b>Note:</b> The property can be changed with user interaction,\n\t\t * either by cliking/tapping on the component, or by\n\t\t * pressing the Enter or Space key.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @formEvents change\n\t\t * @formProperty\n\t\t * @public\n\t\t */\n\t\tchecked: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines the text of the component.\n\t\t *\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @public\n\t\t */\n\t\ttext: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Defines the value state of the component.\n\t\t *\n\t\t * <br><br>\n\t\t * <b>Note:</b>\n\t\t *\n\t\t * <ul>\n\t\t * <li><code>Warning</code></li>\n\t\t * <li><code>Error</code></li>\n\t\t * <li><code>None</code>(default)</li>\n\t\t * <li><code>Success</code></li>\n\t\t * <li><code>Information</code></li>\n\t\t * </ul>\n\t\t *\n\t\t * @type {sap.ui.webcomponents.base.types.ValueState}\n\t\t * @defaultvalue \"None\"\n\t\t * @public\n\t\t */\n\t\tvalueState: {\n\t\t\ttype: ValueState,\n\t\t\tdefaultValue: ValueState.None,\n\t\t},\n\n\t\t/**\n\t\t * Defines whether the component text wraps when there is not enough space.\n\t\t * <br><br>\n\t\t * Available options are:\n\t\t * <ul>\n\t\t * <li><code>None</code> - The text will be truncated with an ellipsis.</li>\n\t\t * <li><code>Normal</code> - The text will wrap. The words will not be broken based on hyphenation.</li>\n\t\t * </ul>\n\t\t *\n\t\t * @type {sap.ui.webcomponents.main.types.WrappingType}\n\t\t * @defaultvalue \"None\"\n\t\t * @public\n\t\t */\n\t\t wrappingType: {\n\t\t\ttype: WrappingType,\n\t\t\tdefaultValue: WrappingType.None,\n\t\t},\n\n\t\t/**\n\t\t * Determines the name with which the component will be submitted in an HTML form.\n\t\t *\n\t\t * <br><br>\n\t\t * <b>Important:</b> For the <code>name</code> property to have effect, you must add the following import to your project:\n\t\t * <code>import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";</code>\n\t\t *\n\t\t * <br><br>\n\t\t * <b>Note:</b> When set, a native <code>input</code> HTML element\n\t\t * will be created inside the component so that it can be submitted as\n\t\t * part of an HTML form. Do not use this property unless you need to submit a form.\n\t\t *\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @public\n\t\t */\n\t\tname: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Defines the active state (pressed or not) of the component.\n\t\t * @private\n\t\t */\n\t\tactive: {\n\t\t\ttype: Boolean,\n\t\t},\n\t},\n\tevents: /** @lends sap.ui.webcomponents.main.CheckBox.prototype */ {\n\n\t\t/**\n\t\t * Fired when the component checked state changes.\n\t\t *\n\t\t * @public\n\t\t * @event\n\t\t */\n\t\tchange: {},\n\t},\n\tslots: /** @lends sap.ui.webcomponents.main.CheckBox.prototype */ {\n\t\t/**\n\t\t * The slot is used to render native <code>input</code> HTML element within Light DOM to enable form submit,\n\t\t * when <code>name</code> property is set.\n\t\t * @type {HTMLElement[]}\n\t\t * @slot\n\t\t * @private\n\t\t */\n\t\tformSupport: {\n\t\t\ttype: HTMLElement,\n\t\t},\n\t},\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * Allows the user to set a binary value, such as true/false or yes/no for an item.\n * <br><br>\n * The <code>ui5-checkbox</code> component consists of a box and a label that describes its purpose.\n * If it's checked, an indicator is displayed inside the box.\n * To check/uncheck the <code>ui5-checkbox</code>, the user has to click or tap the square\n * box or its label.\n * <br><br>\n * The <code>ui5-checkbox</code> component only has 2 states - checked and unchecked.\n * Clicking or tapping toggles the <code>ui5-checkbox</code> between checked and unchecked state.\n *\n * <h3>Usage</h3>\n *\n * You can define the checkbox text with via the <code>text</code> property. If the text exceeds the available width, it is truncated by default.\n * In case you prefer text to wrap, set the <code>wrappingType</code> property to \"Normal\".\n * The touchable area for toggling the <code>ui5-checkbox</code> ends where the text ends.\n * <br><br>\n * You can disable the <code>ui5-checkbox</code> by setting the <code>disabled</code> property to\n * <code>true</code>,\n * or use the <code>ui5-checkbox</code> in read-only mode by setting the <code>readonly</code>\n * property to <code>true</code>.\n *\n * <br><br>\n * <h3>Keyboard Handling</h3>\n *\n * The user can use the following keyboard shortcuts to toggle the checked state of the <code>ui5-checkbox</code>.\n * <ul>\n * <li>[SPACE, ENTER] - Toggles between different states: checked, not checked.</li>\n * </ul>\n * <br><br>\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/CheckBox\";</code>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.CheckBox\n * @extends sap.ui.webcomponents.base.UI5Element\n * @tagname ui5-checkbox\n * @public\n */\nclass CheckBox extends UI5Element {\n\tstatic get metadata() {\n\t\treturn metadata;\n\t}\n\n\tstatic get render() {\n\t\treturn litRender;\n\t}\n\n\tstatic get template() {\n\t\treturn CheckBoxTemplate;\n\t}\n\n\tstatic get styles() {\n\t\treturn checkboxCss;\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._deactivate = () => {\n\t\t\tif (activeCb) {\n\t\t\t\tactiveCb.active = false;\n\t\t\t}\n\t\t};\n\n\t\tif (!isGlobalHandlerAttached) {\n\t\t\tdocument.addEventListener(\"mouseup\", this._deactivate);\n\t\t\tisGlobalHandlerAttached = true;\n\t\t}\n\t}\n\n\tonBeforeRendering() {\n\t\tthis._enableFormSupport();\n\t}\n\n\t_enableFormSupport() {\n\t\tconst FormSupport = getFeature(\"FormSupport\");\n\t\tif (FormSupport) {\n\t\t\tFormSupport.syncNativeHiddenInput(this, (element, nativeInput) => {\n\t\t\t\tnativeInput.disabled = element.disabled || !element.checked;\n\t\t\t\tnativeInput.value = element.checked ? \"on\" : \"\";\n\t\t\t});\n\t\t} else if (this.name) {\n\t\t\tconsole.warn(`In order for the \"name\" property to have effect, you should also: import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";`); // eslint-disable-line\n\t\t}\n\t}\n\n\t_onclick() {\n\t\tthis.toggle();\n\t}\n\n\t_onmousedown() {\n\t\tif (this.readonly || this.disabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.active = true;\n\t\tactiveCb = this; // eslint-disable-line\n\t}\n\n\t_onmouseup() {\n\t\tthis.active = false;\n\t}\n\n\t_onfocusout() {\n\t\tthis.active = false;\n\t}\n\n\t_onkeydown(event) {\n\t\tif (isSpace(event)) {\n\t\t\tevent.preventDefault();\n\t\t\tthis.active = true;\n\t\t}\n\n\t\tif (isEnter(event)) {\n\t\t\tthis.toggle();\n\t\t\tthis.active = true;\n\t\t}\n\t}\n\n\t_onkeyup(event) {\n\t\tif (isSpace(event)) {\n\t\t\tthis.toggle();\n\t\t}\n\n\t\tthis.active = false;\n\t}\n\n\ttoggle() {\n\t\tif (this.canToggle()) {\n\t\t\tif (this.indeterminate) {\n\t\t\t\tthis.indeterminate = false;\n\t\t\t\tthis.checked = true;\n\t\t\t} else {\n\t\t\t\tthis.checked = !this.checked;\n\t\t\t}\n\n\t\t\tthis.fireEvent(\"change\");\n\t\t\t// Angular two way data binding\n\t\t\tthis.fireEvent(\"value-changed\");\n\t\t}\n\t\treturn this;\n\t}\n\n\tcanToggle() {\n\t\treturn !(this.disabled || this.readonly);\n\t}\n\n\tvalueStateTextMappings() {\n\t\treturn {\n\t\t\t\"Error\": CheckBox.i18nBundle.getText(VALUE_STATE_ERROR),\n\t\t\t\"Warning\": CheckBox.i18nBundle.getText(VALUE_STATE_WARNING),\n\t\t\t\"Success\": CheckBox.i18nBundle.getText(VALUE_STATE_SUCCESS),\n\t\t};\n\t}\n\n\tget ariaLabelText() {\n\t\treturn getEffectiveAriaLabelText(this);\n\t}\n\n\tget classes() {\n\t\treturn {\n\t\t\tmain: {\n\t\t\t\t\"ui5-checkbox--hoverable\": !this.disabled && !this.readonly && isDesktop(),\n\t\t\t},\n\t\t};\n\t}\n\n\tget ariaReadonly() {\n\t\treturn this.readonly ? \"true\" : undefined;\n\t}\n\n\tget ariaDisabled() {\n\t\treturn this.disabled ? \"true\" : undefined;\n\t}\n\n\tget ariaChecked() {\n\t\treturn this.indeterminate && this.checked ? \"mixed\" : this.checked;\n\t}\n\n\tget ariaLabelledBy() {\n\t\tif (!this.ariaLabelText) {\n\t\t\treturn this.text ? `${this._id}-label` : undefined;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tget ariaDescribedBy() {\n\t\treturn this.hasValueState ? `${this._id}-descr` : undefined;\n\t}\n\n\tget hasValueState() {\n\t\treturn this.valueState !== ValueState.None;\n\t}\n\n\tget valueStateText() {\n\t\treturn this.valueStateTextMappings()[this.valueState];\n\t}\n\n\tget tabIndex() {\n\t\tconst tabindex = this.getAttribute(\"tabindex\");\n\t\treturn this.disabled ? undefined : tabindex || \"0\";\n\t}\n\n\tget isCompletelyChecked() {\n\t\treturn this.checked && !this.indeterminate;\n\t}\n\n\tstatic get dependencies() {\n\t\treturn [\n\t\t\tLabel,\n\t\t\tIcon,\n\t\t];\n\t}\n\n\tstatic async onDefine() {\n\t\tCheckBox.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n\t}\n}\n\nCheckBox.define();\n\nexport default CheckBox;\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,wCAAwC;AAClE,OAAOC,UAAU,MAAM,4CAA4C;AACnE,OAAOC,SAAS,MAAM,sDAAsD;AAC5E,SAASC,aAAa,QAAQ,4CAA4C;AAC1E,OAAOC,UAAU,MAAM,kDAAkD;AACzE,SAASC,UAAU,QAAQ,kDAAkD;AAC7E,SAASC,yBAAyB,QAAQ,sDAAsD;AAChG,SAASC,OAAO,EAAEC,OAAO,QAAQ,sCAAsC;AACvE,OAAO,yCAAyC;AAChD,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAOC,KAAK,MAAM,YAAY;AAC9B,OAAOC,YAAY,MAAM,yBAAyB;AAClD,SACCC,iBAAiB,EACjBC,mBAAmB,EACnBC,mBAAmB,QACb,mCAAmC;;AAE1C;AACA,OAAOC,gBAAgB,MAAM,+CAA+C;;AAE5E;AACA,OAAOC,WAAW,MAAM,oCAAoC;AAE5D,IAAIC,uBAAuB,GAAG,KAAK;AACnC,IAAIC,QAAQ,GAAG,IAAI;;AAEnB;AACA;AACA;AACA,MAAMC,QAAQ,GAAG;EAChBC,GAAG,EAAE,cAAc;EACnBC,aAAa,EAAE,IAAI;EACnBC,UAAU,EAAE,0DAA2D;IAEtE;AACF;AACA;AACA;AACA;AACA;AACA;IACEC,iBAAiB,EAAE;MAClBC,IAAI,EAAEC,MAAM;MACZC,YAAY,EAAE;IACf,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACEC,cAAc,EAAE;MACfH,IAAI,EAAEC;IACP,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEG,QAAQ,EAAE;MACTJ,IAAI,EAAEK;IACP,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEC,QAAQ,EAAE;MACTN,IAAI,EAAEK;IACP,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACEE,QAAQ,EAAE;MACTP,IAAI,EAAEK;IACP,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEG,aAAa,EAAE;MACdR,IAAI,EAAEK;IACP,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEI,OAAO,EAAE;MACRT,IAAI,EAAEK;IACP,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;IACEK,IAAI,EAAE;MACLV,IAAI,EAAEC;IACP,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEU,UAAU,EAAE;MACXX,IAAI,EAAEpB,UAAU;MAChBsB,YAAY,EAAEtB,UAAU,CAACgC;IAC1B,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACGC,YAAY,EAAE;MACdb,IAAI,EAAEb,YAAY;MAClBe,YAAY,EAAEf,YAAY,CAACyB;IAC5B,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEE,IAAI,EAAE;MACLd,IAAI,EAAEC;IACP,CAAC;IAED;AACF;AACA;AACA;IACEc,MAAM,EAAE;MACPf,IAAI,EAAEK;IACP;EACD,CAAC;EACDW,MAAM,EAAE,0DAA2D;IAElE;AACF;AACA;AACA;AACA;AACA;IACEC,MAAM,EAAE,CAAC;EACV,CAAC;EACDC,KAAK,EAAE,0DAA2D;IACjE;AACF;AACA;AACA;AACA;AACA;AACA;IACEC,WAAW,EAAE;MACZnB,IAAI,EAAEoB;IACP;EACD;AACD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,QAAQ,SAAS5C,UAAU,CAAC;EACjC,WAAWkB,QAAQ,GAAG;IACrB,OAAOA,QAAQ;EAChB;EAEA,WAAW2B,MAAM,GAAG;IACnB,OAAO5C,SAAS;EACjB;EAEA,WAAW6C,QAAQ,GAAG;IACrB,OAAOhC,gBAAgB;EACxB;EAEA,WAAWiC,MAAM,GAAG;IACnB,OAAOhC,WAAW;EACnB;EAEAiC,WAAW,GAAG;IACb,KAAK,EAAE;IAEP,IAAI,CAACC,WAAW,GAAG,MAAM;MACxB,IAAIhC,QAAQ,EAAE;QACbA,QAAQ,CAACqB,MAAM,GAAG,KAAK;MACxB;IACD,CAAC;IAED,IAAI,CAACtB,uBAAuB,EAAE;MAC7BkC,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAACF,WAAW,CAAC;MACtDjC,uBAAuB,GAAG,IAAI;IAC/B;EACD;EAEAoC,iBAAiB,GAAG;IACnB,IAAI,CAACC,kBAAkB,EAAE;EAC1B;EAEAA,kBAAkB,GAAG;IACpB,MAAMC,WAAW,GAAGlD,UAAU,CAAC,aAAa,CAAC;IAC7C,IAAIkD,WAAW,EAAE;MAChBA,WAAW,CAACC,qBAAqB,CAAC,IAAI,EAAE,CAACC,OAAO,EAAEC,WAAW,KAAK;QACjEA,WAAW,CAAC9B,QAAQ,GAAG6B,OAAO,CAAC7B,QAAQ,IAAI,CAAC6B,OAAO,CAACxB,OAAO;QAC3DyB,WAAW,CAACC,KAAK,GAAGF,OAAO,CAACxB,OAAO,GAAG,IAAI,GAAG,EAAE;MAChD,CAAC,CAAC;IACH,CAAC,MAAM,IAAI,IAAI,CAACK,IAAI,EAAE;MACrBsB,OAAO,CAACC,IAAI,CAAE,0IAAyI,CAAC,CAAC,CAAC;IAC3J;EACD;;EAEAC,QAAQ,GAAG;IACV,IAAI,CAACC,MAAM,EAAE;EACd;EAEAC,YAAY,GAAG;IACd,IAAI,IAAI,CAAClC,QAAQ,IAAI,IAAI,CAACF,QAAQ,EAAE;MACnC;IACD;IAEA,IAAI,CAACW,MAAM,GAAG,IAAI;IAClBrB,QAAQ,GAAG,IAAI,CAAC,CAAC;EAClB;;EAEA+C,UAAU,GAAG;IACZ,IAAI,CAAC1B,MAAM,GAAG,KAAK;EACpB;EAEA2B,WAAW,GAAG;IACb,IAAI,CAAC3B,MAAM,GAAG,KAAK;EACpB;EAEA4B,UAAU,CAACC,KAAK,EAAE;IACjB,IAAI7D,OAAO,CAAC6D,KAAK,CAAC,EAAE;MACnBA,KAAK,CAACC,cAAc,EAAE;MACtB,IAAI,CAAC9B,MAAM,GAAG,IAAI;IACnB;IAEA,IAAI/B,OAAO,CAAC4D,KAAK,CAAC,EAAE;MACnB,IAAI,CAACL,MAAM,EAAE;MACb,IAAI,CAACxB,MAAM,GAAG,IAAI;IACnB;EACD;EAEA+B,QAAQ,CAACF,KAAK,EAAE;IACf,IAAI7D,OAAO,CAAC6D,KAAK,CAAC,EAAE;MACnB,IAAI,CAACL,MAAM,EAAE;IACd;IAEA,IAAI,CAACxB,MAAM,GAAG,KAAK;EACpB;EAEAwB,MAAM,GAAG;IACR,IAAI,IAAI,CAACQ,SAAS,EAAE,EAAE;MACrB,IAAI,IAAI,CAACvC,aAAa,EAAE;QACvB,IAAI,CAACA,aAAa,GAAG,KAAK;QAC1B,IAAI,CAACC,OAAO,GAAG,IAAI;MACpB,CAAC,MAAM;QACN,IAAI,CAACA,OAAO,GAAG,CAAC,IAAI,CAACA,OAAO;MAC7B;MAEA,IAAI,CAACuC,SAAS,CAAC,QAAQ,CAAC;MACxB;MACA,IAAI,CAACA,SAAS,CAAC,eAAe,CAAC;IAChC;IACA,OAAO,IAAI;EACZ;EAEAD,SAAS,GAAG;IACX,OAAO,EAAE,IAAI,CAAC3C,QAAQ,IAAI,IAAI,CAACE,QAAQ,CAAC;EACzC;EAEA2C,sBAAsB,GAAG;IACxB,OAAO;MACN,OAAO,EAAE5B,QAAQ,CAAC6B,UAAU,CAACC,OAAO,CAAC/D,iBAAiB,CAAC;MACvD,SAAS,EAAEiC,QAAQ,CAAC6B,UAAU,CAACC,OAAO,CAAC9D,mBAAmB,CAAC;MAC3D,SAAS,EAAEgC,QAAQ,CAAC6B,UAAU,CAACC,OAAO,CAAC7D,mBAAmB;IAC3D,CAAC;EACF;EAEA,IAAI8D,aAAa,GAAG;IACnB,OAAOtE,yBAAyB,CAAC,IAAI,CAAC;EACvC;EAEA,IAAIuE,OAAO,GAAG;IACb,OAAO;MACNC,IAAI,EAAE;QACL,yBAAyB,EAAE,CAAC,IAAI,CAAClD,QAAQ,IAAI,CAAC,IAAI,CAACE,QAAQ,IAAI9B,SAAS;MACzE;IACD,CAAC;EACF;EAEA,IAAI+E,YAAY,GAAG;IAClB,OAAO,IAAI,CAACjD,QAAQ,GAAG,MAAM,GAAGkD,SAAS;EAC1C;EAEA,IAAIC,YAAY,GAAG;IAClB,OAAO,IAAI,CAACrD,QAAQ,GAAG,MAAM,GAAGoD,SAAS;EAC1C;EAEA,IAAIE,WAAW,GAAG;IACjB,OAAO,IAAI,CAAClD,aAAa,IAAI,IAAI,CAACC,OAAO,GAAG,OAAO,GAAG,IAAI,CAACA,OAAO;EACnE;EAEA,IAAIkD,cAAc,GAAG;IACpB,IAAI,CAAC,IAAI,CAACP,aAAa,EAAE;MACxB,OAAO,IAAI,CAAC1C,IAAI,GAAI,GAAE,IAAI,CAACkD,GAAI,QAAO,GAAGJ,SAAS;IACnD;IAEA,OAAOA,SAAS;EACjB;EAEA,IAAIK,eAAe,GAAG;IACrB,OAAO,IAAI,CAACC,aAAa,GAAI,GAAE,IAAI,CAACF,GAAI,QAAO,GAAGJ,SAAS;EAC5D;EAEA,IAAIM,aAAa,GAAG;IACnB,OAAO,IAAI,CAACnD,UAAU,KAAK/B,UAAU,CAACgC,IAAI;EAC3C;EAEA,IAAImD,cAAc,GAAG;IACpB,OAAO,IAAI,CAACd,sBAAsB,EAAE,CAAC,IAAI,CAACtC,UAAU,CAAC;EACtD;EAEA,IAAIqD,QAAQ,GAAG;IACd,MAAMC,QAAQ,GAAG,IAAI,CAACC,YAAY,CAAC,UAAU,CAAC;IAC9C,OAAO,IAAI,CAAC9D,QAAQ,GAAGoD,SAAS,GAAGS,QAAQ,IAAI,GAAG;EACnD;EAEA,IAAIE,mBAAmB,GAAG;IACzB,OAAO,IAAI,CAAC1D,OAAO,IAAI,CAAC,IAAI,CAACD,aAAa;EAC3C;EAEA,WAAW4D,YAAY,GAAG;IACzB,OAAO,CACNlF,KAAK,EACLD,IAAI,CACJ;EACF;EAEA,aAAaoF,QAAQ,GAAG;IACvBhD,QAAQ,CAAC6B,UAAU,GAAG,MAAMvE,aAAa,CAAC,oBAAoB,CAAC;EAChE;AACD;AAEA0C,QAAQ,CAACiD,MAAM,EAAE;AAEjB,eAAejD,QAAQ"},"metadata":{},"sourceType":"module"}