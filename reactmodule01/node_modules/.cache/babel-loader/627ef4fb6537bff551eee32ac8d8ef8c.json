{"ast":null,"code":"import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport { isSafari } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport WrappingType from \"./types/WrappingType.js\";\n\n// Template\nimport LabelTemplate from \"./generated/templates/LabelTemplate.lit.js\";\n\n// Styles\nimport labelCss from \"./generated/themes/Label.css.js\";\n\n/**\n * @public\n */\nconst metadata = {\n  tag: \"ui5-label\",\n  properties: /** @lends sap.ui.webcomponents.main.Label.prototype */{\n    /**\n     * Defines whether an asterisk character is added to the component text.\n     * <br><br>\n     * <b>Note:</b> Usually indicates that user input (bound with the <code>for</code> property) is required.\n     * In that case the <code>required</> property of\n     * the corresponding input should also be set.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    required: {\n      type: Boolean\n    },\n    /**\n     * Defines how the text of a component will be displayed when there is not enough space.\n     * Available options are:\n     * <ul>\n     * <li><code>None</code> - The text will be truncated with an ellipsis.</li>\n     * <li><code>Normal</code> - The text will wrap. The words will not be broken based on hyphenation.</li>\n     * </ul>\n     *\n     * @type {sap.ui.webcomponents.main.types.WrappingType}\n     * @defaultvalue \"None\"\n     * @public\n     */\n    wrappingType: {\n      type: WrappingType,\n      defaultValue: WrappingType.None\n    },\n    /**\n     * Defines whether colon is added to the component text.\n     * <br><br>\n     * <b>Note:</b> Usually used in forms.\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n\n    showColon: {\n      type: Boolean\n    },\n    /**\n     * Defines the labeled input by providing its ID.\n     * <br><br>\n     * <b>Note:</b> Can be used with both <code>ui5-input</code> and native input.\n     *\n     * @type {string}\n     * @defaultvalue \"\"\n     * @public\n     */\n    \"for\": {\n      type: String\n    }\n  },\n  slots: /** @lends sap.ui.webcomponents.main.Label.prototype */{\n    /**\n     * Defines the text of the component.\n     * <br><b>Note:</b> Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.\n     *\n     * @type {Node[]}\n     * @slot\n     * @public\n     */\n    \"default\": {\n      type: Node\n    }\n  }\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * The <code>ui5-label</code> is a component used to represent a label,\n * providing valuable information to the user.\n * Usually it is placed next to a value holder, such as a text field.\n * It informs the user about what data is displayed or expected in the value holder.\n * <br><br>\n * The <code>ui5-label</code> appearance can be influenced by properties,\n * such as <code>required</code> and <code>wrappingType</code>.\n * The appearance of the Label can be configured in a limited way by using the design property.\n * For a broader choice of designs, you can use custom styles.\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/Label\";</code>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.Label\n * @extends sap.ui.webcomponents.base.UI5Element\n * @tagname ui5-label\n * @public\n */\nclass Label extends UI5Element {\n  static get metadata() {\n    return metadata;\n  }\n  static get render() {\n    return litRender;\n  }\n  static get template() {\n    return LabelTemplate;\n  }\n  static get styles() {\n    return labelCss;\n  }\n  get classes() {\n    return {\n      textWrapper: {\n        \"ui5-label-text-wrapper\": true,\n        \"ui5-label-text-wrapper-safari\": isSafari()\n      }\n    };\n  }\n  _onclick() {\n    if (!this.for) {\n      return;\n    }\n    const elementToFocus = this.getRootNode().querySelector(`#${this.for}`);\n    if (elementToFocus) {\n      elementToFocus.focus();\n    }\n  }\n}\nLabel.define();\nexport default Label;","map":{"version":3,"names":["UI5Element","litRender","isSafari","WrappingType","LabelTemplate","labelCss","metadata","tag","properties","required","type","Boolean","wrappingType","defaultValue","None","showColon","String","slots","Node","Label","render","template","styles","classes","textWrapper","_onclick","for","elementToFocus","getRootNode","querySelector","focus","define"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/node_modules/@ui5/webcomponents/dist/Label.js"],"sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport { isSafari } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport WrappingType from \"./types/WrappingType.js\";\n\n// Template\nimport LabelTemplate from \"./generated/templates/LabelTemplate.lit.js\";\n\n// Styles\nimport labelCss from \"./generated/themes/Label.css.js\";\n\n/**\n * @public\n */\nconst metadata = {\n\ttag: \"ui5-label\",\n\tproperties: /** @lends sap.ui.webcomponents.main.Label.prototype */  {\n\n\t\t/**\n\t\t * Defines whether an asterisk character is added to the component text.\n\t\t * <br><br>\n\t\t * <b>Note:</b> Usually indicates that user input (bound with the <code>for</code> property) is required.\n\t\t * In that case the <code>required</> property of\n\t\t * the corresponding input should also be set.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\trequired: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines how the text of a component will be displayed when there is not enough space.\n\t\t * Available options are:\n\t\t * <ul>\n\t\t * <li><code>None</code> - The text will be truncated with an ellipsis.</li>\n\t\t * <li><code>Normal</code> - The text will wrap. The words will not be broken based on hyphenation.</li>\n\t\t * </ul>\n\t\t *\n\t\t * @type {sap.ui.webcomponents.main.types.WrappingType}\n\t\t * @defaultvalue \"None\"\n\t\t * @public\n\t\t */\n\t\t wrappingType: {\n\t\t\ttype: WrappingType,\n\t\t\tdefaultValue: WrappingType.None,\n\t\t},\n\n\t\t/**\n\t\t * Defines whether colon is added to the component text.\n\t\t * <br><br>\n\t\t * <b>Note:</b> Usually used in forms.\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\n\t\tshowColon: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines the labeled input by providing its ID.\n\t\t * <br><br>\n\t\t * <b>Note:</b> Can be used with both <code>ui5-input</code> and native input.\n\t\t *\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @public\n\t\t */\n\t\t\"for\": {\n\t\t\ttype: String,\n\t\t},\n\t},\n\tslots: /** @lends sap.ui.webcomponents.main.Label.prototype */ {\n\t\t/**\n\t\t * Defines the text of the component.\n\t\t * <br><b>Note:</b> Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.\n\t\t *\n\t\t * @type {Node[]}\n\t\t * @slot\n\t\t * @public\n\t\t */\n\t\t\"default\": {\n\t\t\ttype: Node,\n\t\t},\n\t},\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * The <code>ui5-label</code> is a component used to represent a label,\n * providing valuable information to the user.\n * Usually it is placed next to a value holder, such as a text field.\n * It informs the user about what data is displayed or expected in the value holder.\n * <br><br>\n * The <code>ui5-label</code> appearance can be influenced by properties,\n * such as <code>required</code> and <code>wrappingType</code>.\n * The appearance of the Label can be configured in a limited way by using the design property.\n * For a broader choice of designs, you can use custom styles.\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/Label\";</code>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.Label\n * @extends sap.ui.webcomponents.base.UI5Element\n * @tagname ui5-label\n * @public\n */\nclass Label extends UI5Element {\n\tstatic get metadata() {\n\t\treturn metadata;\n\t}\n\n\tstatic get render() {\n\t\treturn litRender;\n\t}\n\n\tstatic get template() {\n\t\treturn LabelTemplate;\n\t}\n\n\tstatic get styles() {\n\t\treturn labelCss;\n\t}\n\n\tget classes() {\n\t\treturn {\n\t\t\ttextWrapper: {\n\t\t\t\t\"ui5-label-text-wrapper\": true,\n\t\t\t\t\"ui5-label-text-wrapper-safari\": isSafari(),\n\t\t\t},\n\t\t};\n\t}\n\n\t_onclick() {\n\t\tif (!this.for) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst elementToFocus = this.getRootNode().querySelector(`#${this.for}`);\n\t\tif (elementToFocus) {\n\t\t\telementToFocus.focus();\n\t\t}\n\t}\n}\n\nLabel.define();\n\nexport default Label;\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,4CAA4C;AACnE,OAAOC,SAAS,MAAM,sDAAsD;AAC5E,SAASC,QAAQ,QAAQ,wCAAwC;AACjE,OAAOC,YAAY,MAAM,yBAAyB;;AAElD;AACA,OAAOC,aAAa,MAAM,4CAA4C;;AAEtE;AACA,OAAOC,QAAQ,MAAM,iCAAiC;;AAEtD;AACA;AACA;AACA,MAAMC,QAAQ,GAAG;EAChBC,GAAG,EAAE,WAAW;EAChBC,UAAU,EAAE,uDAAyD;IAEpE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEC,QAAQ,EAAE;MACTC,IAAI,EAAEC;IACP,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACGC,YAAY,EAAE;MACdF,IAAI,EAAEP,YAAY;MAClBU,YAAY,EAAEV,YAAY,CAACW;IAC5B,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;IAEEC,SAAS,EAAE;MACVL,IAAI,EAAEC;IACP,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,KAAK,EAAE;MACND,IAAI,EAAEM;IACP;EACD,CAAC;EACDC,KAAK,EAAE,uDAAwD;IAC9D;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,SAAS,EAAE;MACVP,IAAI,EAAEQ;IACP;EACD;AACD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,KAAK,SAASnB,UAAU,CAAC;EAC9B,WAAWM,QAAQ,GAAG;IACrB,OAAOA,QAAQ;EAChB;EAEA,WAAWc,MAAM,GAAG;IACnB,OAAOnB,SAAS;EACjB;EAEA,WAAWoB,QAAQ,GAAG;IACrB,OAAOjB,aAAa;EACrB;EAEA,WAAWkB,MAAM,GAAG;IACnB,OAAOjB,QAAQ;EAChB;EAEA,IAAIkB,OAAO,GAAG;IACb,OAAO;MACNC,WAAW,EAAE;QACZ,wBAAwB,EAAE,IAAI;QAC9B,+BAA+B,EAAEtB,QAAQ;MAC1C;IACD,CAAC;EACF;EAEAuB,QAAQ,GAAG;IACV,IAAI,CAAC,IAAI,CAACC,GAAG,EAAE;MACd;IACD;IAEA,MAAMC,cAAc,GAAG,IAAI,CAACC,WAAW,EAAE,CAACC,aAAa,CAAE,IAAG,IAAI,CAACH,GAAI,EAAC,CAAC;IACvE,IAAIC,cAAc,EAAE;MACnBA,cAAc,CAACG,KAAK,EAAE;IACvB;EACD;AACD;AAEAX,KAAK,CAACY,MAAM,EAAE;AAEd,eAAeZ,KAAK"},"metadata":{},"sourceType":"module"}