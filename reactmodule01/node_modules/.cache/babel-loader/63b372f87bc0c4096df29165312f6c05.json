{"ast":null,"code":"var _jsxFileName = \"/home/user/projects/reactwithcap01/reactmodule01/src/pages/MasterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Container, Box } from \"@material-ui/core\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { getTableData, getTableCount } from \"api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: \"ProductName\",\n  headerName: \"ProductName\",\n  width: 250\n}, {\n  field: \"ProductID\",\n  headerName: \"ProductID\",\n  flex: 1\n}, {\n  field: \"SupplierID\",\n  headerName: \"SupplierID\",\n  flex: 1\n}];\nconst PAGE_SIZE = 15;\nexport default function MasterPage() {\n  _s();\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Number of rows which exist on the service\n  const [rowCount, setRowCount] = useState(0);\n  const loadData = async function (isFirstLoad) {\n    let skip = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    try {\n      setItems([]);\n      setLoading(true);\n      if (isFirstLoad) {\n        const count = await getTableCount();\n        setRowCount(count);\n      }\n      const _items = await getTableData({\n        $top: PAGE_SIZE,\n        $skip: skip\n      });\n      const itemsWithIds = _items.map((item, index) => {\n        item.id = index;\n        return item;\n      });\n      setItems(itemsWithIds);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handlePageChanged = _ref => {\n    let {\n      page\n    } = _ref;\n    loadData(false, page * PAGE_SIZE);\n  };\n  useEffect(() => {\n    // when component mounted\n    loadData(true);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    disableGutters: true,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      height: \"80vh\",\n      py: 5,\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        loading: loading,\n        rows: items,\n        columns: columns,\n        pageSize: PAGE_SIZE,\n        paginationMode: \"server\",\n        rowCount: rowCount,\n        onPageChange: handlePageChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(MasterPage, \"ag1JOf9OHrb/8wiX75ndW0j7HQ4=\");\n_c = MasterPage;\nvar _c;\n$RefreshReg$(_c, \"MasterPage\");","map":{"version":3,"names":["React","useEffect","useState","Container","Box","DataGrid","getTableData","getTableCount","columns","field","headerName","width","flex","PAGE_SIZE","MasterPage","items","setItems","loading","setLoading","rowCount","setRowCount","loadData","isFirstLoad","skip","count","_items","$top","$skip","itemsWithIds","map","item","index","id","handlePageChanged","page"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/src/pages/MasterPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Container, Box } from \"@material-ui/core\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { getTableData, getTableCount } from \"api\";\n\nconst columns = [\n  { field: \"ProductName\", headerName: \"ProductName\", width: 250 },\n  { field: \"ProductID\", headerName: \"ProductID\", flex: 1 },\n  { field: \"SupplierID\", headerName: \"SupplierID\", flex: 1 }\n];\n\nconst PAGE_SIZE = 15;\n\nexport default function MasterPage() {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Number of rows which exist on the service\n  const [rowCount, setRowCount] = useState(0);\n\n  const loadData = async (isFirstLoad, skip = 0) => {\n    try {\n      setItems([]);\n      setLoading(true);\n\n      if (isFirstLoad) {\n        const count = await getTableCount();\n        setRowCount(count);\n      }\n\n      const _items = await getTableData({\n        $top: PAGE_SIZE,\n        $skip: skip\n      });\n      const itemsWithIds = _items.map((item, index) => {\n        item.id = index;\n        return item;\n      });\n      setItems(itemsWithIds);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handlePageChanged = ({ page }) => {\n    loadData(false, page * PAGE_SIZE);\n  };\n\n  useEffect(() => {\n    // when component mounted\n    loadData(true);\n  }, []);\n\n  return (\n    <Container disableGutters>\n      <Box height=\"80vh\" py={5}>\n        <DataGrid\n          loading={loading}\n          rows={items}\n          columns={columns}\n          pageSize={PAGE_SIZE}\n          paginationMode=\"server\"\n          rowCount={rowCount}\n          onPageChange={handlePageChanged}\n        />\n      </Box>\n    </Container>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,GAAG,QAAQ,mBAAmB;AAClD,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,SAASC,YAAY,EAAEC,aAAa,QAAQ,KAAK;AAAC;AAElD,MAAMC,OAAO,GAAG,CACd;EAAEC,KAAK,EAAE,aAAa;EAAEC,UAAU,EAAE,aAAa;EAAEC,KAAK,EAAE;AAAI,CAAC,EAC/D;EAAEF,KAAK,EAAE,WAAW;EAAEC,UAAU,EAAE,WAAW;EAAEE,IAAI,EAAE;AAAE,CAAC,EACxD;EAAEH,KAAK,EAAE,YAAY;EAAEC,UAAU,EAAE,YAAY;EAAEE,IAAI,EAAE;AAAE,CAAC,CAC3D;AAED,MAAMC,SAAS,GAAG,EAAE;AAEpB,eAAe,SAASC,UAAU,GAAG;EAAA;EACnC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EAE3C,MAAMmB,QAAQ,GAAG,gBAAOC,WAAW,EAAe;IAAA,IAAbC,IAAI,uEAAG,CAAC;IAC3C,IAAI;MACFP,QAAQ,CAAC,EAAE,CAAC;MACZE,UAAU,CAAC,IAAI,CAAC;MAEhB,IAAII,WAAW,EAAE;QACf,MAAME,KAAK,GAAG,MAAMjB,aAAa,EAAE;QACnCa,WAAW,CAACI,KAAK,CAAC;MACpB;MAEA,MAAMC,MAAM,GAAG,MAAMnB,YAAY,CAAC;QAChCoB,IAAI,EAAEb,SAAS;QACfc,KAAK,EAAEJ;MACT,CAAC,CAAC;MACF,MAAMK,YAAY,GAAGH,MAAM,CAACI,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QAC/CD,IAAI,CAACE,EAAE,GAAGD,KAAK;QACf,OAAOD,IAAI;MACb,CAAC,CAAC;MACFd,QAAQ,CAACY,YAAY,CAAC;IACxB,CAAC,SAAS;MACRV,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMe,iBAAiB,GAAG,QAAc;IAAA,IAAb;MAAEC;IAAK,CAAC;IACjCb,QAAQ,CAAC,KAAK,EAAEa,IAAI,GAAGrB,SAAS,CAAC;EACnC,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACd;IACAoB,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE,QAAC,SAAS;IAAC,cAAc;IAAA,uBACvB,QAAC,GAAG;MAAC,MAAM,EAAC,MAAM;MAAC,EAAE,EAAE,CAAE;MAAA,uBACvB,QAAC,QAAQ;QACP,OAAO,EAAEJ,OAAQ;QACjB,IAAI,EAAEF,KAAM;QACZ,OAAO,EAAEP,OAAQ;QACjB,QAAQ,EAAEK,SAAU;QACpB,cAAc,EAAC,QAAQ;QACvB,QAAQ,EAAEM,QAAS;QACnB,YAAY,EAAEc;MAAkB;QAAA;QAAA;QAAA;MAAA;IAChC;MAAA;MAAA;MAAA;IAAA;EACE;IAAA;IAAA;IAAA;EAAA,QACI;AAEhB;AAAC,GAvDuBnB,UAAU;AAAA,KAAVA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module"}