{"ast":null,"code":"import { registerI18nLoader, fetchI18nBundle, getI18nBundleData } from \"./asset-registries/i18n.js\";\nimport formatMessage from \"./util/formatMessage.js\";\nconst I18nBundleInstances = new Map();\nlet customGetI18nBundle;\n\n/**\n * @class\n * @public\n */\nclass I18nBundle {\n  constructor(packageName) {\n    this.packageName = packageName;\n  }\n\n  /**\n   * Returns a text in the currently loaded language\n   *\n   * @public\n   * @param {Object|String} textObj key/defaultText pair or just the key\n   * @param params Values for the placeholders\n   * @returns {*}\n   */\n  getText(textObj) {\n    if (typeof textObj === \"string\") {\n      textObj = {\n        key: textObj,\n        defaultText: textObj\n      };\n    }\n    if (!textObj || !textObj.key) {\n      return \"\";\n    }\n    const bundle = getI18nBundleData(this.packageName);\n    if (bundle && !bundle[textObj.key]) {\n      console.warn(`Key ${textObj.key} not found in the i18n bundle, the default text will be used`); // eslint-disable-line\n    }\n\n    const messageText = bundle && bundle[textObj.key] ? bundle[textObj.key] : textObj.defaultText || textObj.key;\n    for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      params[_key - 1] = arguments[_key];\n    }\n    return params.length ? formatMessage(messageText, params) : messageText;\n  }\n}\nconst getI18nBundleSync = packageName => {\n  if (I18nBundleInstances.has(packageName)) {\n    return I18nBundleInstances.get(packageName);\n  }\n  const i18nBundle = new I18nBundle(packageName);\n  I18nBundleInstances.set(packageName, i18nBundle);\n  return i18nBundle;\n};\n\n/**\n * Allows developers to provide a custom getI18nBundle implementation\n * If this function is called, the custom implementation will be used for all components and will completely\n * replace the default implementation.\n *\n * @public\n * @param customGet the function to use instead of the standard getI18nBundle implementation\n */\nconst registerCustomI18nBundleGetter = customGet => {\n  customGetI18nBundle = customGet;\n};\n\n/**\n * Fetches and returns the I18nBundle instance for the given package\n *\n * @public\n * @param packageName\n * @returns {Promise<I18nBundle>}\n */\nconst getI18nBundle = async packageName => {\n  if (customGetI18nBundle) {\n    return customGetI18nBundle(packageName);\n  }\n  await fetchI18nBundle(packageName);\n  return getI18nBundleSync(packageName);\n};\nexport { registerI18nLoader, getI18nBundle, registerCustomI18nBundleGetter };","map":{"version":3,"names":["registerI18nLoader","fetchI18nBundle","getI18nBundleData","formatMessage","I18nBundleInstances","Map","customGetI18nBundle","I18nBundle","constructor","packageName","getText","textObj","key","defaultText","bundle","console","warn","messageText","params","length","getI18nBundleSync","has","get","i18nBundle","set","registerCustomI18nBundleGetter","customGet","getI18nBundle"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/node_modules/@ui5/webcomponents-base/dist/i18nBundle.js"],"sourcesContent":["import { registerI18nLoader, fetchI18nBundle, getI18nBundleData } from \"./asset-registries/i18n.js\";\nimport formatMessage from \"./util/formatMessage.js\";\n\nconst I18nBundleInstances = new Map();\n\nlet customGetI18nBundle;\n\n/**\n * @class\n * @public\n */\nclass I18nBundle {\n\tconstructor(packageName) {\n\t\tthis.packageName = packageName;\n\t}\n\n\t/**\n\t * Returns a text in the currently loaded language\n\t *\n\t * @public\n\t * @param {Object|String} textObj key/defaultText pair or just the key\n\t * @param params Values for the placeholders\n\t * @returns {*}\n\t */\n\tgetText(textObj, ...params) {\n\t\tif (typeof textObj === \"string\") {\n\t\t\ttextObj = { key: textObj, defaultText: textObj };\n\t\t}\n\n\t\tif (!textObj || !textObj.key) {\n\t\t\treturn \"\";\n\t\t}\n\n\t\tconst bundle = getI18nBundleData(this.packageName);\n\t\tif (bundle && !bundle[textObj.key]) {\n\t\t\tconsole.warn(`Key ${textObj.key} not found in the i18n bundle, the default text will be used`); // eslint-disable-line\n\t\t}\n\t\tconst messageText = bundle && bundle[textObj.key] ? bundle[textObj.key] : (textObj.defaultText || textObj.key);\n\n\t\treturn params.length ? formatMessage(messageText, params) : messageText;\n\t}\n}\n\nconst getI18nBundleSync = packageName => {\n\tif (I18nBundleInstances.has(packageName)) {\n\t\treturn I18nBundleInstances.get(packageName);\n\t}\n\n\tconst i18nBundle = new I18nBundle(packageName);\n\tI18nBundleInstances.set(packageName, i18nBundle);\n\treturn i18nBundle;\n};\n\n/**\n * Allows developers to provide a custom getI18nBundle implementation\n * If this function is called, the custom implementation will be used for all components and will completely\n * replace the default implementation.\n *\n * @public\n * @param customGet the function to use instead of the standard getI18nBundle implementation\n */\nconst registerCustomI18nBundleGetter = customGet => {\n\tcustomGetI18nBundle = customGet;\n};\n\n/**\n * Fetches and returns the I18nBundle instance for the given package\n *\n * @public\n * @param packageName\n * @returns {Promise<I18nBundle>}\n */\nconst getI18nBundle = async packageName => {\n\tif (customGetI18nBundle) {\n\t\treturn customGetI18nBundle(packageName);\n\t}\n\n\tawait fetchI18nBundle(packageName);\n\treturn getI18nBundleSync(packageName);\n};\n\nexport {\n\tregisterI18nLoader,\n\tgetI18nBundle,\n\tregisterCustomI18nBundleGetter,\n};\n"],"mappings":"AAAA,SAASA,kBAAkB,EAAEC,eAAe,EAAEC,iBAAiB,QAAQ,4BAA4B;AACnG,OAAOC,aAAa,MAAM,yBAAyB;AAEnD,MAAMC,mBAAmB,GAAG,IAAIC,GAAG,EAAE;AAErC,IAAIC,mBAAmB;;AAEvB;AACA;AACA;AACA;AACA,MAAMC,UAAU,CAAC;EAChBC,WAAW,CAACC,WAAW,EAAE;IACxB,IAAI,CAACA,WAAW,GAAGA,WAAW;EAC/B;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACCC,OAAO,CAACC,OAAO,EAAa;IAC3B,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;MAChCA,OAAO,GAAG;QAAEC,GAAG,EAAED,OAAO;QAAEE,WAAW,EAAEF;MAAQ,CAAC;IACjD;IAEA,IAAI,CAACA,OAAO,IAAI,CAACA,OAAO,CAACC,GAAG,EAAE;MAC7B,OAAO,EAAE;IACV;IAEA,MAAME,MAAM,GAAGZ,iBAAiB,CAAC,IAAI,CAACO,WAAW,CAAC;IAClD,IAAIK,MAAM,IAAI,CAACA,MAAM,CAACH,OAAO,CAACC,GAAG,CAAC,EAAE;MACnCG,OAAO,CAACC,IAAI,CAAE,OAAML,OAAO,CAACC,GAAI,8DAA6D,CAAC,CAAC,CAAC;IACjG;;IACA,MAAMK,WAAW,GAAGH,MAAM,IAAIA,MAAM,CAACH,OAAO,CAACC,GAAG,CAAC,GAAGE,MAAM,CAACH,OAAO,CAACC,GAAG,CAAC,GAAID,OAAO,CAACE,WAAW,IAAIF,OAAO,CAACC,GAAI;IAAC,kCAb5FM,MAAM;MAANA,MAAM;IAAA;IAezB,OAAOA,MAAM,CAACC,MAAM,GAAGhB,aAAa,CAACc,WAAW,EAAEC,MAAM,CAAC,GAAGD,WAAW;EACxE;AACD;AAEA,MAAMG,iBAAiB,GAAGX,WAAW,IAAI;EACxC,IAAIL,mBAAmB,CAACiB,GAAG,CAACZ,WAAW,CAAC,EAAE;IACzC,OAAOL,mBAAmB,CAACkB,GAAG,CAACb,WAAW,CAAC;EAC5C;EAEA,MAAMc,UAAU,GAAG,IAAIhB,UAAU,CAACE,WAAW,CAAC;EAC9CL,mBAAmB,CAACoB,GAAG,CAACf,WAAW,EAAEc,UAAU,CAAC;EAChD,OAAOA,UAAU;AAClB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAME,8BAA8B,GAAGC,SAAS,IAAI;EACnDpB,mBAAmB,GAAGoB,SAAS;AAChC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,aAAa,GAAG,MAAMlB,WAAW,IAAI;EAC1C,IAAIH,mBAAmB,EAAE;IACxB,OAAOA,mBAAmB,CAACG,WAAW,CAAC;EACxC;EAEA,MAAMR,eAAe,CAACQ,WAAW,CAAC;EAClC,OAAOW,iBAAiB,CAACX,WAAW,CAAC;AACtC,CAAC;AAED,SACCT,kBAAkB,EAClB2B,aAAa,EACbF,8BAA8B"},"metadata":{},"sourceType":"module"}