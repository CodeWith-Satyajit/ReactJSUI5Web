{"ast":null,"code":"var TimezoneUtil = {};\nvar sLocalTimezone = \"\";\nvar oIntlDateTimeFormatCache = {\n  _oCache: new Map(),\n  _iCacheLimit: 10,\n  get: function (sTimezone) {\n    var cacheEntry = this._oCache.get(sTimezone);\n    if (cacheEntry) {\n      return cacheEntry;\n    }\n    var oOptions = {\n      hourCycle: \"h23\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\",\n      fractionalSecondDigits: 3,\n      day: \"2-digit\",\n      month: \"2-digit\",\n      year: \"numeric\",\n      timeZone: sTimezone,\n      timeZoneName: \"short\",\n      era: \"narrow\"\n    };\n    var oInstance = new Intl.DateTimeFormat(\"en-US\", oOptions);\n    if (this._oCache.size === this._iCacheLimit) {\n      this._oCache = new Map();\n    }\n    this._oCache.set(sTimezone, oInstance);\n    return oInstance;\n  }\n};\nTimezoneUtil.isValidTimezone = function (sTimezone) {\n  if (!sTimezone) {\n    return false;\n  }\n  try {\n    oIntlDateTimeFormatCache.get(sTimezone);\n    return true;\n  } catch (oError) {\n    return false;\n  }\n};\nTimezoneUtil.convertToTimezone = function (oDate, sTargetTimezone) {\n  var oFormatParts = this._getParts(oDate, sTargetTimezone);\n  return TimezoneUtil._getDateFromParts(oFormatParts);\n};\nTimezoneUtil._getParts = function (oDate, sTargetTimezone) {\n  var oIntlDate = oIntlDateTimeFormatCache.get(sTargetTimezone);\n  var oParts = oIntlDate.formatToParts(new Date(oDate.getTime()));\n  var oDateParts = Object.create(null);\n  for (var sKey in oParts) {\n    var oPart = oParts[sKey];\n    if (oPart.type !== \"literal\") {\n      oDateParts[oPart.type] = oPart.value;\n    }\n  }\n  return oDateParts;\n};\nTimezoneUtil._getDateFromParts = function (oParts) {\n  var oDate = new Date(0);\n  var iUTCYear = parseInt(oParts.year);\n  if (oParts.era === \"B\") {\n    iUTCYear = iUTCYear * -1 + 1;\n  }\n  oDate.setUTCFullYear(iUTCYear, parseInt(oParts.month) - 1, parseInt(oParts.day));\n  oDate.setUTCHours(parseInt(oParts.hour), parseInt(oParts.minute), parseInt(oParts.second), parseInt(oParts.fractionalSecond));\n  return oDate;\n};\nTimezoneUtil.calculateOffset = function (oDate, sTimezoneSource) {\n  var oFirstGuess = this.convertToTimezone(oDate, sTimezoneSource);\n  var iInitialOffset = oDate.getTime() - oFirstGuess.getTime();\n  var oDateSource = new Date(oDate.getTime() + iInitialOffset);\n  var oDateTarget = this.convertToTimezone(oDateSource, sTimezoneSource);\n  return (oDateSource.getTime() - oDateTarget.getTime()) / 1000;\n};\nTimezoneUtil.getLocalTimezone = function () {\n  if (sLocalTimezone) {\n    return sLocalTimezone;\n  }\n  sLocalTimezone = new Intl.DateTimeFormat().resolvedOptions().timeZone;\n  return sLocalTimezone;\n};\nexport default TimezoneUtil;","map":{"version":3,"names":["TimezoneUtil","sLocalTimezone","oIntlDateTimeFormatCache","_oCache","Map","_iCacheLimit","get","sTimezone","cacheEntry","oOptions","hourCycle","hour","minute","second","fractionalSecondDigits","day","month","year","timeZone","timeZoneName","era","oInstance","Intl","DateTimeFormat","size","set","isValidTimezone","oError","convertToTimezone","oDate","sTargetTimezone","oFormatParts","_getParts","_getDateFromParts","oIntlDate","oParts","formatToParts","Date","getTime","oDateParts","Object","create","sKey","oPart","type","value","iUTCYear","parseInt","setUTCFullYear","setUTCHours","fractionalSecond","calculateOffset","sTimezoneSource","oFirstGuess","iInitialOffset","oDateSource","oDateTarget","getLocalTimezone","resolvedOptions"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/node_modules/@ui5/webcomponents-localization/dist/sap/ui/core/format/TimezoneUtil.js"],"sourcesContent":["var TimezoneUtil = {};\nvar sLocalTimezone = \"\";\nvar oIntlDateTimeFormatCache = {\n  _oCache: new Map(),\n  _iCacheLimit: 10,\n  get: function (sTimezone) {\n    var cacheEntry = this._oCache.get(sTimezone);\n    if (cacheEntry) {\n      return cacheEntry;\n    }\n    var oOptions = {\n      hourCycle: \"h23\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\",\n      fractionalSecondDigits: 3,\n      day: \"2-digit\",\n      month: \"2-digit\",\n      year: \"numeric\",\n      timeZone: sTimezone,\n      timeZoneName: \"short\",\n      era: \"narrow\"\n    };\n    var oInstance = new Intl.DateTimeFormat(\"en-US\", oOptions);\n    if (this._oCache.size === this._iCacheLimit) {\n      this._oCache = new Map();\n    }\n    this._oCache.set(sTimezone, oInstance);\n    return oInstance;\n  }\n};\nTimezoneUtil.isValidTimezone = function (sTimezone) {\n  if (!sTimezone) {\n    return false;\n  }\n  try {\n    oIntlDateTimeFormatCache.get(sTimezone);\n    return true;\n  } catch (oError) {\n    return false;\n  }\n};\nTimezoneUtil.convertToTimezone = function (oDate, sTargetTimezone) {\n  var oFormatParts = this._getParts(oDate, sTargetTimezone);\n  return TimezoneUtil._getDateFromParts(oFormatParts);\n};\nTimezoneUtil._getParts = function (oDate, sTargetTimezone) {\n  var oIntlDate = oIntlDateTimeFormatCache.get(sTargetTimezone);\n  var oParts = oIntlDate.formatToParts(new Date(oDate.getTime()));\n  var oDateParts = Object.create(null);\n  for (var sKey in oParts) {\n    var oPart = oParts[sKey];\n    if (oPart.type !== \"literal\") {\n      oDateParts[oPart.type] = oPart.value;\n    }\n  }\n  return oDateParts;\n};\nTimezoneUtil._getDateFromParts = function (oParts) {\n  var oDate = new Date(0);\n  var iUTCYear = parseInt(oParts.year);\n  if (oParts.era === \"B\") {\n    iUTCYear = iUTCYear * -1 + 1;\n  }\n  oDate.setUTCFullYear(iUTCYear, parseInt(oParts.month) - 1, parseInt(oParts.day));\n  oDate.setUTCHours(parseInt(oParts.hour), parseInt(oParts.minute), parseInt(oParts.second), parseInt(oParts.fractionalSecond));\n  return oDate;\n};\nTimezoneUtil.calculateOffset = function (oDate, sTimezoneSource) {\n  var oFirstGuess = this.convertToTimezone(oDate, sTimezoneSource);\n  var iInitialOffset = oDate.getTime() - oFirstGuess.getTime();\n  var oDateSource = new Date(oDate.getTime() + iInitialOffset);\n  var oDateTarget = this.convertToTimezone(oDateSource, sTimezoneSource);\n  return (oDateSource.getTime() - oDateTarget.getTime()) / 1000;\n};\nTimezoneUtil.getLocalTimezone = function () {\n  if (sLocalTimezone) {\n    return sLocalTimezone;\n  }\n  sLocalTimezone = new Intl.DateTimeFormat().resolvedOptions().timeZone;\n  return sLocalTimezone;\n};\nexport default TimezoneUtil;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}