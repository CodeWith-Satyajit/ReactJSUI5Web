{"ast":null,"code":"import { CssSizeVariables } from '@ui5/webcomponents-react-base';\nimport React from 'react';\nimport { Icon } from '../../../../webComponents/Icon';\nconst tableGroupExpandCollapseIcon = {\n  color: 'var(--sapContent_IconColor)',\n  height: '0.75rem',\n  width: '0.75rem',\n  padding: '0.625rem',\n  display: 'block'\n};\nconst getPadding = level => {\n  switch (level) {\n    case 0:\n      return '0px';\n    case 1:\n      return CssSizeVariables.sapWcrAnalyticalTableTreePaddingLevel1;\n    case 2:\n      return CssSizeVariables.sapWcrAnalyticalTableTreePaddingLevel2;\n    case 3:\n      return CssSizeVariables.sapWcrAnalyticalTableTreePaddingLevel3;\n    default:\n      return `calc(${CssSizeVariables.sapWcrAnalyticalTableTreePaddingLevel3} + ${level - 3}rem * 0.5)`;\n  }\n};\nexport const Expandable = props => {\n  const {\n    cell,\n    row,\n    column,\n    visibleColumns: columns,\n    webComponentsReactProperties,\n    state: {\n      isRtl\n    }\n  } = props;\n  const {\n    renderRowSubComponent,\n    alwaysShowSubComponent,\n    translatableTexts\n  } = webComponentsReactProperties;\n  const tableColumns = columns.filter(_ref => {\n    let {\n      id\n    } = _ref;\n    return id !== '__ui5wcr__internal_selection_column' && id !== '__ui5wcr__internal_highlight_column' && id !== '__ui5wcr__internal_navigation_column';\n  });\n  const columnIndex = tableColumns.findIndex(col => col.id === column.id);\n  const paddingRtl = isRtl ? 'paddingRight' : 'paddingLeft';\n  let paddingLeft;\n  if (row.canExpand) {\n    paddingLeft = columnIndex === 0 ? getPadding(row.depth) : 0;\n  } else {\n    paddingLeft = columnIndex === 0 ? `calc(${getPadding(row.depth)} + 2rem)` : 0;\n  }\n  const style = {\n    [paddingRtl]: paddingLeft\n  };\n  const rowProps = row.getToggleRowExpandedProps();\n  const subComponentExpandable = typeof renderRowSubComponent === 'function' && !!renderRowSubComponent(row) && !alwaysShowSubComponent;\n  return React.createElement(React.Fragment, null, columnIndex === 0 && (row.canExpand || subComponentExpandable) ?\n  // todo rowProps should be applied to the whole row, not just the cell. We should consider refactoring this.\n  React.createElement(\"span\", {\n    onClick: rowProps.onClick,\n    title: rowProps.title,\n    style: Object.assign(Object.assign({}, rowProps.style), style),\n    \"aria-expanded\": row.isExpanded,\n    \"aria-label\": row.isExpanded ? translatableTexts.collapseA11yText : translatableTexts.expandA11yText\n  }, React.createElement(Icon, {\n    interactive: true,\n    name: `${row.isExpanded ? 'navigation-down-arrow' : 'navigation-right-arrow'}`,\n    style: tableGroupExpandCollapseIcon,\n    accessibleName: row.isExpanded ? translatableTexts.collapseNodeA11yText : translatableTexts.expandNodeA11yText\n  })) : React.createElement(\"span\", {\n    style: style\n  }), cell.render('Cell'));\n};","map":{"version":3,"names":["CssSizeVariables","React","Icon","tableGroupExpandCollapseIcon","color","height","width","padding","display","getPadding","level","sapWcrAnalyticalTableTreePaddingLevel1","sapWcrAnalyticalTableTreePaddingLevel2","sapWcrAnalyticalTableTreePaddingLevel3","Expandable","props","cell","row","column","visibleColumns","columns","webComponentsReactProperties","state","isRtl","renderRowSubComponent","alwaysShowSubComponent","translatableTexts","tableColumns","filter","id","columnIndex","findIndex","col","paddingRtl","paddingLeft","canExpand","depth","style","rowProps","getToggleRowExpandedProps","subComponentExpandable","createElement","Fragment","onClick","title","Object","assign","isExpanded","collapseA11yText","expandA11yText","interactive","name","accessibleName","collapseNodeA11yText","expandNodeA11yText","render"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/defaults/Column/Expandable.js"],"sourcesContent":["import { CssSizeVariables } from '@ui5/webcomponents-react-base';\nimport React from 'react';\nimport { Icon } from '../../../../webComponents/Icon';\nconst tableGroupExpandCollapseIcon = {\n    color: 'var(--sapContent_IconColor)',\n    height: '0.75rem',\n    width: '0.75rem',\n    padding: '0.625rem',\n    display: 'block'\n};\nconst getPadding = (level) => {\n    switch (level) {\n        case 0:\n            return '0px';\n        case 1:\n            return CssSizeVariables.sapWcrAnalyticalTableTreePaddingLevel1;\n        case 2:\n            return CssSizeVariables.sapWcrAnalyticalTableTreePaddingLevel2;\n        case 3:\n            return CssSizeVariables.sapWcrAnalyticalTableTreePaddingLevel3;\n        default:\n            return `calc(${CssSizeVariables.sapWcrAnalyticalTableTreePaddingLevel3} + ${level - 3}rem * 0.5)`;\n    }\n};\nexport const Expandable = (props) => {\n    const { cell, row, column, visibleColumns: columns, webComponentsReactProperties, state: { isRtl } } = props;\n    const { renderRowSubComponent, alwaysShowSubComponent, translatableTexts } = webComponentsReactProperties;\n    const tableColumns = columns.filter(({ id }) => id !== '__ui5wcr__internal_selection_column' &&\n        id !== '__ui5wcr__internal_highlight_column' &&\n        id !== '__ui5wcr__internal_navigation_column');\n    const columnIndex = tableColumns.findIndex((col) => col.id === column.id);\n    const paddingRtl = isRtl ? 'paddingRight' : 'paddingLeft';\n    let paddingLeft;\n    if (row.canExpand) {\n        paddingLeft = columnIndex === 0 ? getPadding(row.depth) : 0;\n    }\n    else {\n        paddingLeft = columnIndex === 0 ? `calc(${getPadding(row.depth)} + 2rem)` : 0;\n    }\n    const style = {\n        [paddingRtl]: paddingLeft\n    };\n    const rowProps = row.getToggleRowExpandedProps();\n    const subComponentExpandable = typeof renderRowSubComponent === 'function' && !!renderRowSubComponent(row) && !alwaysShowSubComponent;\n    return (React.createElement(React.Fragment, null,\n        columnIndex === 0 && (row.canExpand || subComponentExpandable) ? (\n        // todo rowProps should be applied to the whole row, not just the cell. We should consider refactoring this.\n        React.createElement(\"span\", { onClick: rowProps.onClick, title: rowProps.title, style: Object.assign(Object.assign({}, rowProps.style), style), \"aria-expanded\": row.isExpanded, \"aria-label\": row.isExpanded ? translatableTexts.collapseA11yText : translatableTexts.expandA11yText },\n            React.createElement(Icon, { interactive: true, name: `${row.isExpanded ? 'navigation-down-arrow' : 'navigation-right-arrow'}`, style: tableGroupExpandCollapseIcon, accessibleName: row.isExpanded ? translatableTexts.collapseNodeA11yText : translatableTexts.expandNodeA11yText }))) : (React.createElement(\"span\", { style: style })),\n        cell.render('Cell')));\n};\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,+BAA+B;AAChE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,gCAAgC;AACrD,MAAMC,4BAA4B,GAAG;EACjCC,KAAK,EAAE,6BAA6B;EACpCC,MAAM,EAAE,SAAS;EACjBC,KAAK,EAAE,SAAS;EAChBC,OAAO,EAAE,UAAU;EACnBC,OAAO,EAAE;AACb,CAAC;AACD,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAC1B,QAAQA,KAAK;IACT,KAAK,CAAC;MACF,OAAO,KAAK;IAChB,KAAK,CAAC;MACF,OAAOV,gBAAgB,CAACW,sCAAsC;IAClE,KAAK,CAAC;MACF,OAAOX,gBAAgB,CAACY,sCAAsC;IAClE,KAAK,CAAC;MACF,OAAOZ,gBAAgB,CAACa,sCAAsC;IAClE;MACI,OAAQ,QAAOb,gBAAgB,CAACa,sCAAuC,MAAKH,KAAK,GAAG,CAAE,YAAW;EAAC;AAE9G,CAAC;AACD,OAAO,MAAMI,UAAU,GAAIC,KAAK,IAAK;EACjC,MAAM;IAAEC,IAAI;IAAEC,GAAG;IAAEC,MAAM;IAAEC,cAAc,EAAEC,OAAO;IAAEC,4BAA4B;IAAEC,KAAK,EAAE;MAAEC;IAAM;EAAE,CAAC,GAAGR,KAAK;EAC5G,MAAM;IAAES,qBAAqB;IAAEC,sBAAsB;IAAEC;EAAkB,CAAC,GAAGL,4BAA4B;EACzG,MAAMM,YAAY,GAAGP,OAAO,CAACQ,MAAM,CAAC;IAAA,IAAC;MAAEC;IAAG,CAAC;IAAA,OAAKA,EAAE,KAAK,qCAAqC,IACxFA,EAAE,KAAK,qCAAqC,IAC5CA,EAAE,KAAK,sCAAsC;EAAA,EAAC;EAClD,MAAMC,WAAW,GAAGH,YAAY,CAACI,SAAS,CAAEC,GAAG,IAAKA,GAAG,CAACH,EAAE,KAAKX,MAAM,CAACW,EAAE,CAAC;EACzE,MAAMI,UAAU,GAAGV,KAAK,GAAG,cAAc,GAAG,aAAa;EACzD,IAAIW,WAAW;EACf,IAAIjB,GAAG,CAACkB,SAAS,EAAE;IACfD,WAAW,GAAGJ,WAAW,KAAK,CAAC,GAAGrB,UAAU,CAACQ,GAAG,CAACmB,KAAK,CAAC,GAAG,CAAC;EAC/D,CAAC,MACI;IACDF,WAAW,GAAGJ,WAAW,KAAK,CAAC,GAAI,QAAOrB,UAAU,CAACQ,GAAG,CAACmB,KAAK,CAAE,UAAS,GAAG,CAAC;EACjF;EACA,MAAMC,KAAK,GAAG;IACV,CAACJ,UAAU,GAAGC;EAClB,CAAC;EACD,MAAMI,QAAQ,GAAGrB,GAAG,CAACsB,yBAAyB,EAAE;EAChD,MAAMC,sBAAsB,GAAG,OAAOhB,qBAAqB,KAAK,UAAU,IAAI,CAAC,CAACA,qBAAqB,CAACP,GAAG,CAAC,IAAI,CAACQ,sBAAsB;EACrI,OAAQxB,KAAK,CAACwC,aAAa,CAACxC,KAAK,CAACyC,QAAQ,EAAE,IAAI,EAC5CZ,WAAW,KAAK,CAAC,KAAKb,GAAG,CAACkB,SAAS,IAAIK,sBAAsB,CAAC;EAC9D;EACAvC,KAAK,CAACwC,aAAa,CAAC,MAAM,EAAE;IAAEE,OAAO,EAAEL,QAAQ,CAACK,OAAO;IAAEC,KAAK,EAAEN,QAAQ,CAACM,KAAK;IAAEP,KAAK,EAAEQ,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAER,QAAQ,CAACD,KAAK,CAAC,EAAEA,KAAK,CAAC;IAAE,eAAe,EAAEpB,GAAG,CAAC8B,UAAU;IAAE,YAAY,EAAE9B,GAAG,CAAC8B,UAAU,GAAGrB,iBAAiB,CAACsB,gBAAgB,GAAGtB,iBAAiB,CAACuB;EAAe,CAAC,EACnRhD,KAAK,CAACwC,aAAa,CAACvC,IAAI,EAAE;IAAEgD,WAAW,EAAE,IAAI;IAAEC,IAAI,EAAG,GAAElC,GAAG,CAAC8B,UAAU,GAAG,uBAAuB,GAAG,wBAAyB,EAAC;IAAEV,KAAK,EAAElC,4BAA4B;IAAEiD,cAAc,EAAEnC,GAAG,CAAC8B,UAAU,GAAGrB,iBAAiB,CAAC2B,oBAAoB,GAAG3B,iBAAiB,CAAC4B;EAAmB,CAAC,CAAC,CAAC,GAAKrD,KAAK,CAACwC,aAAa,CAAC,MAAM,EAAE;IAAEJ,KAAK,EAAEA;EAAM,CAAC,CAAE,EAC7UrB,IAAI,CAACuC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC5B,CAAC"},"metadata":{},"sourceType":"module"}