{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * This is the original style-map.js directive from lit-html 2 with the only difference that \"render\" is not called even for the first rendering (update is used instead)\n */\n\nimport { noChange } from 'lit-html';\nimport { directive, Directive, PartType } from 'lit-html/directive.js';\nclass StyleMapDirective extends Directive {\n  constructor(partInfo) {\n    var _a;\n    super(partInfo);\n    if (partInfo.type !== PartType.ATTRIBUTE || partInfo.name !== 'style' || ((_a = partInfo.strings) === null || _a === void 0 ? void 0 : _a.length) > 2) {\n      throw new Error('The `styleMap` directive must be used in the `style` attribute ' + 'and must be the only part in the attribute.');\n    }\n  }\n  render(styleInfo) {\n    return \"\";\n  }\n  update(part, _ref) {\n    let [styleInfo] = _ref;\n    const {\n      style\n    } = part.element;\n    if (this._previousStyleProperties === undefined) {\n      this._previousStyleProperties = new Set();\n      for (const name in styleInfo) {\n        this._previousStyleProperties.add(name);\n      }\n      // return this.render(styleInfo);\n    }\n    // Remove old properties that no longer exist in styleInfo\n    // We use forEach() instead of for-of so that re don't require down-level\n    // iteration.\n    this._previousStyleProperties.forEach(name => {\n      // If the name isn't in styleInfo or it's null/undefined\n      if (styleInfo[name] == null) {\n        this._previousStyleProperties.delete(name);\n        if (name.includes('-')) {\n          style.removeProperty(name);\n        } else {\n          // Note reset using empty string (vs null) as IE11 does not always\n          // reset via null (https://developer.mozilla.org/en-US/docs/Web/API/ElementCSSInlineStyle/style#setting_styles)\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          style[name] = '';\n        }\n      }\n    });\n    // Add or update properties\n    for (const name in styleInfo) {\n      const value = styleInfo[name];\n      if (value != null) {\n        this._previousStyleProperties.add(name);\n        if (name.includes('-')) {\n          style.setProperty(name, value);\n        } else {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          style[name] = value;\n        }\n      }\n    }\n    return noChange;\n  }\n}\nexport const styleMap = directive(StyleMapDirective);","map":{"version":3,"names":["noChange","directive","Directive","PartType","StyleMapDirective","constructor","partInfo","_a","type","ATTRIBUTE","name","strings","length","Error","render","styleInfo","update","part","style","element","_previousStyleProperties","undefined","Set","add","forEach","delete","includes","removeProperty","value","setProperty","styleMap"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/node_modules/@ui5/webcomponents-base/dist/renderer/directives/style-map.js"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * This is the original style-map.js directive from lit-html 2 with the only difference that \"render\" is not called even for the first rendering (update is used instead)\n */\n\nimport { noChange } from 'lit-html';\nimport { directive, Directive, PartType, } from 'lit-html/directive.js';\nclass StyleMapDirective extends Directive {\n\tconstructor(partInfo) {\n\t\tvar _a;\n\t\tsuper(partInfo);\n\t\tif (partInfo.type !== PartType.ATTRIBUTE ||\n\t\t\tpartInfo.name !== 'style' ||\n\t\t\t((_a = partInfo.strings) === null || _a === void 0 ? void 0 : _a.length) > 2) {\n\t\t\tthrow new Error('The `styleMap` directive must be used in the `style` attribute ' +\n\t\t\t\t'and must be the only part in the attribute.');\n\t\t}\n\t}\n\trender(styleInfo) {\n\t\treturn \"\";\n\t}\n\tupdate(part, [styleInfo]) {\n\t\tconst { style } = part.element;\n\t\tif (this._previousStyleProperties === undefined) {\n\t\t\tthis._previousStyleProperties = new Set();\n\t\t\tfor (const name in styleInfo) {\n\t\t\t\tthis._previousStyleProperties.add(name);\n\t\t\t}\n\t\t\t// return this.render(styleInfo);\n\t\t}\n\t\t// Remove old properties that no longer exist in styleInfo\n\t\t// We use forEach() instead of for-of so that re don't require down-level\n\t\t// iteration.\n\t\tthis._previousStyleProperties.forEach((name) => {\n\t\t\t// If the name isn't in styleInfo or it's null/undefined\n\t\t\tif (styleInfo[name] == null) {\n\t\t\t\tthis._previousStyleProperties.delete(name);\n\t\t\t\tif (name.includes('-')) {\n\t\t\t\t\tstyle.removeProperty(name);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Note reset using empty string (vs null) as IE11 does not always\n\t\t\t\t\t// reset via null (https://developer.mozilla.org/en-US/docs/Web/API/ElementCSSInlineStyle/style#setting_styles)\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\t\t\tstyle[name] = '';\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t// Add or update properties\n\t\tfor (const name in styleInfo) {\n\t\t\tconst value = styleInfo[name];\n\t\t\tif (value != null) {\n\t\t\t\tthis._previousStyleProperties.add(name);\n\t\t\t\tif (name.includes('-')) {\n\t\t\t\t\tstyle.setProperty(name, value);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\t\t\tstyle[name] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn noChange;\n\t}\n}\n\nexport const styleMap = directive(StyleMapDirective);\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAASA,QAAQ,QAAQ,UAAU;AACnC,SAASC,SAAS,EAAEC,SAAS,EAAEC,QAAQ,QAAS,uBAAuB;AACvE,MAAMC,iBAAiB,SAASF,SAAS,CAAC;EACzCG,WAAW,CAACC,QAAQ,EAAE;IACrB,IAAIC,EAAE;IACN,KAAK,CAACD,QAAQ,CAAC;IACf,IAAIA,QAAQ,CAACE,IAAI,KAAKL,QAAQ,CAACM,SAAS,IACvCH,QAAQ,CAACI,IAAI,KAAK,OAAO,IACzB,CAAC,CAACH,EAAE,GAAGD,QAAQ,CAACK,OAAO,MAAM,IAAI,IAAIJ,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACK,MAAM,IAAI,CAAC,EAAE;MAC9E,MAAM,IAAIC,KAAK,CAAC,iEAAiE,GAChF,6CAA6C,CAAC;IAChD;EACD;EACAC,MAAM,CAACC,SAAS,EAAE;IACjB,OAAO,EAAE;EACV;EACAC,MAAM,CAACC,IAAI,QAAe;IAAA,IAAb,CAACF,SAAS,CAAC;IACvB,MAAM;MAAEG;IAAM,CAAC,GAAGD,IAAI,CAACE,OAAO;IAC9B,IAAI,IAAI,CAACC,wBAAwB,KAAKC,SAAS,EAAE;MAChD,IAAI,CAACD,wBAAwB,GAAG,IAAIE,GAAG,EAAE;MACzC,KAAK,MAAMZ,IAAI,IAAIK,SAAS,EAAE;QAC7B,IAAI,CAACK,wBAAwB,CAACG,GAAG,CAACb,IAAI,CAAC;MACxC;MACA;IACD;IACA;IACA;IACA;IACA,IAAI,CAACU,wBAAwB,CAACI,OAAO,CAAEd,IAAI,IAAK;MAC/C;MACA,IAAIK,SAAS,CAACL,IAAI,CAAC,IAAI,IAAI,EAAE;QAC5B,IAAI,CAACU,wBAAwB,CAACK,MAAM,CAACf,IAAI,CAAC;QAC1C,IAAIA,IAAI,CAACgB,QAAQ,CAAC,GAAG,CAAC,EAAE;UACvBR,KAAK,CAACS,cAAc,CAACjB,IAAI,CAAC;QAC3B,CAAC,MACI;UACJ;UACA;UACA;UACAQ,KAAK,CAACR,IAAI,CAAC,GAAG,EAAE;QACjB;MACD;IACD,CAAC,CAAC;IACF;IACA,KAAK,MAAMA,IAAI,IAAIK,SAAS,EAAE;MAC7B,MAAMa,KAAK,GAAGb,SAAS,CAACL,IAAI,CAAC;MAC7B,IAAIkB,KAAK,IAAI,IAAI,EAAE;QAClB,IAAI,CAACR,wBAAwB,CAACG,GAAG,CAACb,IAAI,CAAC;QACvC,IAAIA,IAAI,CAACgB,QAAQ,CAAC,GAAG,CAAC,EAAE;UACvBR,KAAK,CAACW,WAAW,CAACnB,IAAI,EAAEkB,KAAK,CAAC;QAC/B,CAAC,MACI;UACJ;UACAV,KAAK,CAACR,IAAI,CAAC,GAAGkB,KAAK;QACpB;MACD;IACD;IACA,OAAO5B,QAAQ;EAChB;AACD;AAEA,OAAO,MAAM8B,QAAQ,GAAG7B,SAAS,CAACG,iBAAiB,CAAC"},"metadata":{},"sourceType":"module"}