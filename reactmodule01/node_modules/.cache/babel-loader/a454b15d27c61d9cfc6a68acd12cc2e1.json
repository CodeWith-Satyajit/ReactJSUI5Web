{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport alertIcon from '@ui5/webcomponents-icons/dist/alert.js';\nimport errorIcon from '@ui5/webcomponents-icons/dist/error.js';\nimport informationIcon from '@ui5/webcomponents-icons/dist/information.js';\nimport sysEnter2Icon from '@ui5/webcomponents-icons/dist/sys-enter-2.js';\nimport { ThemingParameters } from '@ui5/webcomponents-react-base';\nimport clsx from 'clsx';\nimport React, { forwardRef } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { Button } from '../..';\nimport { ValueState } from '../../enums';\nconst buttonStyles = Object.values(ValueState).reduce((acc, cur) => {\n  let cssType;\n  switch (cur) {\n    case ValueState.Error:\n      cssType = 'Negative';\n      break;\n    case ValueState.Success:\n      cssType = 'Success';\n      break;\n    case ValueState.Warning:\n      cssType = 'Critical';\n      break;\n    default:\n      cssType = 'Neutral';\n  }\n  const standard = `&[data-type=\"${cur}\"]`;\n  const hover = `&[data-type=\"${cur}\"]:hover`;\n  const active = `&[data-type=\"${cur}\"]:active`;\n  return Object.assign(Object.assign({}, acc), {\n    [standard]: {\n      color: ThemingParameters[`sapButton_${cssType}_TextColor`],\n      background: ThemingParameters[`sapButton_${cssType}_Background`],\n      borderColor: ThemingParameters[`sapButton_${cssType}_BorderColor`]\n    },\n    [hover]: {\n      color: ThemingParameters[`sapButton_${cssType}_Hover_TextColor`],\n      background: ThemingParameters[`sapButton_${cssType}_Hover_Background`],\n      borderColor: ThemingParameters[`sapButton_${cssType}_Hover_BorderColor`]\n    },\n    [active]: {\n      color: ThemingParameters[`sapButton_${cssType}_Active_TextColor`],\n      background: ThemingParameters[`sapButton_${cssType}_Active_Background`],\n      borderColor: ThemingParameters[`sapButton_${cssType}_Active_BorderColor`]\n    }\n  });\n}, {});\nconst useStyles = createUseStyles({\n  btn: Object.assign({}, buttonStyles)\n}, {\n  name: 'MessageViewButtonStyles'\n});\nconst getIcon = type => {\n  switch (type) {\n    case ValueState.Error:\n      return errorIcon;\n    case ValueState.Success:\n      return sysEnter2Icon;\n    case ValueState.Warning:\n      return alertIcon;\n    default:\n      return informationIcon;\n  }\n};\n/**\n * The `MessageViewButton` can be used for opening a `Popover` containing the `MessageView` component. It should always reflect the message `type` with the highest severity.\n */\nconst MessageViewButton = forwardRef((props, ref) => {\n  const {\n      type,\n      counter,\n      className\n    } = props,\n    rest = __rest(props, [\"type\", \"counter\", \"className\"]);\n  const classes = useStyles();\n  const classNames = clsx(classes.btn, className);\n  const icon = getIcon(type);\n  return React.createElement(Button, Object.assign({\n    ref: ref,\n    className: classNames,\n    icon: icon\n  }, rest, {\n    \"data-type\": type\n  }), counter > 1 && counter);\n});\nMessageViewButton.defaultProps = {\n  type: ValueState.Error\n};\nMessageViewButton.displayName = 'MessageViewButton';\nexport { MessageViewButton };","map":{"version":3,"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","alertIcon","errorIcon","informationIcon","sysEnter2Icon","ThemingParameters","clsx","React","forwardRef","createUseStyles","Button","ValueState","buttonStyles","values","reduce","acc","cur","cssType","Error","Success","Warning","standard","hover","active","assign","color","background","borderColor","useStyles","btn","name","getIcon","type","MessageViewButton","props","ref","counter","className","rest","classes","classNames","icon","createElement","defaultProps","displayName"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/node_modules/@ui5/webcomponents-react/dist/components/MessageViewButton/index.js"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport alertIcon from '@ui5/webcomponents-icons/dist/alert.js';\nimport errorIcon from '@ui5/webcomponents-icons/dist/error.js';\nimport informationIcon from '@ui5/webcomponents-icons/dist/information.js';\nimport sysEnter2Icon from '@ui5/webcomponents-icons/dist/sys-enter-2.js';\nimport { ThemingParameters } from '@ui5/webcomponents-react-base';\nimport clsx from 'clsx';\nimport React, { forwardRef } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { Button } from '../..';\nimport { ValueState } from '../../enums';\nconst buttonStyles = Object.values(ValueState).reduce((acc, cur) => {\n    let cssType;\n    switch (cur) {\n        case ValueState.Error:\n            cssType = 'Negative';\n            break;\n        case ValueState.Success:\n            cssType = 'Success';\n            break;\n        case ValueState.Warning:\n            cssType = 'Critical';\n            break;\n        default:\n            cssType = 'Neutral';\n    }\n    const standard = `&[data-type=\"${cur}\"]`;\n    const hover = `&[data-type=\"${cur}\"]:hover`;\n    const active = `&[data-type=\"${cur}\"]:active`;\n    return Object.assign(Object.assign({}, acc), { [standard]: {\n            color: ThemingParameters[`sapButton_${cssType}_TextColor`],\n            background: ThemingParameters[`sapButton_${cssType}_Background`],\n            borderColor: ThemingParameters[`sapButton_${cssType}_BorderColor`]\n        }, [hover]: {\n            color: ThemingParameters[`sapButton_${cssType}_Hover_TextColor`],\n            background: ThemingParameters[`sapButton_${cssType}_Hover_Background`],\n            borderColor: ThemingParameters[`sapButton_${cssType}_Hover_BorderColor`]\n        }, [active]: {\n            color: ThemingParameters[`sapButton_${cssType}_Active_TextColor`],\n            background: ThemingParameters[`sapButton_${cssType}_Active_Background`],\n            borderColor: ThemingParameters[`sapButton_${cssType}_Active_BorderColor`]\n        } });\n}, {});\nconst useStyles = createUseStyles({\n    btn: Object.assign({}, buttonStyles)\n}, { name: 'MessageViewButtonStyles' });\nconst getIcon = (type) => {\n    switch (type) {\n        case ValueState.Error:\n            return errorIcon;\n        case ValueState.Success:\n            return sysEnter2Icon;\n        case ValueState.Warning:\n            return alertIcon;\n        default:\n            return informationIcon;\n    }\n};\n/**\n * The `MessageViewButton` can be used for opening a `Popover` containing the `MessageView` component. It should always reflect the message `type` with the highest severity.\n */\nconst MessageViewButton = forwardRef((props, ref) => {\n    const { type, counter, className } = props, rest = __rest(props, [\"type\", \"counter\", \"className\"]);\n    const classes = useStyles();\n    const classNames = clsx(classes.btn, className);\n    const icon = getIcon(type);\n    return (React.createElement(Button, Object.assign({ ref: ref, className: classNames, icon: icon }, rest, { \"data-type\": type }), counter > 1 && counter));\n});\nMessageViewButton.defaultProps = {\n    type: ValueState.Error\n};\nMessageViewButton.displayName = 'MessageViewButton';\nexport { MessageViewButton };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}