{"ast":null,"code":"import { getLanguage as getConfiguredLanguage, getFetchDefaultLanguage as getConfiguredFetchDefaultLanguage } from \"../InitialConfiguration.js\";\nimport { fireLanguageChange } from \"../locale/languageChange.js\";\nimport { reRenderAllUI5Elements } from \"../Render.js\";\nlet language;\nlet fetchDefaultLanguage;\n\n/**\n * Returns the currently configured language, or the browser language as a fallback\n * @returns {String}\n */\nconst getLanguage = () => {\n  if (language === undefined) {\n    language = getConfiguredLanguage();\n  }\n  return language;\n};\n\n/**\n * Changes the current language, re-fetches all message bundles, updates all language-aware components\n * and returns a promise that resolves when all rendering is done\n *\n * @param newLanguage\n * @returns {Promise<void>}\n */\nconst setLanguage = async newLanguage => {\n  if (language === newLanguage) {\n    return;\n  }\n  language = newLanguage;\n  await fireLanguageChange(newLanguage);\n  await reRenderAllUI5Elements({\n    languageAware: true\n  });\n};\n\n/**\n * Defines if the default language, that is inlined, should be\n * fetched over the network instead of using the inlined one.\n * <b>Note:</b> By default the language will not be fetched.\n *\n * @param {Boolean} fetchDefaultLanguage\n */\nconst setFetchDefaultLanguage = fetchDefaultLang => {\n  fetchDefaultLanguage = fetchDefaultLang;\n};\n\n/**\n * Returns if the default language, that is inlined, should be fetched over the network.\n * @returns {Boolean}\n */\nconst getFetchDefaultLanguage = () => {\n  if (fetchDefaultLanguage === undefined) {\n    setFetchDefaultLanguage(getConfiguredFetchDefaultLanguage());\n  }\n  return fetchDefaultLanguage;\n};\nexport { getLanguage, setLanguage, setFetchDefaultLanguage, getFetchDefaultLanguage };","map":{"version":3,"names":["getLanguage","getConfiguredLanguage","getFetchDefaultLanguage","getConfiguredFetchDefaultLanguage","fireLanguageChange","reRenderAllUI5Elements","language","fetchDefaultLanguage","undefined","setLanguage","newLanguage","languageAware","setFetchDefaultLanguage","fetchDefaultLang"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/node_modules/@ui5/webcomponents-base/dist/config/Language.js"],"sourcesContent":["import {\n\tgetLanguage as getConfiguredLanguage,\n\tgetFetchDefaultLanguage as getConfiguredFetchDefaultLanguage,\n} from \"../InitialConfiguration.js\";\nimport { fireLanguageChange } from \"../locale/languageChange.js\";\nimport { reRenderAllUI5Elements } from \"../Render.js\";\n\nlet language;\nlet fetchDefaultLanguage;\n\n/**\n * Returns the currently configured language, or the browser language as a fallback\n * @returns {String}\n */\nconst getLanguage = () => {\n\tif (language === undefined) {\n\t\tlanguage = getConfiguredLanguage();\n\t}\n\treturn language;\n};\n\n/**\n * Changes the current language, re-fetches all message bundles, updates all language-aware components\n * and returns a promise that resolves when all rendering is done\n *\n * @param newLanguage\n * @returns {Promise<void>}\n */\nconst setLanguage = async newLanguage => {\n\tif (language === newLanguage) {\n\t\treturn;\n\t}\n\n\tlanguage = newLanguage;\n\n\tawait fireLanguageChange(newLanguage);\n\tawait reRenderAllUI5Elements({ languageAware: true });\n};\n\n/**\n * Defines if the default language, that is inlined, should be\n * fetched over the network instead of using the inlined one.\n * <b>Note:</b> By default the language will not be fetched.\n *\n * @param {Boolean} fetchDefaultLanguage\n */\nconst setFetchDefaultLanguage = fetchDefaultLang => {\n\tfetchDefaultLanguage = fetchDefaultLang;\n};\n\n/**\n * Returns if the default language, that is inlined, should be fetched over the network.\n * @returns {Boolean}\n */\nconst getFetchDefaultLanguage = () => {\n\tif (fetchDefaultLanguage === undefined) {\n\t\tsetFetchDefaultLanguage(getConfiguredFetchDefaultLanguage());\n\t}\n\n\treturn fetchDefaultLanguage;\n};\n\nexport {\n\tgetLanguage,\n\tsetLanguage,\n\tsetFetchDefaultLanguage,\n\tgetFetchDefaultLanguage,\n};\n"],"mappings":"AAAA,SACCA,WAAW,IAAIC,qBAAqB,EACpCC,uBAAuB,IAAIC,iCAAiC,QACtD,4BAA4B;AACnC,SAASC,kBAAkB,QAAQ,6BAA6B;AAChE,SAASC,sBAAsB,QAAQ,cAAc;AAErD,IAAIC,QAAQ;AACZ,IAAIC,oBAAoB;;AAExB;AACA;AACA;AACA;AACA,MAAMP,WAAW,GAAG,MAAM;EACzB,IAAIM,QAAQ,KAAKE,SAAS,EAAE;IAC3BF,QAAQ,GAAGL,qBAAqB,EAAE;EACnC;EACA,OAAOK,QAAQ;AAChB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMG,WAAW,GAAG,MAAMC,WAAW,IAAI;EACxC,IAAIJ,QAAQ,KAAKI,WAAW,EAAE;IAC7B;EACD;EAEAJ,QAAQ,GAAGI,WAAW;EAEtB,MAAMN,kBAAkB,CAACM,WAAW,CAAC;EACrC,MAAML,sBAAsB,CAAC;IAAEM,aAAa,EAAE;EAAK,CAAC,CAAC;AACtD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,uBAAuB,GAAGC,gBAAgB,IAAI;EACnDN,oBAAoB,GAAGM,gBAAgB;AACxC,CAAC;;AAED;AACA;AACA;AACA;AACA,MAAMX,uBAAuB,GAAG,MAAM;EACrC,IAAIK,oBAAoB,KAAKC,SAAS,EAAE;IACvCI,uBAAuB,CAACT,iCAAiC,EAAE,CAAC;EAC7D;EAEA,OAAOI,oBAAoB;AAC5B,CAAC;AAED,SACCP,WAAW,EACXS,WAAW,EACXG,uBAAuB,EACvBV,uBAAuB"},"metadata":{},"sourceType":"module"}