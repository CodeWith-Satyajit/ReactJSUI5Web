{"ast":null,"code":"import getLocale from \"../locale/getLocale.js\";\nimport { attachLanguageChange } from \"../locale/languageChange.js\";\nimport normalizeLocale from \"../locale/normalizeLocale.js\";\nimport nextFallbackLocale from \"../locale/nextFallbackLocale.js\";\nimport { DEFAULT_LANGUAGE } from \"../generated/AssetParameters.js\";\nimport { getFetchDefaultLanguage } from \"../config/Language.js\";\n\n// contains package names for which the warning has been shown\nconst warningShown = new Set();\nconst reportedErrors = new Set();\nconst bundleData = new Map();\nconst bundlePromises = new Map();\nconst loaders = new Map();\n\n/**\n * Registers i18n loader function for given package and locale.\n *\n * @public\n * @param {string} packageName for which package this loader can fetch data\n * @param {string} localeId locale that this loader can handle\n * @param {function} loader async function that will be passed a localeId and should return a JSON object\n */\nconst registerI18nLoader = (packageName, localeId, loader) => {\n  // register loader by key\n  const bundleKey = `${packageName}/${localeId}`;\n  loaders.set(bundleKey, loader);\n};\nconst _setI18nBundleData = (packageName, data) => {\n  bundleData.set(packageName, data);\n};\nconst getI18nBundleData = packageName => {\n  return bundleData.get(packageName);\n};\n\n/**\n * @public\n * @deprecated\n */\nconst registerI18nBundle = (_packageName, _bundle) => {\n  throw new Error(\"This method has been removed. Use `registerI18nLoader` instead.\");\n};\nconst _hasLoader = (packageName, localeId) => {\n  const bundleKey = `${packageName}/${localeId}`;\n  return loaders.has(bundleKey);\n};\n\n// load bundle over the network once\nconst _loadMessageBundleOnce = (packageName, localeId) => {\n  const bundleKey = `${packageName}/${localeId}`;\n  const loadMessageBundle = loaders.get(bundleKey);\n  if (!bundlePromises.get(bundleKey)) {\n    bundlePromises.set(bundleKey, loadMessageBundle(localeId));\n  }\n  return bundlePromises.get(bundleKey);\n};\nconst _showAssetsWarningOnce = packageName => {\n  if (!warningShown.has(packageName)) {\n    console.warn(`[${packageName}]: Message bundle assets are not configured. Falling back to English texts.`, /* eslint-disable-line */\n    ` Add \\`import \"${packageName}/dist/Assets.js\"\\` in your bundle and make sure your build tool supports dynamic imports and JSON imports. See section \"Assets\" in the documentation for more information.`); /* eslint-disable-line */\n    warningShown.add(packageName);\n  }\n};\n\n/**\n * This method preforms the asynchronous task of fetching the actual text resources. It will fetch\n * each text resource over the network once (even for multiple calls to the same method).\n * It should be fully finished before the i18nBundle class is created in the webcomponents.\n * This method uses the bundle URLs that are populated by the <code>registerI18nBundle</code> method.\n * To simplify the usage, the synchronization of both methods happens internally for the same <code>bundleId</code>\n * @param {packageName} packageName the NPM package name\n * @public\n */\nconst fetchI18nBundle = async packageName => {\n  const language = getLocale().getLanguage();\n  const region = getLocale().getRegion();\n  let localeId = normalizeLocale(language + (region ? `-${region}` : ``));\n  while (localeId !== DEFAULT_LANGUAGE && !_hasLoader(packageName, localeId)) {\n    localeId = nextFallbackLocale(localeId);\n  }\n\n  // use default language unless configured to always fetch it from the network\n  const fetchDefaultLanguage = getFetchDefaultLanguage();\n  if (localeId === DEFAULT_LANGUAGE && !fetchDefaultLanguage) {\n    _setI18nBundleData(packageName, null); // reset for the default language (if data was set for a previous language)\n    return;\n  }\n  if (!_hasLoader(packageName, localeId)) {\n    _showAssetsWarningOnce(packageName);\n    return;\n  }\n  try {\n    const data = await _loadMessageBundleOnce(packageName, localeId);\n    _setI18nBundleData(packageName, data);\n  } catch (e) {\n    if (!reportedErrors.has(e.message)) {\n      reportedErrors.add(e.message);\n      console.error(e.message); /* eslint-disable-line */\n    }\n  }\n};\n\n// When the language changes dynamically (the user calls setLanguage), re-fetch all previously fetched bundles\nattachLanguageChange(() => {\n  const allPackages = [...bundleData.keys()];\n  return Promise.all(allPackages.map(fetchI18nBundle));\n});\nexport { registerI18nLoader, fetchI18nBundle, registerI18nBundle, getI18nBundleData };","map":{"version":3,"names":["getLocale","attachLanguageChange","normalizeLocale","nextFallbackLocale","DEFAULT_LANGUAGE","getFetchDefaultLanguage","warningShown","Set","reportedErrors","bundleData","Map","bundlePromises","loaders","registerI18nLoader","packageName","localeId","loader","bundleKey","set","_setI18nBundleData","data","getI18nBundleData","get","registerI18nBundle","_packageName","_bundle","Error","_hasLoader","has","_loadMessageBundleOnce","loadMessageBundle","_showAssetsWarningOnce","console","warn","add","fetchI18nBundle","language","getLanguage","region","getRegion","fetchDefaultLanguage","e","message","error","allPackages","keys","Promise","all","map"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/node_modules/@ui5/webcomponents-base/dist/asset-registries/i18n.js"],"sourcesContent":["import getLocale from \"../locale/getLocale.js\";\nimport { attachLanguageChange } from \"../locale/languageChange.js\";\nimport normalizeLocale from \"../locale/normalizeLocale.js\";\nimport nextFallbackLocale from \"../locale/nextFallbackLocale.js\";\nimport { DEFAULT_LANGUAGE } from \"../generated/AssetParameters.js\";\nimport { getFetchDefaultLanguage } from \"../config/Language.js\";\n\n// contains package names for which the warning has been shown\nconst warningShown = new Set();\nconst reportedErrors = new Set();\n\nconst bundleData = new Map();\nconst bundlePromises = new Map();\nconst loaders = new Map();\n\n/**\n * Registers i18n loader function for given package and locale.\n *\n * @public\n * @param {string} packageName for which package this loader can fetch data\n * @param {string} localeId locale that this loader can handle\n * @param {function} loader async function that will be passed a localeId and should return a JSON object\n */\nconst registerI18nLoader = (packageName, localeId, loader) => {\n\t// register loader by key\n\tconst bundleKey = `${packageName}/${localeId}`;\n\tloaders.set(bundleKey, loader);\n};\n\nconst _setI18nBundleData = (packageName, data) => {\n\tbundleData.set(packageName, data);\n};\n\nconst getI18nBundleData = packageName => {\n\treturn bundleData.get(packageName);\n};\n\n/**\n * @public\n * @deprecated\n */\nconst registerI18nBundle = (_packageName, _bundle) => {\n\tthrow new Error(\"This method has been removed. Use `registerI18nLoader` instead.\");\n};\n\nconst _hasLoader = (packageName, localeId) => {\n\tconst bundleKey = `${packageName}/${localeId}`;\n\treturn loaders.has(bundleKey);\n};\n\n// load bundle over the network once\nconst _loadMessageBundleOnce = (packageName, localeId) => {\n\tconst bundleKey = `${packageName}/${localeId}`;\n\tconst loadMessageBundle = loaders.get(bundleKey);\n\n\tif (!bundlePromises.get(bundleKey)) {\n\t\tbundlePromises.set(bundleKey, loadMessageBundle(localeId));\n\t}\n\n\treturn bundlePromises.get(bundleKey);\n};\n\nconst _showAssetsWarningOnce = packageName => {\n\tif (!warningShown.has(packageName)) {\n\t\tconsole.warn(`[${packageName}]: Message bundle assets are not configured. Falling back to English texts.`, /* eslint-disable-line */\n\t\t` Add \\`import \"${packageName}/dist/Assets.js\"\\` in your bundle and make sure your build tool supports dynamic imports and JSON imports. See section \"Assets\" in the documentation for more information.`); /* eslint-disable-line */\n\t\twarningShown.add(packageName);\n\t}\n};\n\n/**\n * This method preforms the asynchronous task of fetching the actual text resources. It will fetch\n * each text resource over the network once (even for multiple calls to the same method).\n * It should be fully finished before the i18nBundle class is created in the webcomponents.\n * This method uses the bundle URLs that are populated by the <code>registerI18nBundle</code> method.\n * To simplify the usage, the synchronization of both methods happens internally for the same <code>bundleId</code>\n * @param {packageName} packageName the NPM package name\n * @public\n */\nconst fetchI18nBundle = async packageName => {\n\tconst language = getLocale().getLanguage();\n\tconst region = getLocale().getRegion();\n\tlet localeId = normalizeLocale(language + (region ? `-${region}` : ``));\n\n\twhile (localeId !== DEFAULT_LANGUAGE && !_hasLoader(packageName, localeId)) {\n\t\tlocaleId = nextFallbackLocale(localeId);\n\t}\n\n\t// use default language unless configured to always fetch it from the network\n\tconst fetchDefaultLanguage = getFetchDefaultLanguage();\n\tif (localeId === DEFAULT_LANGUAGE && !fetchDefaultLanguage) {\n\t\t_setI18nBundleData(packageName, null); // reset for the default language (if data was set for a previous language)\n\t\treturn;\n\t}\n\n\tif (!_hasLoader(packageName, localeId)) {\n\t\t_showAssetsWarningOnce(packageName);\n\t\treturn;\n\t}\n\n\ttry {\n\t\tconst data = await _loadMessageBundleOnce(packageName, localeId);\n\t\t_setI18nBundleData(packageName, data);\n\t} catch (e) {\n\t\tif (!reportedErrors.has(e.message)) {\n\t\t\treportedErrors.add(e.message);\n\t\t\tconsole.error(e.message); /* eslint-disable-line */\n\t\t}\n\t}\n};\n\n// When the language changes dynamically (the user calls setLanguage), re-fetch all previously fetched bundles\nattachLanguageChange(() => {\n\tconst allPackages = [...bundleData.keys()];\n\treturn Promise.all(allPackages.map(fetchI18nBundle));\n});\n\nexport {\n\tregisterI18nLoader,\n\tfetchI18nBundle,\n\tregisterI18nBundle,\n\tgetI18nBundleData,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}