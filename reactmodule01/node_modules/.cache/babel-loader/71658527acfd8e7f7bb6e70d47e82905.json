{"ast":null,"code":"import UniversalDate from \"../sap/ui/core/date/UniversalDate.js\";\nconst calculateWeekNumber = (confFirstDayOfWeek, oDate, iYear, oLocale, oLocaleData) => {\n  let iWeekNum = 0;\n  let iWeekDay = 0;\n  const iFirstDayOfWeek = Number.isInteger(confFirstDayOfWeek) ? confFirstDayOfWeek : oLocaleData.getFirstDayOfWeek();\n\n  // search Locale for containing \"en-US\", since sometimes\n  // when any user settings have been defined, subtag \"sapufmt\" is added to the locale name\n  // this is described inside sap.ui.core.Configuration file\n  if (oLocale && oLocale.getLanguage() === \"en\" && oLocale.getRegion() === \"US\") {\n    /*\n    \t* in US the week starts with Sunday\n    \t* The first week of the year starts with January 1st. But Dec. 31 is still in the last year\n    \t* So the week beginning in December and ending in January has 2 week numbers\n    \t*/\n    const oJanFirst = new UniversalDate(oDate.getTime());\n    oJanFirst.setUTCFullYear(iYear, 0, 1);\n    iWeekDay = oJanFirst.getUTCDay();\n\n    // get the date for the same weekday like jan 1.\n    const oCheckDate = new UniversalDate(oDate.getTime());\n    oCheckDate.setUTCDate(oCheckDate.getUTCDate() - oCheckDate.getUTCDay() + iWeekDay);\n    iWeekNum = Math.round((oCheckDate.getTime() - oJanFirst.getTime()) / 86400000 / 7) + 1;\n  } else {\n    // normally the first week of the year is the one where the first Thursday of the year is\n    // find Thursday of this week\n    // if the checked day is before the 1. day of the week use a day of the previous week to check\n    const oThursday = new UniversalDate(oDate.getTime());\n    oThursday.setUTCDate(oThursday.getUTCDate() - iFirstDayOfWeek);\n    iWeekDay = oThursday.getUTCDay();\n    oThursday.setUTCDate(oThursday.getUTCDate() - iWeekDay + 4);\n    const oFirstDayOfYear = new UniversalDate(oThursday.getTime());\n    oFirstDayOfYear.setUTCMonth(0, 1);\n    iWeekDay = oFirstDayOfYear.getUTCDay();\n    let iAddDays = 0;\n    if (iWeekDay > 4) {\n      iAddDays = 7; // first day of year is after Thursday, so first Thursday is in the next week\n    }\n\n    const oFirstThursday = new UniversalDate(oFirstDayOfYear.getTime());\n    oFirstThursday.setUTCDate(1 - iWeekDay + 4 + iAddDays);\n    iWeekNum = Math.round((oThursday.getTime() - oFirstThursday.getTime()) / 86400000 / 7) + 1;\n  }\n  return iWeekNum;\n};\nexport default calculateWeekNumber;","map":{"version":3,"names":["UniversalDate","calculateWeekNumber","confFirstDayOfWeek","oDate","iYear","oLocale","oLocaleData","iWeekNum","iWeekDay","iFirstDayOfWeek","Number","isInteger","getFirstDayOfWeek","getLanguage","getRegion","oJanFirst","getTime","setUTCFullYear","getUTCDay","oCheckDate","setUTCDate","getUTCDate","Math","round","oThursday","oFirstDayOfYear","setUTCMonth","iAddDays","oFirstThursday"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/node_modules/@ui5/webcomponents-localization/dist/dates/calculateWeekNumber.js"],"sourcesContent":["import UniversalDate from \"../sap/ui/core/date/UniversalDate.js\";\n\nconst calculateWeekNumber = (confFirstDayOfWeek, oDate, iYear, oLocale, oLocaleData) => {\n\tlet iWeekNum = 0;\n\tlet iWeekDay = 0;\n\tconst iFirstDayOfWeek = Number.isInteger(confFirstDayOfWeek) ? confFirstDayOfWeek : oLocaleData.getFirstDayOfWeek();\n\n\t// search Locale for containing \"en-US\", since sometimes\n\t// when any user settings have been defined, subtag \"sapufmt\" is added to the locale name\n\t// this is described inside sap.ui.core.Configuration file\n\tif (oLocale && (oLocale.getLanguage() === \"en\" && oLocale.getRegion() === \"US\")) {\n\t\t/*\n\t\t\t* in US the week starts with Sunday\n\t\t\t* The first week of the year starts with January 1st. But Dec. 31 is still in the last year\n\t\t\t* So the week beginning in December and ending in January has 2 week numbers\n\t\t\t*/\n\t\tconst oJanFirst = new UniversalDate(oDate.getTime());\n\t\toJanFirst.setUTCFullYear(iYear, 0, 1);\n\t\tiWeekDay = oJanFirst.getUTCDay();\n\n\t\t// get the date for the same weekday like jan 1.\n\t\tconst oCheckDate = new UniversalDate(oDate.getTime());\n\t\toCheckDate.setUTCDate(oCheckDate.getUTCDate() - oCheckDate.getUTCDay() + iWeekDay);\n\n\t\tiWeekNum = Math.round((oCheckDate.getTime() - oJanFirst.getTime()) / 86400000 / 7) + 1;\n\t} else {\n\t\t// normally the first week of the year is the one where the first Thursday of the year is\n\t\t// find Thursday of this week\n\t\t// if the checked day is before the 1. day of the week use a day of the previous week to check\n\t\tconst oThursday = new UniversalDate(oDate.getTime());\n\t\toThursday.setUTCDate(oThursday.getUTCDate() - iFirstDayOfWeek);\n\t\tiWeekDay = oThursday.getUTCDay();\n\t\toThursday.setUTCDate(oThursday.getUTCDate() - iWeekDay + 4);\n\n\t\tconst oFirstDayOfYear = new UniversalDate(oThursday.getTime());\n\t\toFirstDayOfYear.setUTCMonth(0, 1);\n\t\tiWeekDay = oFirstDayOfYear.getUTCDay();\n\t\tlet iAddDays = 0;\n\t\tif (iWeekDay > 4) {\n\t\t\tiAddDays = 7; // first day of year is after Thursday, so first Thursday is in the next week\n\t\t}\n\t\tconst oFirstThursday = new UniversalDate(oFirstDayOfYear.getTime());\n\t\toFirstThursday.setUTCDate(1 - iWeekDay + 4 + iAddDays);\n\n\t\tiWeekNum = Math.round((oThursday.getTime() - oFirstThursday.getTime()) / 86400000 / 7) + 1;\n\t}\n\n\treturn iWeekNum;\n};\n\nexport default calculateWeekNumber;\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,sCAAsC;AAEhE,MAAMC,mBAAmB,GAAG,CAACC,kBAAkB,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAEC,WAAW,KAAK;EACvF,IAAIC,QAAQ,GAAG,CAAC;EAChB,IAAIC,QAAQ,GAAG,CAAC;EAChB,MAAMC,eAAe,GAAGC,MAAM,CAACC,SAAS,CAACT,kBAAkB,CAAC,GAAGA,kBAAkB,GAAGI,WAAW,CAACM,iBAAiB,EAAE;;EAEnH;EACA;EACA;EACA,IAAIP,OAAO,IAAKA,OAAO,CAACQ,WAAW,EAAE,KAAK,IAAI,IAAIR,OAAO,CAACS,SAAS,EAAE,KAAK,IAAK,EAAE;IAChF;AACF;AACA;AACA;AACA;IACE,MAAMC,SAAS,GAAG,IAAIf,aAAa,CAACG,KAAK,CAACa,OAAO,EAAE,CAAC;IACpDD,SAAS,CAACE,cAAc,CAACb,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;IACrCI,QAAQ,GAAGO,SAAS,CAACG,SAAS,EAAE;;IAEhC;IACA,MAAMC,UAAU,GAAG,IAAInB,aAAa,CAACG,KAAK,CAACa,OAAO,EAAE,CAAC;IACrDG,UAAU,CAACC,UAAU,CAACD,UAAU,CAACE,UAAU,EAAE,GAAGF,UAAU,CAACD,SAAS,EAAE,GAAGV,QAAQ,CAAC;IAElFD,QAAQ,GAAGe,IAAI,CAACC,KAAK,CAAC,CAACJ,UAAU,CAACH,OAAO,EAAE,GAAGD,SAAS,CAACC,OAAO,EAAE,IAAI,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC;EACvF,CAAC,MAAM;IACN;IACA;IACA;IACA,MAAMQ,SAAS,GAAG,IAAIxB,aAAa,CAACG,KAAK,CAACa,OAAO,EAAE,CAAC;IACpDQ,SAAS,CAACJ,UAAU,CAACI,SAAS,CAACH,UAAU,EAAE,GAAGZ,eAAe,CAAC;IAC9DD,QAAQ,GAAGgB,SAAS,CAACN,SAAS,EAAE;IAChCM,SAAS,CAACJ,UAAU,CAACI,SAAS,CAACH,UAAU,EAAE,GAAGb,QAAQ,GAAG,CAAC,CAAC;IAE3D,MAAMiB,eAAe,GAAG,IAAIzB,aAAa,CAACwB,SAAS,CAACR,OAAO,EAAE,CAAC;IAC9DS,eAAe,CAACC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC;IACjClB,QAAQ,GAAGiB,eAAe,CAACP,SAAS,EAAE;IACtC,IAAIS,QAAQ,GAAG,CAAC;IAChB,IAAInB,QAAQ,GAAG,CAAC,EAAE;MACjBmB,QAAQ,GAAG,CAAC,CAAC,CAAC;IACf;;IACA,MAAMC,cAAc,GAAG,IAAI5B,aAAa,CAACyB,eAAe,CAACT,OAAO,EAAE,CAAC;IACnEY,cAAc,CAACR,UAAU,CAAC,CAAC,GAAGZ,QAAQ,GAAG,CAAC,GAAGmB,QAAQ,CAAC;IAEtDpB,QAAQ,GAAGe,IAAI,CAACC,KAAK,CAAC,CAACC,SAAS,CAACR,OAAO,EAAE,GAAGY,cAAc,CAACZ,OAAO,EAAE,IAAI,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC;EAC3F;EAEA,OAAOT,QAAQ;AAChB,CAAC;AAED,eAAeN,mBAAmB"},"metadata":{},"sourceType":"module"}