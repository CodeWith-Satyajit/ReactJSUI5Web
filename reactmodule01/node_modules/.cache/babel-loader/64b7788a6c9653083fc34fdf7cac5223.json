{"ast":null,"code":"const ua = navigator.userAgent;\nconst touch = \"ontouchstart\" in window || navigator.maxTouchPoints > 0;\nconst ie = /(msie|trident)/i.test(ua);\nconst chrome = !ie && /(Chrome|CriOS)/.test(ua);\nconst safari = !ie && !chrome && /(Version|PhantomJS)\\/(\\d+\\.\\d+).*Safari/.test(ua);\nconst webkit = !ie && /webkit/.test(ua);\nconst windows = navigator.platform.indexOf(\"Win\") !== -1;\nconst iOS = navigator.platform.match(/iPhone|iPad|iPod/) || navigator.userAgent.match(/Mac/) && \"ontouchend\" in document;\nconst android = !windows && /Android/.test(ua);\nconst androidPhone = android && /(?=android)(?=.*mobile)/i.test(ua);\nconst ipad = /ipad/i.test(ua) || /Macintosh/i.test(ua) && \"ontouchend\" in document;\n// With iOS 13 the string 'iPad' was removed from the user agent string through a browser setting, which is applied on all sites by default:\n// \"Request Desktop Website -> All websites\" (for more infos see: https://forums.developer.apple.com/thread/119186).\n// Therefore the OS is detected as MACINTOSH instead of iOS and the device is a tablet if the Device.support.touch is true.\n\nlet windowsVersion;\nlet webkitVersion;\nlet tablet;\nconst isWindows8OrAbove = () => {\n  if (!windows) {\n    return false;\n  }\n  if (windowsVersion === undefined) {\n    const matches = ua.match(/Windows NT (\\d+).(\\d)/);\n    windowsVersion = matches ? parseFloat(matches[1]) : 0;\n  }\n  return windowsVersion >= 8;\n};\nconst isWebkit537OrAbove = () => {\n  if (!webkit) {\n    return false;\n  }\n  if (webkitVersion === undefined) {\n    const matches = ua.match(/(webkit)[ /]([\\w.]+)/);\n    webkitVersion = matches ? parseFloat(matches[1]) : 0;\n  }\n  return webkitVersion >= 537.10;\n};\nconst detectTablet = () => {\n  if (tablet !== undefined) {\n    return;\n  }\n  if (ipad) {\n    tablet = true;\n    return;\n  }\n  if (touch) {\n    if (isWindows8OrAbove()) {\n      tablet = true;\n      return;\n    }\n    if (chrome && android) {\n      tablet = !/Mobile Safari\\/[.0-9]+/.test(ua);\n      return;\n    }\n    let densityFactor = window.devicePixelRatio ? window.devicePixelRatio : 1; // may be undefined in Windows Phone devices\n    if (android && isWebkit537OrAbove()) {\n      densityFactor = 1;\n    }\n    tablet = Math.min(window.screen.width / densityFactor, window.screen.height / densityFactor) >= 600;\n    return;\n  }\n  tablet = ie && ua.indexOf(\"Touch\") !== -1 || android && !androidPhone;\n};\nconst supportsTouch = () => touch;\nconst isIE = () => ie;\nconst isSafari = () => safari;\nconst isChrome = () => chrome;\nconst isTablet = () => {\n  detectTablet();\n  return (touch || isWindows8OrAbove()) && tablet;\n};\nconst isPhone = () => {\n  detectTablet();\n  return touch && !tablet;\n};\nconst isDesktop = () => {\n  return !isTablet() && !isPhone() || isWindows8OrAbove();\n};\nconst isCombi = () => {\n  return isTablet() && isDesktop();\n};\nconst isIOS = () => {\n  return iOS;\n};\nconst isAndroid = () => {\n  return android || androidPhone;\n};\nexport { supportsTouch, isIE, isSafari, isChrome, isPhone, isTablet, isDesktop, isCombi, isIOS, isAndroid };","map":{"version":3,"names":["ua","navigator","userAgent","touch","window","maxTouchPoints","ie","test","chrome","safari","webkit","windows","platform","indexOf","iOS","match","document","android","androidPhone","ipad","windowsVersion","webkitVersion","tablet","isWindows8OrAbove","undefined","matches","parseFloat","isWebkit537OrAbove","detectTablet","densityFactor","devicePixelRatio","Math","min","screen","width","height","supportsTouch","isIE","isSafari","isChrome","isTablet","isPhone","isDesktop","isCombi","isIOS","isAndroid"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/node_modules/@ui5/webcomponents-base/dist/Device.js"],"sourcesContent":["const ua = navigator.userAgent;\nconst touch = \"ontouchstart\" in window || navigator.maxTouchPoints > 0;\nconst ie = /(msie|trident)/i.test(ua);\nconst chrome = !ie && /(Chrome|CriOS)/.test(ua);\nconst safari = !ie && !chrome && /(Version|PhantomJS)\\/(\\d+\\.\\d+).*Safari/.test(ua);\nconst webkit = !ie && /webkit/.test(ua);\nconst windows = navigator.platform.indexOf(\"Win\") !== -1;\nconst iOS = navigator.platform.match(/iPhone|iPad|iPod/) || (navigator.userAgent.match(/Mac/) && \"ontouchend\" in document);\nconst android = !windows && /Android/.test(ua);\nconst androidPhone = android && /(?=android)(?=.*mobile)/i.test(ua);\nconst ipad = /ipad/i.test(ua) || (/Macintosh/i.test(ua) && \"ontouchend\" in document);\n// With iOS 13 the string 'iPad' was removed from the user agent string through a browser setting, which is applied on all sites by default:\n// \"Request Desktop Website -> All websites\" (for more infos see: https://forums.developer.apple.com/thread/119186).\n// Therefore the OS is detected as MACINTOSH instead of iOS and the device is a tablet if the Device.support.touch is true.\n\nlet windowsVersion;\nlet webkitVersion;\nlet tablet;\n\nconst isWindows8OrAbove = () => {\n\tif (!windows) {\n\t\treturn false;\n\t}\n\n\tif (windowsVersion === undefined) {\n\t\tconst matches = ua.match(/Windows NT (\\d+).(\\d)/);\n\t\twindowsVersion = matches ? parseFloat(matches[1]) : 0;\n\t}\n\n\treturn windowsVersion >= 8;\n};\n\nconst isWebkit537OrAbove = () => {\n\tif (!webkit) {\n\t\treturn false;\n\t}\n\n\tif (webkitVersion === undefined) {\n\t\tconst matches = ua.match(/(webkit)[ /]([\\w.]+)/);\n\t\twebkitVersion = matches ? parseFloat(matches[1]) : 0;\n\t}\n\n\treturn webkitVersion >= 537.10;\n};\n\nconst detectTablet = () => {\n\tif (tablet !== undefined) {\n\t\treturn;\n\t}\n\n\tif (ipad) {\n\t\ttablet = true;\n\t\treturn;\n\t}\n\n\tif (touch) {\n\t\tif (isWindows8OrAbove()) {\n\t\t\ttablet = true;\n\t\t\treturn;\n\t\t}\n\n\t\tif (chrome && android) {\n\t\t\ttablet = !/Mobile Safari\\/[.0-9]+/.test(ua);\n\t\t\treturn;\n\t\t}\n\n\t\tlet densityFactor = window.devicePixelRatio ? window.devicePixelRatio : 1; // may be undefined in Windows Phone devices\n\t\tif (android && isWebkit537OrAbove()) {\n\t\t\tdensityFactor = 1;\n\t\t}\n\n\t\ttablet = (Math.min(window.screen.width / densityFactor, window.screen.height / densityFactor) >= 600);\n\t\treturn;\n\t}\n\n\ttablet = (ie && ua.indexOf(\"Touch\") !== -1) || (android && !androidPhone);\n};\n\nconst supportsTouch = () => touch;\nconst isIE = () => ie;\nconst isSafari = () => safari;\nconst isChrome = () => chrome;\n\nconst isTablet = () => {\n\tdetectTablet();\n\treturn (touch || isWindows8OrAbove()) && tablet;\n};\n\nconst isPhone = () => {\n\tdetectTablet();\n\treturn touch && !tablet;\n};\n\nconst isDesktop = () => {\n\treturn (!isTablet() && !isPhone()) || isWindows8OrAbove();\n};\n\nconst isCombi = () => {\n\treturn isTablet() && isDesktop();\n};\n\nconst isIOS = () => {\n\treturn iOS;\n};\n\nconst isAndroid = () => {\n\treturn android || androidPhone;\n};\n\nexport {\n\tsupportsTouch,\n\tisIE,\n\tisSafari,\n\tisChrome,\n\tisPhone,\n\tisTablet,\n\tisDesktop,\n\tisCombi,\n\tisIOS,\n\tisAndroid,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}