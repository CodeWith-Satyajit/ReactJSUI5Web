{"ast":null,"code":"/**\n * Creates a <style> tag in the <head> tag\n * @param cssText - the CSS\n * @param attributes - optional attributes to add to the tag\n * @returns {HTMLElement}\n */\nconst createStyleInHead = function (cssText) {\n  let attributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const style = document.createElement(\"style\");\n  style.type = \"text/css\";\n  Object.entries(attributes).forEach(pair => style.setAttribute(...pair));\n  style.textContent = cssText;\n  document.head.appendChild(style);\n  return style;\n};\nexport default createStyleInHead;","map":{"version":3,"names":["createStyleInHead","cssText","attributes","style","document","createElement","type","Object","entries","forEach","pair","setAttribute","textContent","head","appendChild"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/node_modules/@ui5/webcomponents-base/dist/util/createStyleInHead.js"],"sourcesContent":["/**\n * Creates a <style> tag in the <head> tag\n * @param cssText - the CSS\n * @param attributes - optional attributes to add to the tag\n * @returns {HTMLElement}\n */\nconst createStyleInHead = (cssText, attributes = {}) => {\n\tconst style = document.createElement(\"style\");\n\tstyle.type = \"text/css\";\n\n\tObject.entries(attributes).forEach(pair => style.setAttribute(...pair));\n\n\tstyle.textContent = cssText;\n\tdocument.head.appendChild(style);\n\treturn style;\n};\n\nexport default createStyleInHead;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,iBAAiB,GAAG,UAACC,OAAO,EAAsB;EAAA,IAApBC,UAAU,uEAAG,CAAC,CAAC;EAClD,MAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;EAC7CF,KAAK,CAACG,IAAI,GAAG,UAAU;EAEvBC,MAAM,CAACC,OAAO,CAACN,UAAU,CAAC,CAACO,OAAO,CAACC,IAAI,IAAIP,KAAK,CAACQ,YAAY,CAAC,GAAGD,IAAI,CAAC,CAAC;EAEvEP,KAAK,CAACS,WAAW,GAAGX,OAAO;EAC3BG,QAAQ,CAACS,IAAI,CAACC,WAAW,CAACX,KAAK,CAAC;EAChC,OAAOA,KAAK;AACb,CAAC;AAED,eAAeH,iBAAiB"},"metadata":{},"sourceType":"module"}