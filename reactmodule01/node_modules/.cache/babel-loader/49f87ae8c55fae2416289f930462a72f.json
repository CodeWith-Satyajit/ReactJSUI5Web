{"ast":null,"code":"class EventProvider {\n  constructor() {\n    this._eventRegistry = new Map();\n  }\n  attachEvent(eventName, fnFunction) {\n    const eventRegistry = this._eventRegistry;\n    const eventListeners = eventRegistry.get(eventName);\n    if (!Array.isArray(eventListeners)) {\n      eventRegistry.set(eventName, [fnFunction]);\n      return;\n    }\n    if (!eventListeners.includes(fnFunction)) {\n      eventListeners.push(fnFunction);\n    }\n  }\n  detachEvent(eventName, fnFunction) {\n    const eventRegistry = this._eventRegistry;\n    const eventListeners = eventRegistry.get(eventName);\n    if (!eventListeners) {\n      return;\n    }\n    const indexOfFnToDetach = eventListeners.indexOf(fnFunction);\n    if (indexOfFnToDetach !== -1) {\n      eventListeners.splice(indexOfFnToDetach, 1);\n    }\n    if (eventListeners.length === 0) {\n      eventRegistry.delete(eventName);\n    }\n  }\n\n  /**\n   * Fires an event and returns the results of all event listeners as an array.\n   *\n   * @param eventName the event to fire\n   * @param data optional data to pass to each event listener\n   * @returns {Array} an array with the results of all event listeners\n   */\n  fireEvent(eventName, data) {\n    const eventRegistry = this._eventRegistry;\n    const eventListeners = eventRegistry.get(eventName);\n    if (!eventListeners) {\n      return [];\n    }\n    return eventListeners.map(fn => {\n      return fn.call(this, data); // eslint-disable-line\n    });\n  }\n\n  /**\n   * Fires an event and returns a promise that will resolve once all listeners have resolved.\n   *\n   * @param eventName the event to fire\n   * @param data optional data to pass to each event listener\n   * @returns {Promise} a promise that will resolve when all listeners have resolved\n   */\n  fireEventAsync(eventName, data) {\n    return Promise.all(this.fireEvent(eventName, data));\n  }\n  isHandlerAttached(eventName, fnFunction) {\n    const eventRegistry = this._eventRegistry;\n    const eventListeners = eventRegistry.get(eventName);\n    if (!eventListeners) {\n      return false;\n    }\n    return eventListeners.includes(fnFunction);\n  }\n  hasListeners(eventName) {\n    return !!this._eventRegistry.get(eventName);\n  }\n}\nexport default EventProvider;","map":{"version":3,"names":["EventProvider","constructor","_eventRegistry","Map","attachEvent","eventName","fnFunction","eventRegistry","eventListeners","get","Array","isArray","set","includes","push","detachEvent","indexOfFnToDetach","indexOf","splice","length","delete","fireEvent","data","map","fn","call","fireEventAsync","Promise","all","isHandlerAttached","hasListeners"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/node_modules/@ui5/webcomponents-base/dist/EventProvider.js"],"sourcesContent":["class EventProvider {\n\tconstructor() {\n\t\tthis._eventRegistry = new Map();\n\t}\n\n\tattachEvent(eventName, fnFunction) {\n\t\tconst eventRegistry = this._eventRegistry;\n\t\tconst eventListeners = eventRegistry.get(eventName);\n\n\t\tif (!Array.isArray(eventListeners)) {\n\t\t\teventRegistry.set(eventName, [fnFunction]);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!eventListeners.includes(fnFunction)) {\n\t\t\teventListeners.push(fnFunction);\n\t\t}\n\t}\n\n\tdetachEvent(eventName, fnFunction) {\n\t\tconst eventRegistry = this._eventRegistry;\n\t\tconst eventListeners = eventRegistry.get(eventName);\n\n\t\tif (!eventListeners) {\n\t\t\treturn;\n\t\t}\n\t\tconst indexOfFnToDetach = eventListeners.indexOf(fnFunction);\n\n\t\tif (indexOfFnToDetach !== -1) {\n\t\t\teventListeners.splice(indexOfFnToDetach, 1);\n\t\t}\n\n\t\tif (eventListeners.length === 0) {\n\t\t\teventRegistry.delete(eventName);\n\t\t}\n\t}\n\n\t/**\n\t * Fires an event and returns the results of all event listeners as an array.\n\t *\n\t * @param eventName the event to fire\n\t * @param data optional data to pass to each event listener\n\t * @returns {Array} an array with the results of all event listeners\n\t */\n\tfireEvent(eventName, data) {\n\t\tconst eventRegistry = this._eventRegistry;\n\t\tconst eventListeners = eventRegistry.get(eventName);\n\n\t\tif (!eventListeners) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn eventListeners.map(fn => {\n\t\t\treturn fn.call(this, data); // eslint-disable-line\n\t\t});\n\t}\n\n\t/**\n\t * Fires an event and returns a promise that will resolve once all listeners have resolved.\n\t *\n\t * @param eventName the event to fire\n\t * @param data optional data to pass to each event listener\n\t * @returns {Promise} a promise that will resolve when all listeners have resolved\n\t */\n\tfireEventAsync(eventName, data) {\n\t\treturn Promise.all(this.fireEvent(eventName, data));\n\t}\n\n\tisHandlerAttached(eventName, fnFunction) {\n\t\tconst eventRegistry = this._eventRegistry;\n\t\tconst eventListeners = eventRegistry.get(eventName);\n\n\t\tif (!eventListeners) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn eventListeners.includes(fnFunction);\n\t}\n\n\thasListeners(eventName) {\n\t\treturn !!this._eventRegistry.get(eventName);\n\t}\n}\n\nexport default EventProvider;\n"],"mappings":"AAAA,MAAMA,aAAa,CAAC;EACnBC,WAAW,GAAG;IACb,IAAI,CAACC,cAAc,GAAG,IAAIC,GAAG,EAAE;EAChC;EAEAC,WAAW,CAACC,SAAS,EAAEC,UAAU,EAAE;IAClC,MAAMC,aAAa,GAAG,IAAI,CAACL,cAAc;IACzC,MAAMM,cAAc,GAAGD,aAAa,CAACE,GAAG,CAACJ,SAAS,CAAC;IAEnD,IAAI,CAACK,KAAK,CAACC,OAAO,CAACH,cAAc,CAAC,EAAE;MACnCD,aAAa,CAACK,GAAG,CAACP,SAAS,EAAE,CAACC,UAAU,CAAC,CAAC;MAC1C;IACD;IAEA,IAAI,CAACE,cAAc,CAACK,QAAQ,CAACP,UAAU,CAAC,EAAE;MACzCE,cAAc,CAACM,IAAI,CAACR,UAAU,CAAC;IAChC;EACD;EAEAS,WAAW,CAACV,SAAS,EAAEC,UAAU,EAAE;IAClC,MAAMC,aAAa,GAAG,IAAI,CAACL,cAAc;IACzC,MAAMM,cAAc,GAAGD,aAAa,CAACE,GAAG,CAACJ,SAAS,CAAC;IAEnD,IAAI,CAACG,cAAc,EAAE;MACpB;IACD;IACA,MAAMQ,iBAAiB,GAAGR,cAAc,CAACS,OAAO,CAACX,UAAU,CAAC;IAE5D,IAAIU,iBAAiB,KAAK,CAAC,CAAC,EAAE;MAC7BR,cAAc,CAACU,MAAM,CAACF,iBAAiB,EAAE,CAAC,CAAC;IAC5C;IAEA,IAAIR,cAAc,CAACW,MAAM,KAAK,CAAC,EAAE;MAChCZ,aAAa,CAACa,MAAM,CAACf,SAAS,CAAC;IAChC;EACD;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACCgB,SAAS,CAAChB,SAAS,EAAEiB,IAAI,EAAE;IAC1B,MAAMf,aAAa,GAAG,IAAI,CAACL,cAAc;IACzC,MAAMM,cAAc,GAAGD,aAAa,CAACE,GAAG,CAACJ,SAAS,CAAC;IAEnD,IAAI,CAACG,cAAc,EAAE;MACpB,OAAO,EAAE;IACV;IAEA,OAAOA,cAAc,CAACe,GAAG,CAACC,EAAE,IAAI;MAC/B,OAAOA,EAAE,CAACC,IAAI,CAAC,IAAI,EAAEH,IAAI,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC;EACH;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACCI,cAAc,CAACrB,SAAS,EAAEiB,IAAI,EAAE;IAC/B,OAAOK,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,SAAS,CAAChB,SAAS,EAAEiB,IAAI,CAAC,CAAC;EACpD;EAEAO,iBAAiB,CAACxB,SAAS,EAAEC,UAAU,EAAE;IACxC,MAAMC,aAAa,GAAG,IAAI,CAACL,cAAc;IACzC,MAAMM,cAAc,GAAGD,aAAa,CAACE,GAAG,CAACJ,SAAS,CAAC;IAEnD,IAAI,CAACG,cAAc,EAAE;MACpB,OAAO,KAAK;IACb;IAEA,OAAOA,cAAc,CAACK,QAAQ,CAACP,UAAU,CAAC;EAC3C;EAEAwB,YAAY,CAACzB,SAAS,EAAE;IACvB,OAAO,CAAC,CAAC,IAAI,CAACH,cAAc,CAACO,GAAG,CAACJ,SAAS,CAAC;EAC5C;AACD;AAEA,eAAeL,aAAa"},"metadata":{},"sourceType":"module"}