{"ast":null,"code":"import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport { isSpace, isEnter } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport { getEffectiveAriaLabelText } from \"@ui5/webcomponents-base/dist/util/AriaLabelHelper.js\";\nimport { getFeature } from \"@ui5/webcomponents-base/dist/FeaturesRegistry.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport { isPhone, isTablet, isCombi, isDesktop, isSafari } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport isDefaultSlotProvided from \"@ui5/webcomponents-base/dist/util/isDefaultSlotProvided.js\";\nimport ButtonDesign from \"./types/ButtonDesign.js\";\nimport ButtonTemplate from \"./generated/templates/ButtonTemplate.lit.js\";\nimport Icon from \"./Icon.js\";\nimport { BUTTON_ARIA_TYPE_ACCEPT, BUTTON_ARIA_TYPE_REJECT, BUTTON_ARIA_TYPE_EMPHASIZED } from \"./generated/i18n/i18n-defaults.js\";\n\n// Styles\nimport buttonCss from \"./generated/themes/Button.css.js\";\nlet isGlobalHandlerAttached = false;\nlet activeButton = null;\n\n/**\n * @public\n */\nconst metadata = {\n  tag: \"ui5-button\",\n  languageAware: true,\n  properties: /** @lends sap.ui.webcomponents.main.Button.prototype */{\n    /**\n     * Defines the component design.\n     *\n     * <br><br>\n     * <b>The available values are:</b>\n     *\n     * <ul>\n     * <li><code>Default</code></li>\n     * <li><code>Emphasized</code></li>\n     * <li><code>Positive</code></li>\n     * <li><code>Negative</code></li>\n     * <li><code>Transparent</code></li>\n     * <li><code>Attention</code></li>\n     * </ul>\n     *\n     * @type {sap.ui.webcomponents.main.types.ButtonDesign}\n     * @defaultvalue \"Default\"\n     * @public\n     */\n    design: {\n      type: ButtonDesign,\n      defaultValue: ButtonDesign.Default\n    },\n    /**\n     * Defines whether the component is disabled.\n     * A disabled component can't be pressed or\n     * focused, and it is not in the tab chain.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    disabled: {\n      type: Boolean\n    },\n    /**\n     * Defines the icon, displayed as graphical element within the component.\n     * The SAP-icons font provides numerous options.\n     * <br><br>\n     * Example:\n     *\n     * See all the available icons within the <ui5-link target=\"_blank\" href=\"https://sdk.openui5.org/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer</ui5-link>.\n     *\n     * @type {string}\n     * @defaultvalue \"\"\n     * @public\n     */\n    icon: {\n      type: String\n    },\n    /**\n     * Defines whether the icon should be displayed after the component text.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    iconEnd: {\n      type: Boolean\n    },\n    /**\n     * When set to <code>true</code>, the component will\n     * automatically submit the nearest HTML form element on <code>press</code>.\n     * <br><br>\n     * <b>Note:</b> For the <code>submits</code> property to have effect, you must add the following import to your project:\n     * <code>import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";</code>\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    submits: {\n      type: Boolean\n    },\n    /**\n     * Defines the tooltip of the component.\n     * <br>\n     * <b>Note:</b> A tooltip attribute should be provided for icon-only buttons, in order to represent their exact meaning/function.\n     * @type {string}\n     * @defaultvalue: \"\"\n     * @public\n     * @since 1.2.0\n     */\n    tooltip: {\n      type: String\n    },\n    /**\n     * Used to switch the active state (pressed or not) of the component.\n     * @private\n     */\n    active: {\n      type: Boolean\n    },\n    /**\n     * Defines if a content has been added to the default slot\n     * @private\n     */\n    iconOnly: {\n      type: Boolean\n    },\n    /**\n     * Indicates if the elements is on focus\n     * @private\n     */\n    focused: {\n      type: Boolean\n    },\n    /**\n     * Indicates if the elements has a slotted icon\n     * @private\n     */\n    hasIcon: {\n      type: Boolean\n    },\n    /**\n     * Defines the accessible ARIA name of the component.\n     *\n     * @type {string}\n     * @defaultvalue: \"\"\n     * @public\n     * @since 1.0.0-rc.15\n     */\n    accessibleName: {\n      type: String,\n      defaultValue: undefined\n    },\n    /**\n     * Receives id(or many ids) of the elements that label the component.\n     *\n     * @type {string}\n     * @defaultvalue \"\"\n     * @public\n     * @since 1.1.0\n     */\n    accessibleNameRef: {\n      type: String,\n      defaultValue: \"\"\n    },\n    /**\n     * An object of strings that defines several additional accessibility attribute values\n     * for customization depending on the use case.\n     *\n     * It supports the following fields:\n     *\n     * <ul>\n     * \t\t<li><code>expanded</code>: Indicates whether the button, or another grouping element it controls, is currently expanded or collapsed. Accepts the following string values:\n     *\t\t\t<ul>\n     *\t\t\t\t<li><code>true</code></li>\n     *\t\t\t\t<li><code>false</code></li>\n     *\t\t\t</ul>\n     * \t\t</li>\n     * \t\t<li><code>hasPopup</code>: Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by the button. Accepts the following string values:\n     * \t\t\t<ul>\n     *\t\t\t\t<li><code>Dialog</code></li>\n     *\t\t\t\t<li><code>Grid</code></li>\n     *\t\t\t\t<li><code>ListBox</code></li>\n     *\t\t\t\t<li><code>Menu</code></li>\n     *\t\t\t\t<li><code>Tree</code></li>\n     * \t\t\t</ul>\n     * \t\t</li>\n     * \t\t<li><code>controls</code>: Identifies the element (or elements) whose contents or presence are controlled by the button element. Accepts a string value.</li>\n     * </ul>\n     * @type {object}\n     * @public\n     * @since 1.2.0\n     */\n    accessibilityAttributes: {\n      type: Object\n    },\n    /**\n     * Indicates if the element if focusable\n     * @private\n     */\n    nonInteractive: {\n      type: Boolean\n    },\n    _iconSettings: {\n      type: Object\n    },\n    /**\n     * Defines the tabIndex of the component.\n     * @private\n     */\n    _tabIndex: {\n      type: String,\n      defaultValue: \"0\",\n      noAttribute: true\n    },\n    /**\n     * @since 1.0.0-rc.13\n     * @private\n     */\n    _isTouch: {\n      type: Boolean\n    }\n  },\n  managedSlots: true,\n  slots: /** @lends sap.ui.webcomponents.main.Button.prototype */{\n    /**\n     * Defines the text of the component.\n     * <br><br>\n     * <b>Note:</b> Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.\n     *\n     * @type {Node[]}\n     * @slot\n     * @public\n     */\n    \"default\": {\n      type: Node\n    }\n  },\n  events: /** @lends sap.ui.webcomponents.main.Button.prototype */{\n    /**\n     * Fired when the component is activated either with a\n     * mouse/tap or by using the Enter or Space key.\n     * <br><br>\n     * <b>Note:</b> The event will not be fired if the <code>disabled</code>\n     * property is set to <code>true</code>.\n     *\n     * @event\n     * @public\n     * @native\n     */\n    click: {}\n  }\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * The <code>ui5-button</code> component represents a simple push button.\n * It enables users to trigger actions by clicking or tapping the <code>ui5-button</code>, or by pressing\n * certain keyboard keys, such as Enter.\n *\n *\n * <h3>Usage</h3>\n *\n * For the <code>ui5-button</code> UI, you can define text, icon, or both. You can also specify\n * whether the text or the icon is displayed first.\n * <br><br>\n * You can choose from a set of predefined types that offer different\n * styling to correspond to the triggered action.\n * <br><br>\n * You can set the <code>ui5-button</code> as enabled or disabled. An enabled\n * <code>ui5-button</code> can be pressed by clicking or tapping it. The button changes\n * its style to provide visual feedback to the user that it is pressed or hovered over with\n * the mouse cursor. A disabled <code>ui5-button</code> appears inactive and cannot be pressed.\n *\n * <h3>CSS Shadow Parts</h3>\n *\n * <ui5-link target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/::part\">CSS Shadow Parts</ui5-link> allow developers to style elements inside the Shadow DOM.\n * <br>\n * The <code>ui5-button</code> exposes the following CSS Shadow Parts:\n * <ul>\n * <li>button - Used to style the native button element</li>\n * </ul>\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/Button\";</code>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.Button\n * @extends sap.ui.webcomponents.base.UI5Element\n * @tagname ui5-button\n * @implements sap.ui.webcomponents.main.IButton\n * @public\n */\nclass Button extends UI5Element {\n  static get metadata() {\n    return metadata;\n  }\n  static get styles() {\n    return buttonCss;\n  }\n  static get render() {\n    return litRender;\n  }\n  static get template() {\n    return ButtonTemplate;\n  }\n  static get dependencies() {\n    return [Icon];\n  }\n  constructor() {\n    super();\n    this._deactivate = () => {\n      if (activeButton) {\n        activeButton.active = false;\n      }\n    };\n    if (!isGlobalHandlerAttached) {\n      document.addEventListener(\"mouseup\", this._deactivate);\n      isGlobalHandlerAttached = true;\n    }\n    const handleTouchStartEvent = event => {\n      event.isMarked = \"button\";\n      if (this.nonInteractive) {\n        return;\n      }\n      this.active = true;\n    };\n    this._ontouchstart = {\n      handleEvent: handleTouchStartEvent,\n      passive: true\n    };\n  }\n  onEnterDOM() {\n    this._isTouch = (isPhone() || isTablet()) && !isCombi();\n  }\n  onBeforeRendering() {\n    const FormSupport = getFeature(\"FormSupport\");\n    if (this.submits && !FormSupport) {\n      console.warn(`In order for the \"submits\" property to have effect, you should also: import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";`); // eslint-disable-line\n    }\n\n    this.iconOnly = this.isIconOnly;\n    this.hasIcon = !!this.icon;\n  }\n  _onclick(event) {\n    if (this.nonInteractive) {\n      return;\n    }\n    event.isMarked = \"button\";\n    const FormSupport = getFeature(\"FormSupport\");\n    if (FormSupport && this.submits) {\n      FormSupport.triggerFormSubmit(this);\n    }\n    if (isSafari()) {\n      this.getDomRef().focus();\n    }\n  }\n  _onmousedown(event) {\n    if (this.nonInteractive || this._isTouch) {\n      return;\n    }\n    event.isMarked = \"button\";\n    this.active = true;\n    activeButton = this; // eslint-disable-line\n  }\n\n  _ontouchend(event) {\n    this.active = false;\n    if (activeButton) {\n      activeButton.active = false;\n    }\n  }\n  _onmouseup(event) {\n    event.isMarked = \"button\";\n  }\n  _onkeydown(event) {\n    event.isMarked = \"button\";\n    if (isSpace(event) || isEnter(event)) {\n      this.active = true;\n    }\n  }\n  _onkeyup(event) {\n    if (isSpace(event) || isEnter(event)) {\n      this.active = false;\n    }\n  }\n  _onfocusout(_event) {\n    if (this.nonInteractive) {\n      return;\n    }\n    this.active = false;\n    if (isDesktop()) {\n      this.focused = false;\n    }\n  }\n  _onfocusin(event) {\n    if (this.nonInteractive) {\n      return;\n    }\n    event.isMarked = \"button\";\n    if (isDesktop()) {\n      this.focused = true;\n    }\n  }\n  get hasButtonType() {\n    return this.design !== ButtonDesign.Default && this.design !== ButtonDesign.Transparent;\n  }\n  get iconRole() {\n    if (!this.icon) {\n      return \"\";\n    }\n    return this.showIconTooltip ? \"img\" : \"presentation\";\n  }\n  get isIconOnly() {\n    return !isDefaultSlotProvided(this);\n  }\n  static typeTextMappings() {\n    return {\n      \"Positive\": BUTTON_ARIA_TYPE_ACCEPT,\n      \"Negative\": BUTTON_ARIA_TYPE_REJECT,\n      \"Emphasized\": BUTTON_ARIA_TYPE_EMPHASIZED\n    };\n  }\n  get buttonTypeText() {\n    return Button.i18nBundle.getText(Button.typeTextMappings()[this.design]);\n  }\n  get tabIndexValue() {\n    const tabindex = this.getAttribute(\"tabindex\");\n    if (tabindex) {\n      return tabindex;\n    }\n    return this.nonInteractive ? \"-1\" : this._tabIndex;\n  }\n  get showIconTooltip() {\n    return this.iconOnly && !this.tooltip;\n  }\n  get ariaLabelText() {\n    return getEffectiveAriaLabelText(this);\n  }\n  static async onDefine() {\n    Button.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n  }\n}\nButton.define();\nexport default Button;","map":{"version":3,"names":["UI5Element","litRender","isSpace","isEnter","getEffectiveAriaLabelText","getFeature","getI18nBundle","isPhone","isTablet","isCombi","isDesktop","isSafari","isDefaultSlotProvided","ButtonDesign","ButtonTemplate","Icon","BUTTON_ARIA_TYPE_ACCEPT","BUTTON_ARIA_TYPE_REJECT","BUTTON_ARIA_TYPE_EMPHASIZED","buttonCss","isGlobalHandlerAttached","activeButton","metadata","tag","languageAware","properties","design","type","defaultValue","Default","disabled","Boolean","icon","String","iconEnd","submits","tooltip","active","iconOnly","focused","hasIcon","accessibleName","undefined","accessibleNameRef","accessibilityAttributes","Object","nonInteractive","_iconSettings","_tabIndex","noAttribute","_isTouch","managedSlots","slots","Node","events","click","Button","styles","render","template","dependencies","constructor","_deactivate","document","addEventListener","handleTouchStartEvent","event","isMarked","_ontouchstart","handleEvent","passive","onEnterDOM","onBeforeRendering","FormSupport","console","warn","isIconOnly","_onclick","triggerFormSubmit","getDomRef","focus","_onmousedown","_ontouchend","_onmouseup","_onkeydown","_onkeyup","_onfocusout","_event","_onfocusin","hasButtonType","Transparent","iconRole","showIconTooltip","typeTextMappings","buttonTypeText","i18nBundle","getText","tabIndexValue","tabindex","getAttribute","ariaLabelText","onDefine","define"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/node_modules/@ui5/webcomponents/dist/Button.js"],"sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport { isSpace, isEnter } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport { getEffectiveAriaLabelText } from \"@ui5/webcomponents-base/dist/util/AriaLabelHelper.js\";\nimport { getFeature } from \"@ui5/webcomponents-base/dist/FeaturesRegistry.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport {\n\tisPhone,\n\tisTablet,\n\tisCombi,\n\tisDesktop,\n\tisSafari,\n} from \"@ui5/webcomponents-base/dist/Device.js\";\nimport isDefaultSlotProvided from \"@ui5/webcomponents-base/dist/util/isDefaultSlotProvided.js\";\nimport ButtonDesign from \"./types/ButtonDesign.js\";\nimport ButtonTemplate from \"./generated/templates/ButtonTemplate.lit.js\";\nimport Icon from \"./Icon.js\";\n\nimport { BUTTON_ARIA_TYPE_ACCEPT, BUTTON_ARIA_TYPE_REJECT, BUTTON_ARIA_TYPE_EMPHASIZED } from \"./generated/i18n/i18n-defaults.js\";\n\n// Styles\nimport buttonCss from \"./generated/themes/Button.css.js\";\n\nlet isGlobalHandlerAttached = false;\nlet activeButton = null;\n\n/**\n * @public\n */\nconst metadata = {\n\ttag: \"ui5-button\",\n\tlanguageAware: true,\n\tproperties: /** @lends sap.ui.webcomponents.main.Button.prototype */ {\n\n\t\t/**\n\t\t * Defines the component design.\n\t\t *\n\t\t * <br><br>\n\t\t * <b>The available values are:</b>\n\t\t *\n\t\t * <ul>\n\t\t * <li><code>Default</code></li>\n\t\t * <li><code>Emphasized</code></li>\n\t\t * <li><code>Positive</code></li>\n\t\t * <li><code>Negative</code></li>\n\t\t * <li><code>Transparent</code></li>\n\t\t * <li><code>Attention</code></li>\n\t\t * </ul>\n\t\t *\n\t\t * @type {sap.ui.webcomponents.main.types.ButtonDesign}\n\t\t * @defaultvalue \"Default\"\n\t\t * @public\n\t\t */\n\t\tdesign: {\n\t\t\ttype: ButtonDesign,\n\t\t\tdefaultValue: ButtonDesign.Default,\n\t\t},\n\n\t\t/**\n\t\t * Defines whether the component is disabled.\n\t\t * A disabled component can't be pressed or\n\t\t * focused, and it is not in the tab chain.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\tdisabled: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines the icon, displayed as graphical element within the component.\n\t\t * The SAP-icons font provides numerous options.\n\t\t * <br><br>\n\t\t * Example:\n\t\t *\n\t\t * See all the available icons within the <ui5-link target=\"_blank\" href=\"https://sdk.openui5.org/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer</ui5-link>.\n\t\t *\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @public\n\t\t */\n\t\ticon: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Defines whether the icon should be displayed after the component text.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\ticonEnd: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * When set to <code>true</code>, the component will\n\t\t * automatically submit the nearest HTML form element on <code>press</code>.\n\t\t * <br><br>\n\t\t * <b>Note:</b> For the <code>submits</code> property to have effect, you must add the following import to your project:\n\t\t * <code>import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";</code>\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\tsubmits: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines the tooltip of the component.\n\t\t * <br>\n\t\t * <b>Note:</b> A tooltip attribute should be provided for icon-only buttons, in order to represent their exact meaning/function.\n\t\t * @type {string}\n\t\t * @defaultvalue: \"\"\n\t\t * @public\n\t\t * @since 1.2.0\n\t\t */\n\t\ttooltip: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Used to switch the active state (pressed or not) of the component.\n\t\t * @private\n\t\t */\n\t\tactive: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines if a content has been added to the default slot\n\t\t * @private\n\t\t */\n\t\ticonOnly: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Indicates if the elements is on focus\n\t\t * @private\n\t\t */\n\t\tfocused: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Indicates if the elements has a slotted icon\n\t\t * @private\n\t\t */\n\t\thasIcon: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines the accessible ARIA name of the component.\n\t\t *\n\t\t * @type {string}\n\t\t * @defaultvalue: \"\"\n\t\t * @public\n\t\t * @since 1.0.0-rc.15\n\t\t */\n\t\taccessibleName: {\n\t\t\ttype: String,\n\t\t\tdefaultValue: undefined,\n\t\t},\n\n\t\t/**\n\t\t * Receives id(or many ids) of the elements that label the component.\n\t\t *\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @public\n\t\t * @since 1.1.0\n\t\t */\n\t\t accessibleNameRef: {\n\t\t\ttype: String,\n\t\t\tdefaultValue: \"\",\n\t\t},\n\n\t\t/**\n\t\t * An object of strings that defines several additional accessibility attribute values\n\t\t * for customization depending on the use case.\n\t\t *\n\t\t * It supports the following fields:\n\t\t *\n\t\t * <ul>\n\t\t * \t\t<li><code>expanded</code>: Indicates whether the button, or another grouping element it controls, is currently expanded or collapsed. Accepts the following string values:\n\t\t *\t\t\t<ul>\n\t\t *\t\t\t\t<li><code>true</code></li>\n\t\t *\t\t\t\t<li><code>false</code></li>\n\t\t *\t\t\t</ul>\n\t\t * \t\t</li>\n\t\t * \t\t<li><code>hasPopup</code>: Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by the button. Accepts the following string values:\n\t\t * \t\t\t<ul>\n\t\t *\t\t\t\t<li><code>Dialog</code></li>\n\t\t *\t\t\t\t<li><code>Grid</code></li>\n\t\t *\t\t\t\t<li><code>ListBox</code></li>\n\t\t *\t\t\t\t<li><code>Menu</code></li>\n\t\t *\t\t\t\t<li><code>Tree</code></li>\n\t\t * \t\t\t</ul>\n\t\t * \t\t</li>\n\t\t * \t\t<li><code>controls</code>: Identifies the element (or elements) whose contents or presence are controlled by the button element. Accepts a string value.</li>\n\t\t * </ul>\n\t\t * @type {object}\n\t\t * @public\n\t\t * @since 1.2.0\n\t\t */\n\t\taccessibilityAttributes: {\n\t\t\ttype: Object,\n\t\t},\n\n\t\t/**\n\t\t * Indicates if the element if focusable\n\t\t * @private\n\t\t */\n\t\tnonInteractive: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t_iconSettings: {\n\t\t\ttype: Object,\n\t\t},\n\n\t\t/**\n\t\t * Defines the tabIndex of the component.\n\t\t * @private\n\t\t */\n\t\t_tabIndex: {\n\t\t\ttype: String,\n\t\t\tdefaultValue: \"0\",\n\t\t\tnoAttribute: true,\n\t\t},\n\n\t\t/**\n\t\t * @since 1.0.0-rc.13\n\t\t * @private\n\t\t */\n\t\t_isTouch: {\n\t\t\ttype: Boolean,\n\t\t},\n\t},\n\tmanagedSlots: true,\n\tslots: /** @lends sap.ui.webcomponents.main.Button.prototype */ {\n\t\t/**\n\t\t * Defines the text of the component.\n\t\t * <br><br>\n\t\t * <b>Note:</b> Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.\n\t\t *\n\t\t * @type {Node[]}\n\t\t * @slot\n\t\t * @public\n\t\t */\n\t\t\"default\": {\n\t\t\ttype: Node,\n\t\t},\n\t},\n\tevents: /** @lends sap.ui.webcomponents.main.Button.prototype */ {\n\n\t\t/**\n\t\t * Fired when the component is activated either with a\n\t\t * mouse/tap or by using the Enter or Space key.\n\t\t * <br><br>\n\t\t * <b>Note:</b> The event will not be fired if the <code>disabled</code>\n\t\t * property is set to <code>true</code>.\n\t\t *\n\t\t * @event\n\t\t * @public\n\t\t * @native\n\t\t */\n\t\tclick: {},\n\t},\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * The <code>ui5-button</code> component represents a simple push button.\n * It enables users to trigger actions by clicking or tapping the <code>ui5-button</code>, or by pressing\n * certain keyboard keys, such as Enter.\n *\n *\n * <h3>Usage</h3>\n *\n * For the <code>ui5-button</code> UI, you can define text, icon, or both. You can also specify\n * whether the text or the icon is displayed first.\n * <br><br>\n * You can choose from a set of predefined types that offer different\n * styling to correspond to the triggered action.\n * <br><br>\n * You can set the <code>ui5-button</code> as enabled or disabled. An enabled\n * <code>ui5-button</code> can be pressed by clicking or tapping it. The button changes\n * its style to provide visual feedback to the user that it is pressed or hovered over with\n * the mouse cursor. A disabled <code>ui5-button</code> appears inactive and cannot be pressed.\n *\n * <h3>CSS Shadow Parts</h3>\n *\n * <ui5-link target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/::part\">CSS Shadow Parts</ui5-link> allow developers to style elements inside the Shadow DOM.\n * <br>\n * The <code>ui5-button</code> exposes the following CSS Shadow Parts:\n * <ul>\n * <li>button - Used to style the native button element</li>\n * </ul>\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/Button\";</code>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.Button\n * @extends sap.ui.webcomponents.base.UI5Element\n * @tagname ui5-button\n * @implements sap.ui.webcomponents.main.IButton\n * @public\n */\nclass Button extends UI5Element {\n\tstatic get metadata() {\n\t\treturn metadata;\n\t}\n\n\tstatic get styles() {\n\t\treturn buttonCss;\n\t}\n\n\tstatic get render() {\n\t\treturn litRender;\n\t}\n\n\tstatic get template() {\n\t\treturn ButtonTemplate;\n\t}\n\n\tstatic get dependencies() {\n\t\treturn [Icon];\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._deactivate = () => {\n\t\t\tif (activeButton) {\n\t\t\t\tactiveButton.active = false;\n\t\t\t}\n\t\t};\n\n\t\tif (!isGlobalHandlerAttached) {\n\t\t\tdocument.addEventListener(\"mouseup\", this._deactivate);\n\n\t\t\tisGlobalHandlerAttached = true;\n\t\t}\n\n\t\tconst handleTouchStartEvent = event => {\n\t\t\tevent.isMarked = \"button\";\n\t\t\tif (this.nonInteractive) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.active = true;\n\t\t};\n\n\t\tthis._ontouchstart = {\n\t\t\thandleEvent: handleTouchStartEvent,\n\t\t\tpassive: true,\n\t\t};\n\t}\n\n\tonEnterDOM() {\n\t\tthis._isTouch = (isPhone() || isTablet()) && !isCombi();\n\t}\n\n\tonBeforeRendering() {\n\t\tconst FormSupport = getFeature(\"FormSupport\");\n\t\tif (this.submits && !FormSupport) {\n\t\t\tconsole.warn(`In order for the \"submits\" property to have effect, you should also: import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";`); // eslint-disable-line\n\t\t}\n\n\t\tthis.iconOnly = this.isIconOnly;\n\t\tthis.hasIcon = !!this.icon;\n\t}\n\n\t_onclick(event) {\n\t\tif (this.nonInteractive) {\n\t\t\treturn;\n\t\t}\n\t\tevent.isMarked = \"button\";\n\t\tconst FormSupport = getFeature(\"FormSupport\");\n\t\tif (FormSupport && this.submits) {\n\t\t\tFormSupport.triggerFormSubmit(this);\n\t\t}\n\n\t\tif (isSafari()) {\n\t\t\tthis.getDomRef().focus();\n\t\t}\n\t}\n\n\t_onmousedown(event) {\n\t\tif (this.nonInteractive || this._isTouch) {\n\t\t\treturn;\n\t\t}\n\n\t\tevent.isMarked = \"button\";\n\t\tthis.active = true;\n\t\tactiveButton = this; // eslint-disable-line\n\t}\n\n\t_ontouchend(event) {\n\t\tthis.active = false;\n\n\t\tif (activeButton) {\n\t\t\tactiveButton.active = false;\n\t\t}\n\t}\n\n\t_onmouseup(event) {\n\t\tevent.isMarked = \"button\";\n\t}\n\n\t_onkeydown(event) {\n\t\tevent.isMarked = \"button\";\n\n\t\tif (isSpace(event) || isEnter(event)) {\n\t\t\tthis.active = true;\n\t\t}\n\t}\n\n\t_onkeyup(event) {\n\t\tif (isSpace(event) || isEnter(event)) {\n\t\t\tthis.active = false;\n\t\t}\n\t}\n\n\t_onfocusout(_event) {\n\t\tif (this.nonInteractive) {\n\t\t\treturn;\n\t\t}\n\t\tthis.active = false;\n\t\tif (isDesktop()) {\n\t\t\tthis.focused = false;\n\t\t}\n\t}\n\n\t_onfocusin(event) {\n\t\tif (this.nonInteractive) {\n\t\t\treturn;\n\t\t}\n\n\t\tevent.isMarked = \"button\";\n\t\tif (isDesktop()) {\n\t\t\tthis.focused = true;\n\t\t}\n\t}\n\n\tget hasButtonType() {\n\t\treturn this.design !== ButtonDesign.Default && this.design !== ButtonDesign.Transparent;\n\t}\n\n\tget iconRole() {\n\t\tif (!this.icon) {\n\t\t\treturn \"\";\n\t\t}\n\n\t\treturn this.showIconTooltip ? \"img\" : \"presentation\";\n\t}\n\n\tget isIconOnly() {\n\t\treturn !isDefaultSlotProvided(this);\n\t}\n\n\tstatic typeTextMappings() {\n\t\treturn {\n\t\t\t\"Positive\": BUTTON_ARIA_TYPE_ACCEPT,\n\t\t\t\"Negative\": BUTTON_ARIA_TYPE_REJECT,\n\t\t\t\"Emphasized\": BUTTON_ARIA_TYPE_EMPHASIZED,\n\t\t};\n\t}\n\n\tget buttonTypeText() {\n\t\treturn Button.i18nBundle.getText(Button.typeTextMappings()[this.design]);\n\t}\n\n\tget tabIndexValue() {\n\t\tconst tabindex = this.getAttribute(\"tabindex\");\n\n\t\tif (tabindex) {\n\t\t\treturn tabindex;\n\t\t}\n\n\t\treturn this.nonInteractive ? \"-1\" : this._tabIndex;\n\t}\n\n\tget showIconTooltip() {\n\t\treturn this.iconOnly && !this.tooltip;\n\t}\n\n\tget ariaLabelText() {\n\t\treturn getEffectiveAriaLabelText(this);\n\t}\n\n\tstatic async onDefine() {\n\t\tButton.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n\t}\n}\n\nButton.define();\n\nexport default Button;\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,4CAA4C;AACnE,OAAOC,SAAS,MAAM,sDAAsD;AAC5E,SAASC,OAAO,EAAEC,OAAO,QAAQ,sCAAsC;AACvE,SAASC,yBAAyB,QAAQ,sDAAsD;AAChG,SAASC,UAAU,QAAQ,kDAAkD;AAC7E,SAASC,aAAa,QAAQ,4CAA4C;AAC1E,SACCC,OAAO,EACPC,QAAQ,EACRC,OAAO,EACPC,SAAS,EACTC,QAAQ,QACF,wCAAwC;AAC/C,OAAOC,qBAAqB,MAAM,4DAA4D;AAC9F,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,cAAc,MAAM,6CAA6C;AACxE,OAAOC,IAAI,MAAM,WAAW;AAE5B,SAASC,uBAAuB,EAAEC,uBAAuB,EAAEC,2BAA2B,QAAQ,mCAAmC;;AAEjI;AACA,OAAOC,SAAS,MAAM,kCAAkC;AAExD,IAAIC,uBAAuB,GAAG,KAAK;AACnC,IAAIC,YAAY,GAAG,IAAI;;AAEvB;AACA;AACA;AACA,MAAMC,QAAQ,GAAG;EAChBC,GAAG,EAAE,YAAY;EACjBC,aAAa,EAAE,IAAI;EACnBC,UAAU,EAAE,wDAAyD;IAEpE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEC,MAAM,EAAE;MACPC,IAAI,EAAEd,YAAY;MAClBe,YAAY,EAAEf,YAAY,CAACgB;IAC5B,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEC,QAAQ,EAAE;MACTH,IAAI,EAAEI;IACP,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEC,IAAI,EAAE;MACLL,IAAI,EAAEM;IACP,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;IACEC,OAAO,EAAE;MACRP,IAAI,EAAEI;IACP,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEI,OAAO,EAAE;MACRR,IAAI,EAAEI;IACP,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEK,OAAO,EAAE;MACRT,IAAI,EAAEM;IACP,CAAC;IAED;AACF;AACA;AACA;IACEI,MAAM,EAAE;MACPV,IAAI,EAAEI;IACP,CAAC;IAED;AACF;AACA;AACA;IACEO,QAAQ,EAAE;MACTX,IAAI,EAAEI;IACP,CAAC;IAED;AACF;AACA;AACA;IACEQ,OAAO,EAAE;MACRZ,IAAI,EAAEI;IACP,CAAC;IAED;AACF;AACA;AACA;IACES,OAAO,EAAE;MACRb,IAAI,EAAEI;IACP,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACEU,cAAc,EAAE;MACfd,IAAI,EAAEM,MAAM;MACZL,YAAY,EAAEc;IACf,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACGC,iBAAiB,EAAE;MACnBhB,IAAI,EAAEM,MAAM;MACZL,YAAY,EAAE;IACf,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEgB,uBAAuB,EAAE;MACxBjB,IAAI,EAAEkB;IACP,CAAC;IAED;AACF;AACA;AACA;IACEC,cAAc,EAAE;MACfnB,IAAI,EAAEI;IACP,CAAC;IAEDgB,aAAa,EAAE;MACdpB,IAAI,EAAEkB;IACP,CAAC;IAED;AACF;AACA;AACA;IACEG,SAAS,EAAE;MACVrB,IAAI,EAAEM,MAAM;MACZL,YAAY,EAAE,GAAG;MACjBqB,WAAW,EAAE;IACd,CAAC;IAED;AACF;AACA;AACA;IACEC,QAAQ,EAAE;MACTvB,IAAI,EAAEI;IACP;EACD,CAAC;EACDoB,YAAY,EAAE,IAAI;EAClBC,KAAK,EAAE,wDAAyD;IAC/D;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,SAAS,EAAE;MACVzB,IAAI,EAAE0B;IACP;EACD,CAAC;EACDC,MAAM,EAAE,wDAAyD;IAEhE;AACF;AACA;AACA;AACA;AACA;AACA;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"},"metadata":{},"sourceType":"module"}