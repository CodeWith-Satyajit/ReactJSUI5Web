{"ast":null,"code":"import { enrichEventWithDetails } from '@ui5/webcomponents-react-base';\nimport { useCallback } from 'react';\nconst getToggleRowExpandedProps = (rowProps, _ref) => {\n  let {\n    row,\n    instance\n  } = _ref;\n  const {\n    onRowExpandChange,\n    isTreeTable,\n    renderRowSubComponent\n  } = instance.webComponentsReactProperties;\n  const onClick = useCallback(e => {\n    e.stopPropagation();\n    e.persist();\n    row.toggleRowExpanded();\n    let column = null;\n    if (!isTreeTable && !renderRowSubComponent) {\n      column = row.cells.find(cell => cell.column.id === row.groupByID).column;\n    }\n    onRowExpandChange(enrichEventWithDetails(e, {\n      row,\n      column\n    }));\n  }, [row, isTreeTable, onRowExpandChange]);\n  return [rowProps, {\n    onClick\n  }];\n};\nexport const useToggleRowExpand = hooks => {\n  hooks.getToggleRowExpandedProps.push(getToggleRowExpandedProps);\n};\nuseToggleRowExpand.pluginName = 'useToggleRowExpand';","map":{"version":3,"names":["enrichEventWithDetails","useCallback","getToggleRowExpandedProps","rowProps","row","instance","onRowExpandChange","isTreeTable","renderRowSubComponent","webComponentsReactProperties","onClick","e","stopPropagation","persist","toggleRowExpanded","column","cells","find","cell","id","groupByID","useToggleRowExpand","hooks","push","pluginName"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/hooks/useToggleRowExpand.js"],"sourcesContent":["import { enrichEventWithDetails } from '@ui5/webcomponents-react-base';\nimport { useCallback } from 'react';\nconst getToggleRowExpandedProps = (rowProps, { row, instance }) => {\n    const { onRowExpandChange, isTreeTable, renderRowSubComponent } = instance.webComponentsReactProperties;\n    const onClick = useCallback((e) => {\n        e.stopPropagation();\n        e.persist();\n        row.toggleRowExpanded();\n        let column = null;\n        if (!isTreeTable && !renderRowSubComponent) {\n            column = row.cells.find((cell) => cell.column.id === row.groupByID).column;\n        }\n        onRowExpandChange(enrichEventWithDetails(e, { row, column }));\n    }, [row, isTreeTable, onRowExpandChange]);\n    return [\n        rowProps,\n        {\n            onClick\n        }\n    ];\n};\nexport const useToggleRowExpand = (hooks) => {\n    hooks.getToggleRowExpandedProps.push(getToggleRowExpandedProps);\n};\nuseToggleRowExpand.pluginName = 'useToggleRowExpand';\n"],"mappings":"AAAA,SAASA,sBAAsB,QAAQ,+BAA+B;AACtE,SAASC,WAAW,QAAQ,OAAO;AACnC,MAAMC,yBAAyB,GAAG,CAACC,QAAQ,WAAwB;EAAA,IAAtB;IAAEC,GAAG;IAAEC;EAAS,CAAC;EAC1D,MAAM;IAAEC,iBAAiB;IAAEC,WAAW;IAAEC;EAAsB,CAAC,GAAGH,QAAQ,CAACI,4BAA4B;EACvG,MAAMC,OAAO,GAAGT,WAAW,CAAEU,CAAC,IAAK;IAC/BA,CAAC,CAACC,eAAe,EAAE;IACnBD,CAAC,CAACE,OAAO,EAAE;IACXT,GAAG,CAACU,iBAAiB,EAAE;IACvB,IAAIC,MAAM,GAAG,IAAI;IACjB,IAAI,CAACR,WAAW,IAAI,CAACC,qBAAqB,EAAE;MACxCO,MAAM,GAAGX,GAAG,CAACY,KAAK,CAACC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACH,MAAM,CAACI,EAAE,KAAKf,GAAG,CAACgB,SAAS,CAAC,CAACL,MAAM;IAC9E;IACAT,iBAAiB,CAACN,sBAAsB,CAACW,CAAC,EAAE;MAAEP,GAAG;MAAEW;IAAO,CAAC,CAAC,CAAC;EACjE,CAAC,EAAE,CAACX,GAAG,EAAEG,WAAW,EAAED,iBAAiB,CAAC,CAAC;EACzC,OAAO,CACHH,QAAQ,EACR;IACIO;EACJ,CAAC,CACJ;AACL,CAAC;AACD,OAAO,MAAMW,kBAAkB,GAAIC,KAAK,IAAK;EACzCA,KAAK,CAACpB,yBAAyB,CAACqB,IAAI,CAACrB,yBAAyB,CAAC;AACnE,CAAC;AACDmB,kBAAkB,CAACG,UAAU,GAAG,oBAAoB"},"metadata":{},"sourceType":"module"}