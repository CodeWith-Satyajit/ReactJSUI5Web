{"ast":null,"code":"import getLocale from \"@ui5/webcomponents-base/dist/locale/getLocale.js\";\nimport getCachedLocaleDataInstance from \"../getCachedLocaleDataInstance.js\";\n\n/**\n * Convert month number to month name (text).\n * If the numbers of the two months are the same you will get the name of the month,\n * otherwise you will get the two names separated by a dash\n *\n * @param firstMonth CalendarDate Month\n * @param lastMonth CalendarDate Month\n * @param calendarType calendar type\n * @returns {String}\n */\nconst convertMonthNumbersToMonthNames = (firstMonth, lastMonth, calendarType) => {\n  const localeData = getCachedLocaleDataInstance(getLocale());\n  const pattern = localeData.getIntervalPattern();\n  const secondaryMonthsNames = localeData.getMonthsStandAlone(\"abbreviated\", calendarType);\n  const secondaryMonthsNamesWide = localeData.getMonthsStandAlone(\"wide\", calendarType);\n  if (firstMonth === lastMonth) {\n    return {\n      text: localeData.getMonths(\"abbreviated\", calendarType)[firstMonth],\n      textInfo: localeData.getMonths(\"wide\", calendarType)[firstMonth]\n    };\n  }\n  return {\n    text: pattern.replace(/\\{0\\}/, secondaryMonthsNames[firstMonth]).replace(/\\{1\\}/, secondaryMonthsNames[lastMonth]),\n    textInfo: pattern.replace(/\\{0\\}/, secondaryMonthsNamesWide[firstMonth]).replace(/\\{1\\}/, secondaryMonthsNamesWide[lastMonth])\n  };\n};\nexport default convertMonthNumbersToMonthNames;","map":{"version":3,"names":["getLocale","getCachedLocaleDataInstance","convertMonthNumbersToMonthNames","firstMonth","lastMonth","calendarType","localeData","pattern","getIntervalPattern","secondaryMonthsNames","getMonthsStandAlone","secondaryMonthsNamesWide","text","getMonths","textInfo","replace"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/node_modules/@ui5/webcomponents-localization/dist/dates/convertMonthNumbersToMonthNames.js"],"sourcesContent":["import getLocale from \"@ui5/webcomponents-base/dist/locale/getLocale.js\";\nimport getCachedLocaleDataInstance from \"../getCachedLocaleDataInstance.js\";\n\n/**\n * Convert month number to month name (text).\n * If the numbers of the two months are the same you will get the name of the month,\n * otherwise you will get the two names separated by a dash\n *\n * @param firstMonth CalendarDate Month\n * @param lastMonth CalendarDate Month\n * @param calendarType calendar type\n * @returns {String}\n */\nconst convertMonthNumbersToMonthNames = (firstMonth, lastMonth, calendarType) => {\n\tconst localeData = getCachedLocaleDataInstance(getLocale());\n\tconst pattern = localeData.getIntervalPattern();\n\tconst secondaryMonthsNames = localeData.getMonthsStandAlone(\"abbreviated\", calendarType);\n\tconst secondaryMonthsNamesWide = localeData.getMonthsStandAlone(\"wide\", calendarType);\n\n\tif (firstMonth === lastMonth) {\n\t\treturn {\n\t\t\ttext: localeData.getMonths(\"abbreviated\", calendarType)[firstMonth],\n\t\t\ttextInfo: localeData.getMonths(\"wide\", calendarType)[firstMonth],\n\t\t};\n\t}\n\n\treturn {\n\t\ttext: pattern.replace(/\\{0\\}/, secondaryMonthsNames[firstMonth]).replace(/\\{1\\}/, secondaryMonthsNames[lastMonth]),\n\t\ttextInfo: pattern.replace(/\\{0\\}/, secondaryMonthsNamesWide[firstMonth]).replace(/\\{1\\}/, secondaryMonthsNamesWide[lastMonth]),\n\t};\n};\n\nexport default convertMonthNumbersToMonthNames;\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,kDAAkD;AACxE,OAAOC,2BAA2B,MAAM,mCAAmC;;AAE3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,+BAA+B,GAAG,CAACC,UAAU,EAAEC,SAAS,EAAEC,YAAY,KAAK;EAChF,MAAMC,UAAU,GAAGL,2BAA2B,CAACD,SAAS,EAAE,CAAC;EAC3D,MAAMO,OAAO,GAAGD,UAAU,CAACE,kBAAkB,EAAE;EAC/C,MAAMC,oBAAoB,GAAGH,UAAU,CAACI,mBAAmB,CAAC,aAAa,EAAEL,YAAY,CAAC;EACxF,MAAMM,wBAAwB,GAAGL,UAAU,CAACI,mBAAmB,CAAC,MAAM,EAAEL,YAAY,CAAC;EAErF,IAAIF,UAAU,KAAKC,SAAS,EAAE;IAC7B,OAAO;MACNQ,IAAI,EAAEN,UAAU,CAACO,SAAS,CAAC,aAAa,EAAER,YAAY,CAAC,CAACF,UAAU,CAAC;MACnEW,QAAQ,EAAER,UAAU,CAACO,SAAS,CAAC,MAAM,EAAER,YAAY,CAAC,CAACF,UAAU;IAChE,CAAC;EACF;EAEA,OAAO;IACNS,IAAI,EAAEL,OAAO,CAACQ,OAAO,CAAC,OAAO,EAAEN,oBAAoB,CAACN,UAAU,CAAC,CAAC,CAACY,OAAO,CAAC,OAAO,EAAEN,oBAAoB,CAACL,SAAS,CAAC,CAAC;IAClHU,QAAQ,EAAEP,OAAO,CAACQ,OAAO,CAAC,OAAO,EAAEJ,wBAAwB,CAACR,UAAU,CAAC,CAAC,CAACY,OAAO,CAAC,OAAO,EAAEJ,wBAAwB,CAACP,SAAS,CAAC;EAC9H,CAAC;AACF,CAAC;AAED,eAAeF,+BAA+B"},"metadata":{},"sourceType":"module"}