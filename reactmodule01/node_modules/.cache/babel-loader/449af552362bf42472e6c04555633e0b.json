{"ast":null,"code":"/**\n * Handles drag and drop event listeners on document.body.\n * Ensures that there is only 1 listener per type attached (drag, drop, leave). Event listeners will only be attached when\n * there is at least 1 UploadCollection subscribed.\n */\n\nimport EventProvider from \"@ui5/webcomponents-base/dist/EventProvider.js\";\nimport UploadCollectionDnDOverlayMode from \"../types/UploadCollectionDnDMode.js\";\nconst draggingFiles = event => {\n  return Array.from(event.dataTransfer.types).includes(\"Files\");\n};\nconst eventProvider = new EventProvider();\nconst EVENT = \"UploadCollectionBodyDndEvent\";\nlet lastDragEnter = null;\nlet globalHandlersAttached = false;\nconst ondragenter = event => {\n  if (!draggingFiles(event)) {\n    return;\n  }\n  lastDragEnter = event.target;\n  eventProvider.fireEvent(EVENT, {\n    mode: UploadCollectionDnDOverlayMode.Drag\n  });\n};\nconst ondragleave = event => {\n  if (lastDragEnter === event.target) {\n    eventProvider.fireEvent(EVENT, {\n      mode: UploadCollectionDnDOverlayMode.None\n    });\n  }\n};\nconst ondrop = event => {\n  eventProvider.fireEvent(EVENT, {\n    mode: UploadCollectionDnDOverlayMode.None\n  });\n};\nconst ondragover = event => {\n  event.preventDefault();\n};\nconst attachGlobalHandlers = () => {\n  document.body.addEventListener(\"dragenter\", ondragenter);\n  document.body.addEventListener(\"dragleave\", ondragleave);\n  document.body.addEventListener(\"drop\", ondrop);\n  document.body.addEventListener(\"dragover\", ondragover);\n};\nconst detachGlobalHandlers = () => {\n  document.body.removeEventListener(\"dragenter\", ondragenter);\n  document.body.removeEventListener(\"dragleave\", ondragleave);\n  document.body.removeEventListener(\"drop\", ondrop);\n  document.body.removeEventListener(\"dragover\", ondragover);\n  globalHandlersAttached = false;\n};\nconst attachBodyDnDHandler = handler => {\n  eventProvider.attachEvent(EVENT, handler);\n  if (!globalHandlersAttached) {\n    attachGlobalHandlers();\n    globalHandlersAttached = true;\n  }\n};\nconst detachBodyDnDHandler = handler => {\n  eventProvider.detachEvent(EVENT, handler);\n  if (!eventProvider.hasListeners(EVENT)) {\n    detachGlobalHandlers();\n  }\n};\nexport { attachBodyDnDHandler, detachBodyDnDHandler, draggingFiles };","map":{"version":3,"names":["EventProvider","UploadCollectionDnDOverlayMode","draggingFiles","event","Array","from","dataTransfer","types","includes","eventProvider","EVENT","lastDragEnter","globalHandlersAttached","ondragenter","target","fireEvent","mode","Drag","ondragleave","None","ondrop","ondragover","preventDefault","attachGlobalHandlers","document","body","addEventListener","detachGlobalHandlers","removeEventListener","attachBodyDnDHandler","handler","attachEvent","detachBodyDnDHandler","detachEvent","hasListeners"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/node_modules/@ui5/webcomponents-fiori/dist/upload-utils/UploadCollectionBodyDnD.js"],"sourcesContent":["/**\n * Handles drag and drop event listeners on document.body.\n * Ensures that there is only 1 listener per type attached (drag, drop, leave). Event listeners will only be attached when\n * there is at least 1 UploadCollection subscribed.\n */\n\nimport EventProvider from \"@ui5/webcomponents-base/dist/EventProvider.js\";\nimport UploadCollectionDnDOverlayMode from \"../types/UploadCollectionDnDMode.js\";\n\nconst draggingFiles = event => {\n\treturn Array.from(event.dataTransfer.types).includes(\"Files\");\n};\n\nconst eventProvider = new EventProvider();\nconst EVENT = \"UploadCollectionBodyDndEvent\";\nlet lastDragEnter = null;\nlet globalHandlersAttached = false;\n\nconst ondragenter = event => {\n\tif (!draggingFiles(event)) {\n\t\treturn;\n\t}\n\n\tlastDragEnter = event.target;\n\teventProvider.fireEvent(EVENT, { mode: UploadCollectionDnDOverlayMode.Drag });\n};\n\nconst ondragleave = event => {\n\tif (lastDragEnter === event.target) {\n\t\teventProvider.fireEvent(EVENT, { mode: UploadCollectionDnDOverlayMode.None });\n\t}\n};\n\nconst ondrop = event => {\n\teventProvider.fireEvent(EVENT, { mode: UploadCollectionDnDOverlayMode.None });\n};\n\nconst ondragover = event => {\n\tevent.preventDefault();\n};\n\nconst attachGlobalHandlers = () => {\n\tdocument.body.addEventListener(\"dragenter\", ondragenter);\n\tdocument.body.addEventListener(\"dragleave\", ondragleave);\n\tdocument.body.addEventListener(\"drop\", ondrop);\n\tdocument.body.addEventListener(\"dragover\", ondragover);\n};\n\nconst detachGlobalHandlers = () => {\n\tdocument.body.removeEventListener(\"dragenter\", ondragenter);\n\tdocument.body.removeEventListener(\"dragleave\", ondragleave);\n\tdocument.body.removeEventListener(\"drop\", ondrop);\n\tdocument.body.removeEventListener(\"dragover\", ondragover);\n\tglobalHandlersAttached = false;\n};\n\nconst attachBodyDnDHandler = handler => {\n\teventProvider.attachEvent(EVENT, handler);\n\n\tif (!globalHandlersAttached) {\n\t\tattachGlobalHandlers();\n\t\tglobalHandlersAttached = true;\n\t}\n};\n\nconst detachBodyDnDHandler = handler => {\n\teventProvider.detachEvent(EVENT, handler);\n\n\tif (!eventProvider.hasListeners(EVENT)) {\n\t\tdetachGlobalHandlers();\n\t}\n};\n\nexport {\n\tattachBodyDnDHandler,\n\tdetachBodyDnDHandler,\n\tdraggingFiles,\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,aAAa,MAAM,+CAA+C;AACzE,OAAOC,8BAA8B,MAAM,qCAAqC;AAEhF,MAAMC,aAAa,GAAGC,KAAK,IAAI;EAC9B,OAAOC,KAAK,CAACC,IAAI,CAACF,KAAK,CAACG,YAAY,CAACC,KAAK,CAAC,CAACC,QAAQ,CAAC,OAAO,CAAC;AAC9D,CAAC;AAED,MAAMC,aAAa,GAAG,IAAIT,aAAa,EAAE;AACzC,MAAMU,KAAK,GAAG,8BAA8B;AAC5C,IAAIC,aAAa,GAAG,IAAI;AACxB,IAAIC,sBAAsB,GAAG,KAAK;AAElC,MAAMC,WAAW,GAAGV,KAAK,IAAI;EAC5B,IAAI,CAACD,aAAa,CAACC,KAAK,CAAC,EAAE;IAC1B;EACD;EAEAQ,aAAa,GAAGR,KAAK,CAACW,MAAM;EAC5BL,aAAa,CAACM,SAAS,CAACL,KAAK,EAAE;IAAEM,IAAI,EAAEf,8BAA8B,CAACgB;EAAK,CAAC,CAAC;AAC9E,CAAC;AAED,MAAMC,WAAW,GAAGf,KAAK,IAAI;EAC5B,IAAIQ,aAAa,KAAKR,KAAK,CAACW,MAAM,EAAE;IACnCL,aAAa,CAACM,SAAS,CAACL,KAAK,EAAE;MAAEM,IAAI,EAAEf,8BAA8B,CAACkB;IAAK,CAAC,CAAC;EAC9E;AACD,CAAC;AAED,MAAMC,MAAM,GAAGjB,KAAK,IAAI;EACvBM,aAAa,CAACM,SAAS,CAACL,KAAK,EAAE;IAAEM,IAAI,EAAEf,8BAA8B,CAACkB;EAAK,CAAC,CAAC;AAC9E,CAAC;AAED,MAAME,UAAU,GAAGlB,KAAK,IAAI;EAC3BA,KAAK,CAACmB,cAAc,EAAE;AACvB,CAAC;AAED,MAAMC,oBAAoB,GAAG,MAAM;EAClCC,QAAQ,CAACC,IAAI,CAACC,gBAAgB,CAAC,WAAW,EAAEb,WAAW,CAAC;EACxDW,QAAQ,CAACC,IAAI,CAACC,gBAAgB,CAAC,WAAW,EAAER,WAAW,CAAC;EACxDM,QAAQ,CAACC,IAAI,CAACC,gBAAgB,CAAC,MAAM,EAAEN,MAAM,CAAC;EAC9CI,QAAQ,CAACC,IAAI,CAACC,gBAAgB,CAAC,UAAU,EAAEL,UAAU,CAAC;AACvD,CAAC;AAED,MAAMM,oBAAoB,GAAG,MAAM;EAClCH,QAAQ,CAACC,IAAI,CAACG,mBAAmB,CAAC,WAAW,EAAEf,WAAW,CAAC;EAC3DW,QAAQ,CAACC,IAAI,CAACG,mBAAmB,CAAC,WAAW,EAAEV,WAAW,CAAC;EAC3DM,QAAQ,CAACC,IAAI,CAACG,mBAAmB,CAAC,MAAM,EAAER,MAAM,CAAC;EACjDI,QAAQ,CAACC,IAAI,CAACG,mBAAmB,CAAC,UAAU,EAAEP,UAAU,CAAC;EACzDT,sBAAsB,GAAG,KAAK;AAC/B,CAAC;AAED,MAAMiB,oBAAoB,GAAGC,OAAO,IAAI;EACvCrB,aAAa,CAACsB,WAAW,CAACrB,KAAK,EAAEoB,OAAO,CAAC;EAEzC,IAAI,CAAClB,sBAAsB,EAAE;IAC5BW,oBAAoB,EAAE;IACtBX,sBAAsB,GAAG,IAAI;EAC9B;AACD,CAAC;AAED,MAAMoB,oBAAoB,GAAGF,OAAO,IAAI;EACvCrB,aAAa,CAACwB,WAAW,CAACvB,KAAK,EAAEoB,OAAO,CAAC;EAEzC,IAAI,CAACrB,aAAa,CAACyB,YAAY,CAACxB,KAAK,CAAC,EAAE;IACvCiB,oBAAoB,EAAE;EACvB;AACD,CAAC;AAED,SACCE,oBAAoB,EACpBG,oBAAoB,EACpB9B,aAAa"},"metadata":{},"sourceType":"module"}