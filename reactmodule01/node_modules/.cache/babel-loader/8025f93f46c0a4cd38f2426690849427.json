{"ast":null,"code":"import setToArray from \"./util/setToArray.js\";\nimport getSharedResource from \"./getSharedResource.js\";\nimport { getCurrentRuntimeIndex, compareRuntimes, getAllRuntimes } from \"./Runtimes.js\";\nconst Tags = getSharedResource(\"Tags\", new Map());\nconst Definitions = new Set();\nlet Failures = {};\nlet failureTimeout;\nconst UNKNOWN_RUNTIME = \"unknown\";\nconst registerTag = tag => {\n  Definitions.add(tag);\n  Tags.set(tag, getCurrentRuntimeIndex());\n};\nconst isTagRegistered = tag => {\n  return Definitions.has(tag);\n};\nconst getAllRegisteredTags = () => {\n  return setToArray(Definitions);\n};\nconst recordTagRegistrationFailure = tag => {\n  let tagRegRuntimeIndex = Tags.get(tag);\n  if (tagRegRuntimeIndex === undefined) {\n    tagRegRuntimeIndex = UNKNOWN_RUNTIME; // If the tag is taken, but not registered in Tags, then a version before 1.1.0 defined it => use the \"unknown\" key\n  }\n\n  Failures[tagRegRuntimeIndex] = Failures[tagRegRuntimeIndex] || new Set();\n  Failures[tagRegRuntimeIndex].add(tag);\n  if (!failureTimeout) {\n    failureTimeout = setTimeout(() => {\n      displayFailedRegistrations();\n      Failures = {};\n      failureTimeout = undefined;\n    }, 1000);\n  }\n};\nconst displayFailedRegistrations = () => {\n  const allRuntimes = getAllRuntimes();\n  const currentRuntimeIndex = getCurrentRuntimeIndex();\n  const currentRuntime = allRuntimes[currentRuntimeIndex];\n  let message = `Multiple UI5 Web Components instances detected.`;\n  if (allRuntimes.length > 1) {\n    message = `${message}\\nLoading order (versions before 1.1.0 not listed): ${allRuntimes.map(runtime => `\\n${runtime.description}`).join(\"\")}`;\n  }\n  Object.keys(Failures).forEach(otherRuntimeIndex => {\n    let comparison;\n    let otherRuntime;\n    if (otherRuntimeIndex === UNKNOWN_RUNTIME) {\n      // version < 1.1.0 defined the tag\n      comparison = 1; // the current runtime is considered newer\n      otherRuntime = {\n        description: `Older unknown runtime`\n      };\n    } else {\n      comparison = compareRuntimes(currentRuntimeIndex, otherRuntimeIndex);\n      otherRuntime = allRuntimes[otherRuntimeIndex];\n    }\n    let compareWord;\n    if (comparison > 0) {\n      compareWord = \"an older\";\n    } else if (comparison < 0) {\n      compareWord = \"a newer\";\n    } else {\n      compareWord = \"the same\";\n    }\n    message = `${message}\\n\\n\"${currentRuntime.description}\" failed to define ${Failures[otherRuntimeIndex].size} tag(s) as they were defined by a runtime of ${compareWord} version \"${otherRuntime.description}\": ${setToArray(Failures[otherRuntimeIndex]).sort().join(\", \")}.`;\n    if (comparison > 0) {\n      message = `${message}\\nWARNING! If your code uses features of the above web components, unavailable in ${otherRuntime.description}, it might not work as expected!`;\n    } else {\n      message = `${message}\\nSince the above web components were defined by the same or newer version runtime, they should be compatible with your code.`;\n    }\n  });\n  message = `${message}\\n\\nTo prevent other runtimes from defining tags that you use, consider using scoping or have third-party libraries use scoping: https://github.com/SAP/ui5-webcomponents/blob/main/docs/2-advanced/03-scoping.md.`;\n  console.warn(message); // eslint-disable-line\n};\n\nexport { registerTag, isTagRegistered, getAllRegisteredTags, recordTagRegistrationFailure };","map":{"version":3,"names":["setToArray","getSharedResource","getCurrentRuntimeIndex","compareRuntimes","getAllRuntimes","Tags","Map","Definitions","Set","Failures","failureTimeout","UNKNOWN_RUNTIME","registerTag","tag","add","set","isTagRegistered","has","getAllRegisteredTags","recordTagRegistrationFailure","tagRegRuntimeIndex","get","undefined","setTimeout","displayFailedRegistrations","allRuntimes","currentRuntimeIndex","currentRuntime","message","length","map","runtime","description","join","Object","keys","forEach","otherRuntimeIndex","comparison","otherRuntime","compareWord","size","sort","console","warn"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/node_modules/@ui5/webcomponents-base/dist/CustomElementsRegistry.js"],"sourcesContent":["import setToArray from \"./util/setToArray.js\";\nimport getSharedResource from \"./getSharedResource.js\";\nimport { getCurrentRuntimeIndex, compareRuntimes, getAllRuntimes } from \"./Runtimes.js\";\n\nconst Tags = getSharedResource(\"Tags\", new Map());\n\nconst Definitions = new Set();\nlet Failures = {};\nlet failureTimeout;\n\nconst UNKNOWN_RUNTIME = \"unknown\";\n\nconst registerTag = tag => {\n\tDefinitions.add(tag);\n\tTags.set(tag, getCurrentRuntimeIndex());\n};\n\nconst isTagRegistered = tag => {\n\treturn Definitions.has(tag);\n};\n\nconst getAllRegisteredTags = () => {\n\treturn setToArray(Definitions);\n};\n\nconst recordTagRegistrationFailure = tag => {\n\tlet tagRegRuntimeIndex = Tags.get(tag);\n\tif (tagRegRuntimeIndex === undefined) {\n\t\ttagRegRuntimeIndex = UNKNOWN_RUNTIME; // If the tag is taken, but not registered in Tags, then a version before 1.1.0 defined it => use the \"unknown\" key\n\t}\n\tFailures[tagRegRuntimeIndex] = Failures[tagRegRuntimeIndex] || new Set();\n\tFailures[tagRegRuntimeIndex].add(tag);\n\n\tif (!failureTimeout) {\n\t\tfailureTimeout = setTimeout(() => {\n\t\t\tdisplayFailedRegistrations();\n\t\t\tFailures = {};\n\t\t\tfailureTimeout = undefined;\n\t\t}, 1000);\n\t}\n};\n\nconst displayFailedRegistrations = () => {\n\tconst allRuntimes = getAllRuntimes();\n\tconst currentRuntimeIndex = getCurrentRuntimeIndex();\n\tconst currentRuntime = allRuntimes[currentRuntimeIndex];\n\n\tlet message = `Multiple UI5 Web Components instances detected.`;\n\n\tif (allRuntimes.length > 1) {\n\t\tmessage = `${message}\\nLoading order (versions before 1.1.0 not listed): ${allRuntimes.map(runtime => `\\n${runtime.description}`).join(\"\")}`;\n\t}\n\n\tObject.keys(Failures).forEach(otherRuntimeIndex => {\n\t\tlet comparison;\n\t\tlet otherRuntime;\n\n\t\tif (otherRuntimeIndex === UNKNOWN_RUNTIME) { // version < 1.1.0 defined the tag\n\t\t\tcomparison = 1; // the current runtime is considered newer\n\t\t\totherRuntime = {\n\t\t\t\tdescription: `Older unknown runtime`,\n\t\t\t};\n\t\t} else {\n\t\t\tcomparison = compareRuntimes(currentRuntimeIndex, otherRuntimeIndex);\n\t\t\totherRuntime = allRuntimes[otherRuntimeIndex];\n\t\t}\n\n\t\tlet compareWord;\n\t\tif (comparison > 0) {\n\t\t\tcompareWord = \"an older\";\n\t\t} else if (comparison < 0) {\n\t\t\tcompareWord = \"a newer\";\n\t\t} else {\n\t\t\tcompareWord = \"the same\";\n\t\t}\n\t\tmessage = `${message}\\n\\n\"${currentRuntime.description}\" failed to define ${Failures[otherRuntimeIndex].size} tag(s) as they were defined by a runtime of ${compareWord} version \"${otherRuntime.description}\": ${setToArray(Failures[otherRuntimeIndex]).sort().join(\", \")}.`;\n\n\t\tif (comparison > 0) {\n\t\t\tmessage = `${message}\\nWARNING! If your code uses features of the above web components, unavailable in ${otherRuntime.description}, it might not work as expected!`;\n\t\t} else {\n\t\t\tmessage = `${message}\\nSince the above web components were defined by the same or newer version runtime, they should be compatible with your code.`;\n\t\t}\n\t});\n\n\tmessage = `${message}\\n\\nTo prevent other runtimes from defining tags that you use, consider using scoping or have third-party libraries use scoping: https://github.com/SAP/ui5-webcomponents/blob/main/docs/2-advanced/03-scoping.md.`;\n\n\tconsole.warn(message); // eslint-disable-line\n};\n\nexport {\n\tregisterTag,\n\tisTagRegistered,\n\tgetAllRegisteredTags,\n\trecordTagRegistrationFailure,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}