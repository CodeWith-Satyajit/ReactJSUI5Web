{"ast":null,"code":"import { enrichEventWithDetails } from '@ui5/webcomponents-react-base';\nimport { useCallback, useState } from 'react';\nconst getColumnId = column => {\n  return typeof column.accessor === 'string' ? column.accessor : column.id;\n};\nexport const useDragAndDrop = (onColumnsReorder, isRtl, setColumnOrder, columnOrder, resizeInfo, columns) => {\n  const [dragOver, setDragOver] = useState('');\n  const handleDragStart = useCallback(e => {\n    if (resizeInfo.isResizingColumn || !e.target.draggable) {\n      e.preventDefault();\n      return;\n    }\n    e.dataTransfer.setData('text', e.currentTarget.dataset.columnId);\n  }, [resizeInfo.isResizingColumn]);\n  const handleDragOver = useCallback(e => {\n    e.preventDefault();\n  }, []);\n  const handleDragEnter = useCallback(e => {\n    setDragOver(e.currentTarget.dataset.columnId);\n  }, []);\n  const handleOnDrop = useCallback(e => {\n    setDragOver('');\n    const droppedColId = e.currentTarget.dataset.columnId;\n    const draggedColId = e.dataTransfer.getData('text');\n    if (droppedColId === draggedColId) return;\n    const internalColumnOrder = columnOrder.length > 0 ? columnOrder : columns.map(col => getColumnId(col));\n    const droppedColIdx = internalColumnOrder.findIndex(col => col === droppedColId);\n    const draggedColIdx = internalColumnOrder.findIndex(col => col === draggedColId);\n    const tempCols = [...internalColumnOrder];\n    const targetIndex = droppedColIdx > draggedColIdx ? isRtl ? droppedColIdx : droppedColIdx - 1 : droppedColIdx;\n    tempCols.splice(targetIndex, 0, tempCols.splice(draggedColIdx, 1)[0]);\n    setColumnOrder(tempCols);\n    const columnsNewOrder = tempCols.map(tempColId => columns.find(col => getColumnId(col) === tempColId));\n    onColumnsReorder(enrichEventWithDetails(e, {\n      columnsNewOrder,\n      column: columns[draggedColIdx]\n    }));\n  }, [columnOrder, onColumnsReorder, columns]);\n  const handleOnDragEnd = useCallback(() => {\n    setDragOver('');\n  }, [dragOver]);\n  return [dragOver, handleDragEnter, handleDragStart, handleDragOver, handleOnDrop, handleOnDragEnd];\n};","map":{"version":3,"names":["enrichEventWithDetails","useCallback","useState","getColumnId","column","accessor","id","useDragAndDrop","onColumnsReorder","isRtl","setColumnOrder","columnOrder","resizeInfo","columns","dragOver","setDragOver","handleDragStart","e","isResizingColumn","target","draggable","preventDefault","dataTransfer","setData","currentTarget","dataset","columnId","handleDragOver","handleDragEnter","handleOnDrop","droppedColId","draggedColId","getData","internalColumnOrder","length","map","col","droppedColIdx","findIndex","draggedColIdx","tempCols","targetIndex","splice","columnsNewOrder","tempColId","find","handleOnDragEnd"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/hooks/useDragAndDrop.js"],"sourcesContent":["import { enrichEventWithDetails } from '@ui5/webcomponents-react-base';\nimport { useCallback, useState } from 'react';\nconst getColumnId = (column) => {\n    return typeof column.accessor === 'string' ? column.accessor : column.id;\n};\nexport const useDragAndDrop = (onColumnsReorder, isRtl, setColumnOrder, columnOrder, resizeInfo, columns) => {\n    const [dragOver, setDragOver] = useState('');\n    const handleDragStart = useCallback((e) => {\n        if (resizeInfo.isResizingColumn || !e.target.draggable) {\n            e.preventDefault();\n            return;\n        }\n        e.dataTransfer.setData('text', e.currentTarget.dataset.columnId);\n    }, [resizeInfo.isResizingColumn]);\n    const handleDragOver = useCallback((e) => {\n        e.preventDefault();\n    }, []);\n    const handleDragEnter = useCallback((e) => {\n        setDragOver(e.currentTarget.dataset.columnId);\n    }, []);\n    const handleOnDrop = useCallback((e) => {\n        setDragOver('');\n        const droppedColId = e.currentTarget.dataset.columnId;\n        const draggedColId = e.dataTransfer.getData('text');\n        if (droppedColId === draggedColId)\n            return;\n        const internalColumnOrder = columnOrder.length > 0 ? columnOrder : columns.map((col) => getColumnId(col));\n        const droppedColIdx = internalColumnOrder.findIndex((col) => col === droppedColId);\n        const draggedColIdx = internalColumnOrder.findIndex((col) => col === draggedColId);\n        const tempCols = [...internalColumnOrder];\n        const targetIndex = droppedColIdx > draggedColIdx ? (isRtl ? droppedColIdx : droppedColIdx - 1) : droppedColIdx;\n        tempCols.splice(targetIndex, 0, tempCols.splice(draggedColIdx, 1)[0]);\n        setColumnOrder(tempCols);\n        const columnsNewOrder = tempCols.map((tempColId) => columns.find((col) => getColumnId(col) === tempColId));\n        onColumnsReorder(enrichEventWithDetails(e, {\n            columnsNewOrder,\n            column: columns[draggedColIdx]\n        }));\n    }, [columnOrder, onColumnsReorder, columns]);\n    const handleOnDragEnd = useCallback(() => {\n        setDragOver('');\n    }, [dragOver]);\n    return [dragOver, handleDragEnter, handleDragStart, handleDragOver, handleOnDrop, handleOnDragEnd];\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}