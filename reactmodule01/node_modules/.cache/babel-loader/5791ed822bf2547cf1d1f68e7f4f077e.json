{"ast":null,"code":"import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport SideContentPosition from \"./types/SideContentPosition.js\";\nimport SideContentVisibility from \"./types/SideContentVisibility.js\";\nimport SideContentFallDown from \"./types/SideContentFallDown.js\";\nimport DynamicSideContentTemplate from \"./generated/templates/DynamicSideContentTemplate.lit.js\";\n\n// Styles\nimport DynamicSideContentCss from \"./generated/themes/DynamicSideContent.css.js\";\n\n// Texts\nimport { DSC_SIDE_ARIA_LABEL } from \"./generated/i18n/i18n-defaults.js\";\n\n// Breakpoint-related constants\nconst S_M_BREAKPOINT = 720,\n  // Breakpoint between S and M screen sizes\n  M_L_BREAKPOINT = 1024,\n  // Breakpoint between M and L screen sizes\n  L_XL_BREAKPOINT = 1440,\n  // Breakpoint between L and XL screen sizes\n  MINIMUM_WIDTH_BREAKPOINT = 960; // Minimum width of the control where main and side contents are side by side\n\n/**\n * @public\n */\nconst metadata = {\n  tag: \"ui5-dynamic-side-content\",\n  managedSlots: true,\n  properties: /** @lends sap.ui.webcomponents.fiori.DynamicSideContent.prototype */{\n    /**\n     * Defines the visibility of the main content.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     *\n     */\n    hideMainContent: {\n      type: Boolean\n    },\n    /**\n     * Defines the visibility of the side content.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     *\n     */\n    hideSideContent: {\n      type: Boolean\n    },\n    /**\n     * Defines whether the side content is positioned before the main content (left side\n     * in LTR mode), or after the the main content (right side in LTR mode).\n     *\n     * <br><br>\n     * <b>The available values are:</b>\n     *\n     * <ul>\n     * <li><code>Start</code></li>\n     * <li><code>End</code></li>\n     * </ul>\n     *\n     * @type {sap.ui.webcomponents.fiori.types.SideContentPosition}\n     * @defaultvalue \"End\"\n     * @public\n     *\n     */\n    sideContentPosition: {\n      type: SideContentPosition,\n      defaultValue: SideContentPosition.End\n    },\n    /**\n     * Defines on which breakpoints the side content is visible.\n     *\n     * <br><br>\n     * <b>The available values are:</b>\n     *\n     * <ul>\n     * <li><code>AlwaysShow</code></li>\n     * <li><code>ShowAboveL</code></li>\n     * <li><code>ShowAboveM</code></li>\n     * <li><code>ShowAboveS</code></li>\n     * <li><code>NeverShow</code></li>\n     * </ul>\n     *\n     * @type {sap.ui.webcomponents.fiori.types.SideContentVisibility}\n     * @defaultvalue \"ShowAboveS\"\n     * @public\n     *\n     */\n    sideContentVisibility: {\n      type: SideContentVisibility,\n      defaultValue: SideContentVisibility.ShowAboveS\n    },\n    /**\n     * Defines on which breakpoints the side content falls down below the main content.\n     *\n     * <br><br>\n     * <b>The available values are:</b>\n     *\n     * <ul>\n     * <li><code>BelowXL</code></li>\n     * <li><code>BelowL</code></li>\n     * <li><code>BelowM</code></li>\n     * <li><code>OnMinimumWidth</code></li>\n     * </ul>\n     *\n     * @type {sap.ui.webcomponents.fiori.types.SideContentFallDown}\n     * @defaultvalue \"OnMinimumWidth\"\n     * @public\n     *\n     */\n    sideContentFallDown: {\n      type: SideContentFallDown,\n      defaultValue: SideContentFallDown.OnMinimumWidth\n    },\n    /**\n     * Defines whether the component is in equal split mode. In this mode, the side and\n     * the main content take 50:50 percent of the container on all screen sizes\n     * except for phone, where the main and side contents are switching visibility\n     * using the toggle method.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     *\n     */\n    equalSplit: {\n      type: Boolean\n    },\n    /**\n    \t * @private\n     */\n    _mcSpan: {\n      type: String,\n      defaultValue: \"0\",\n      noAttribute: true\n    },\n    /**\n    \t * @private\n     */\n    _scSpan: {\n      type: String,\n      defaultValue: \"0\",\n      noAttribute: true\n    },\n    /**\n    \t * @private\n     */\n    _toggled: {\n      type: Boolean,\n      noAttribute: true\n    },\n    /**\n    \t * @private\n     */\n    _currentBreakpoint: {\n      type: String,\n      noAttribute: true\n    }\n  },\n  slots: /** @lends sap.ui.webcomponents.fiori.DynamicSideContent.prototype */{\n    /**\n     * Defines the main content.\n     *\n     * @type {HTMLElement[]}\n     * @slot\n     * @public\n     */\n    \"default\": {\n      type: HTMLElement\n    },\n    /**\n     * Defines the side content.\n     *\n     * @type {HTMLElement[]}\n     * @slot\n     * @public\n     */\n    \"sideContent\": {\n      type: HTMLElement\n    }\n  },\n  events: /** @lends sap.ui.webcomponents.fiori.DynamicSideContent.prototype */{\n    /**\n     * Fires when the current breakpoint has been changed.\n     * @event sap.ui.webcomponents.fiori.DynamicSideContent#layout-change\n     * @param {string} currentBreakpoint the current breakpoint.\n     * @param {string} previousBreakpoint the breakpoint that was active before change to current breakpoint.\n     * @param {boolean} mainContentVisible visibility of the main content.\n     * @param {boolean} sideContentVisible visibility of the side content.\n     * @public\n     */\n    \"layout-change\": {\n      detail: {\n        currentBreakpoint: {\n          type: String\n        },\n        previousBreakpoint: {\n          type: String\n        },\n        mainContentVisible: {\n          type: Boolean\n        },\n        sideContentVisible: {\n          type: Boolean\n        }\n      }\n    }\n  }\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * The DynamicSideContent (<code>ui5-dynamic-side-content</code>) is a layout component that allows additional content\n * to be displayed in a way that flexibly adapts to different screen sizes. The side\n * content appears in a container next to or directly below the main content\n * (it doesn't overlay). When the side content is triggered, the main content becomes\n * narrower (if appearing side-by-side). The side content contains a separate scrollbar\n * when appearing next to the main content.\n *\n *\n * <h3>Usage</h3>\n *\n * <i>When to use?</i>\n *\n * Use this component if you want to display relevant information that is not critical\n * for users to complete a task. Users should have access to all the key functions and\n * critical information in the app even if they do not see the side content. This is\n * important because on smaller screen sizes it may be difficult to display the side\n * content in a way that is easily accessible for the user.\n *\n * <i>When not to use?</i>\n *\n * Don't use it if you want to display navigation or critical information that prevents\n * users from completing a task when they have no access to the side content.\n *\n *\n * <h3>Responsive Behavior</h3>\n *\n * Screen width > 1440px\n *\n * <ul><li>Main vs. side content ratio is 75 vs. 25 percent (with a minimum of 320px\n * each).</li>\n * <li>If the application defines a trigger, the side content can be hidden.</li></ul>\n *\n * Screen width <= 1440px and > 1024px\n *\n * <ul><li>Main vs. side content ratio is 66.666 vs. 33.333 percent (with a minimum of\n * 320px each). If the side content width falls below 320 px, it automatically slides\n * under the main content, unless the app development team specifies that it should\n * disappear.</li></ul>\n *\n * Screen width <= 1024px and > 720px\n *\n * <ul><li>The side content ratio is fixed to 340px, and the main content takes the rest\n * of the width. Only if the <code>sideContentFallDown</code> is set to <code>OnMinimumWidth</code>\n * and screen width is <= 960px and > 720px the side content falls below the main content.</li></ul>\n *\n * Screen width <= 720px (for example on a mobile device)\n *\n * <ul><li>In this case, the side content automatically disappears from the screen (unless\n * specified to stay under the content by setting of <code>sideContentVisibility</code>\n * property to <code>AlwaysShow</code>) and can be triggered from a pre-set trigger\n * (specified within the app). When the side content is triggered, it replaces the main\n * content. We recommend that you always place the trigger for the side content in the\n * same location, such as in the app footer.</li></ul>\n *\n * A special case allows switching the comparison mode between the main and side content.\n * In this case, the screen is split into 50:50 percent for main vs. side content. The\n * responsive behavior of the equal split is the same as in the standard view - the\n * side content disappears on screen widths of less than 720 px and can only be\n * viewed by triggering it.\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents-fiori/dist/DynamicSideContent\";</code>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.fiori.DynamicSideContent\n * @extends sap.ui.webcomponents.base.UI5Element\n * @tagname ui5-dynamic-side-content\n * @public\n * @since 1.1.0\n */\nclass DynamicSideContent extends UI5Element {\n  constructor() {\n    super();\n    this._handleResizeBound = this.handleResize.bind(this);\n  }\n  static get metadata() {\n    return metadata;\n  }\n  static get styles() {\n    return DynamicSideContentCss;\n  }\n  static get render() {\n    return litRender;\n  }\n  static get template() {\n    return DynamicSideContentTemplate;\n  }\n  static async onDefine() {\n    DynamicSideContent.i18nBundle = await getI18nBundle(\"@ui5/webcomponents-fiori\");\n  }\n  onAfterRendering() {\n    this._resizeContents();\n  }\n  onEnterDOM() {\n    ResizeHandler.register(this, this._handleResizeBound);\n  }\n  onExitDOM() {\n    ResizeHandler.deregister(this, this._handleResizeBound);\n  }\n\n  /**\n   * Toggles visibility of main and side contents on S screen size (mobile device).\n   * @public\n   */\n  toggleContents() {\n    if (this.breakpoint === this.sizeS && this.sideContentVisibility !== SideContentVisibility.AlwaysShow) {\n      this._toggled = !this._toggled;\n    }\n  }\n  get classes() {\n    const gridPrefix = \"ui5-dsc-span\",\n      mcSpan = this._toggled ? this._scSpan : this._mcSpan,\n      scSpan = this._toggled ? this._mcSpan : this._scSpan,\n      classes = {\n        main: {\n          \"ui5-dsc-main\": true\n        },\n        side: {\n          \"ui5-dsc-side\": true\n        }\n      };\n    classes.main[`${gridPrefix}-${mcSpan}`] = true;\n    classes.side[`${gridPrefix}-${scSpan}`] = true;\n    return classes;\n  }\n  get styles() {\n    const isToggled = this.breakpoint === this.sizeS && this._toggled,\n      mcSpan = isToggled ? this._scSpan : this._mcSpan,\n      scSpan = isToggled ? this._mcSpan : this._scSpan,\n      contentHeight = this.breakpoint === this.sizeS && this.sideContentVisibility !== SideContentVisibility.AlwaysShow ? \"100%\" : \"auto\";\n    return {\n      root: {\n        \"flex-wrap\": this._mcSpan === \"12\" ? \"wrap\" : \"nowrap\"\n      },\n      main: {\n        \"height\": mcSpan === this.span12 ? contentHeight : \"100%\",\n        \"order\": this.sideContentPosition === SideContentPosition.Start ? 2 : 1\n      },\n      side: {\n        \"height\": scSpan === this.span12 ? contentHeight : \"100%\",\n        \"order\": this.sideContentPosition === SideContentPosition.Start ? 1 : 2\n      }\n    };\n  }\n  get accInfo() {\n    return {\n      \"label\": DynamicSideContent.i18nBundle.getText(DSC_SIDE_ARIA_LABEL)\n    };\n  }\n  get sizeS() {\n    return \"S\";\n  }\n  get sizeM() {\n    return \"M\";\n  }\n  get sizeL() {\n    return \"L\";\n  }\n  get sizeXL() {\n    return \"XL\";\n  }\n  get span0() {\n    return \"0\";\n  }\n  get span3() {\n    return \"3\";\n  }\n  get span4() {\n    return \"4\";\n  }\n  get span6() {\n    return \"6\";\n  }\n  get span8() {\n    return \"8\";\n  }\n  get span9() {\n    return \"9\";\n  }\n  get span12() {\n    return \"12\";\n  }\n  get spanFixed() {\n    return \"fixed\";\n  }\n  get containerWidth() {\n    return this.parentElement.clientWidth;\n  }\n  get breakpoint() {\n    let size;\n    if (this.containerWidth <= S_M_BREAKPOINT) {\n      size = this.sizeS;\n    } else if (this.containerWidth > S_M_BREAKPOINT && this.containerWidth <= M_L_BREAKPOINT) {\n      size = this.sizeM;\n    } else if (this.containerWidth > M_L_BREAKPOINT && this.containerWidth <= L_XL_BREAKPOINT) {\n      size = this.sizeL;\n    } else {\n      size = this.sizeXL;\n    }\n    return size;\n  }\n  handleResize() {\n    this._resizeContents();\n  }\n  _resizeContents() {\n    let mainSize, sideSize, sideVisible;\n\n    // initial set contents sizes\n    switch (this.breakpoint) {\n      case this.sizeS:\n        mainSize = this.span12;\n        sideSize = this.span12;\n        break;\n      case this.sizeM:\n        if (this.sideContentFallDown === SideContentFallDown.BelowXL || this.sideContentFallDown === SideContentFallDown.BelowL || this.containerWidth <= MINIMUM_WIDTH_BREAKPOINT && this.sideContentFallDown === SideContentFallDown.OnMinimumWidth) {\n          mainSize = this.span12;\n          sideSize = this.span12;\n        } else {\n          mainSize = this.equalSplit ? this.span6 : this.spanFixed;\n          sideSize = this.equalSplit ? this.span6 : this.spanFixed;\n        }\n        sideVisible = this.sideContentVisibility === SideContentVisibility.ShowAboveS || this.sideContentVisibility === SideContentVisibility.AlwaysShow;\n        break;\n      case this.sizeL:\n        if (this.sideContentFallDown === SideContentFallDown.BelowXL) {\n          mainSize = this.span12;\n          sideSize = this.span12;\n        } else {\n          mainSize = this.equalSplit ? this.span6 : this.span8;\n          sideSize = this.equalSplit ? this.span6 : this.span4;\n        }\n        sideVisible = this.sideContentVisibility === SideContentVisibility.ShowAboveS || this.sideContentVisibility === SideContentVisibility.ShowAboveM || this.sideContentVisibility === SideContentVisibility.AlwaysShow;\n        break;\n      case this.sizeXL:\n        mainSize = this.equalSplit ? this.span6 : this.span9;\n        sideSize = this.equalSplit ? this.span6 : this.span3;\n        sideVisible = this.sideContentVisibility !== SideContentVisibility.NeverShow;\n    }\n    if (this.sideContentVisibility === SideContentVisibility.AlwaysShow) {\n      sideVisible = true;\n    }\n\n    // modify sizes of the contents depending on hideMainContent and hideSideContent properties\n    if (this.hideSideContent) {\n      mainSize = this.hideMainContent ? this.span0 : this.span12;\n      sideSize = this.span0;\n      sideVisible = false;\n    }\n    if (this.hideMainContent) {\n      mainSize = this.span0;\n      sideSize = this.hideSideContent ? this.span0 : this.span12;\n      sideVisible = true;\n    }\n\n    // set final sizes of the contents\n    if (!sideVisible) {\n      mainSize = this.span12;\n      sideSize = this.span0;\n    }\n\n    // fire \"layout-change\" event\n    if (this._currentBreakpoint !== this.breakpoint) {\n      const eventParams = {\n        currentBreakpoint: this.breakpoint,\n        previousBreakpoint: this._currentBreakpoint,\n        mainContentVisible: mainSize !== this.span0,\n        sideContentVisible: sideSize !== this.span0\n      };\n      this.fireEvent(\"layout-change\", eventParams);\n      this._currentBreakpoint = this.breakpoint;\n    }\n\n    // update contents sizes\n    this._setSpanSizes(mainSize, sideSize);\n  }\n  _setSpanSizes(mainSize, sideSize) {\n    this._mcSpan = mainSize;\n    this._scSpan = sideSize;\n    if (this.breakpoint !== this.sizeS) {\n      this._toggled = false;\n    }\n  }\n}\nDynamicSideContent.define();\nexport default DynamicSideContent;","map":{"version":3,"names":["UI5Element","getI18nBundle","litRender","ResizeHandler","SideContentPosition","SideContentVisibility","SideContentFallDown","DynamicSideContentTemplate","DynamicSideContentCss","DSC_SIDE_ARIA_LABEL","S_M_BREAKPOINT","M_L_BREAKPOINT","L_XL_BREAKPOINT","MINIMUM_WIDTH_BREAKPOINT","metadata","tag","managedSlots","properties","hideMainContent","type","Boolean","hideSideContent","sideContentPosition","defaultValue","End","sideContentVisibility","ShowAboveS","sideContentFallDown","OnMinimumWidth","equalSplit","_mcSpan","String","noAttribute","_scSpan","_toggled","_currentBreakpoint","slots","HTMLElement","events","detail","currentBreakpoint","previousBreakpoint","mainContentVisible","sideContentVisible","DynamicSideContent","constructor","_handleResizeBound","handleResize","bind","styles","render","template","onDefine","i18nBundle","onAfterRendering","_resizeContents","onEnterDOM","register","onExitDOM","deregister","toggleContents","breakpoint","sizeS","AlwaysShow","classes","gridPrefix","mcSpan","scSpan","main","side","isToggled","contentHeight","root","span12","Start","accInfo","getText","sizeM","sizeL","sizeXL","span0","span3","span4","span6","span8","span9","spanFixed","containerWidth","parentElement","clientWidth","size","mainSize","sideSize","sideVisible","BelowXL","BelowL","ShowAboveM","NeverShow","eventParams","fireEvent","_setSpanSizes","define"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/node_modules/@ui5/webcomponents-fiori/dist/DynamicSideContent.js"],"sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport SideContentPosition from \"./types/SideContentPosition.js\";\nimport SideContentVisibility from \"./types/SideContentVisibility.js\";\nimport SideContentFallDown from \"./types/SideContentFallDown.js\";\nimport DynamicSideContentTemplate from \"./generated/templates/DynamicSideContentTemplate.lit.js\";\n\n// Styles\nimport DynamicSideContentCss from \"./generated/themes/DynamicSideContent.css.js\";\n\n// Texts\nimport {\n\tDSC_SIDE_ARIA_LABEL,\n} from \"./generated/i18n/i18n-defaults.js\";\n\n// Breakpoint-related constants\nconst S_M_BREAKPOINT = 720,\t// Breakpoint between S and M screen sizes\n\tM_L_BREAKPOINT = 1024, // Breakpoint between M and L screen sizes\n\tL_XL_BREAKPOINT = 1440, // Breakpoint between L and XL screen sizes\n\tMINIMUM_WIDTH_BREAKPOINT = 960; // Minimum width of the control where main and side contents are side by side\n\n/**\n * @public\n */\nconst metadata = {\n\ttag: \"ui5-dynamic-side-content\",\n\tmanagedSlots: true,\n\tproperties: /** @lends sap.ui.webcomponents.fiori.DynamicSideContent.prototype */ {\n\n\t\t/**\n\t\t * Defines the visibility of the main content.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t *\n\t\t */\n\t\t hideMainContent: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines the visibility of the side content.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t *\n\t\t */\n\t\thideSideContent: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines whether the side content is positioned before the main content (left side\n\t\t * in LTR mode), or after the the main content (right side in LTR mode).\n\t\t *\n\t\t * <br><br>\n\t\t * <b>The available values are:</b>\n\t\t *\n\t\t * <ul>\n\t\t * <li><code>Start</code></li>\n\t\t * <li><code>End</code></li>\n\t\t * </ul>\n\t\t *\n\t\t * @type {sap.ui.webcomponents.fiori.types.SideContentPosition}\n\t\t * @defaultvalue \"End\"\n\t\t * @public\n\t\t *\n\t\t */\n\t\t sideContentPosition: {\n\t\t\ttype: SideContentPosition,\n\t\t\tdefaultValue: SideContentPosition.End,\n\t\t},\n\n\t\t/**\n\t\t * Defines on which breakpoints the side content is visible.\n\t\t *\n\t\t * <br><br>\n\t\t * <b>The available values are:</b>\n\t\t *\n\t\t * <ul>\n\t\t * <li><code>AlwaysShow</code></li>\n\t\t * <li><code>ShowAboveL</code></li>\n\t\t * <li><code>ShowAboveM</code></li>\n\t\t * <li><code>ShowAboveS</code></li>\n\t\t * <li><code>NeverShow</code></li>\n\t\t * </ul>\n\t\t *\n\t\t * @type {sap.ui.webcomponents.fiori.types.SideContentVisibility}\n\t\t * @defaultvalue \"ShowAboveS\"\n\t\t * @public\n\t\t *\n\t\t */\n\t\tsideContentVisibility: {\n\t\t\ttype: SideContentVisibility,\n\t\t\tdefaultValue: SideContentVisibility.ShowAboveS,\n\t\t},\n\n\t\t/**\n\t\t * Defines on which breakpoints the side content falls down below the main content.\n\t\t *\n\t\t * <br><br>\n\t\t * <b>The available values are:</b>\n\t\t *\n\t\t * <ul>\n\t\t * <li><code>BelowXL</code></li>\n\t\t * <li><code>BelowL</code></li>\n\t\t * <li><code>BelowM</code></li>\n\t\t * <li><code>OnMinimumWidth</code></li>\n\t\t * </ul>\n\t\t *\n\t\t * @type {sap.ui.webcomponents.fiori.types.SideContentFallDown}\n\t\t * @defaultvalue \"OnMinimumWidth\"\n\t\t * @public\n\t\t *\n\t\t */\n\t\tsideContentFallDown: {\n\t\t\ttype: SideContentFallDown,\n\t\t\tdefaultValue: SideContentFallDown.OnMinimumWidth,\n\t\t},\n\n\t\t/**\n\t\t * Defines whether the component is in equal split mode. In this mode, the side and\n\t\t * the main content take 50:50 percent of the container on all screen sizes\n\t\t * except for phone, where the main and side contents are switching visibility\n\t\t * using the toggle method.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t *\n\t\t */\n\t\tequalSplit: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n \t\t * @private\n\t\t */\n\t\t_mcSpan: {\n\t\t\ttype: String,\n\t\t\tdefaultValue: \"0\",\n\t\t\tnoAttribute: true,\n\t\t},\n\n\t\t/**\n \t\t * @private\n\t\t */\n\t\t _scSpan: {\n\t\t\ttype: String,\n\t\t\tdefaultValue: \"0\",\n\t\t\tnoAttribute: true,\n\t\t},\n\n\t\t/**\n \t\t * @private\n\t\t */\n\t\t _toggled: {\n\t\t\ttype: Boolean,\n\t\t\tnoAttribute: true,\n\t\t},\n\n\t\t/**\n \t\t * @private\n\t\t */\n\t\t _currentBreakpoint: {\n\t\t\ttype: String,\n\t\t\tnoAttribute: true,\n\t\t},\n\n\t},\n\tslots: /** @lends sap.ui.webcomponents.fiori.DynamicSideContent.prototype */ {\n\n\t\t/**\n\t\t * Defines the main content.\n\t\t *\n\t\t * @type {HTMLElement[]}\n\t\t * @slot\n\t\t * @public\n\t\t */\n\t\t\"default\": {\n\t\t\ttype: HTMLElement,\n\t\t},\n\n\t\t/**\n\t\t * Defines the side content.\n\t\t *\n\t\t * @type {HTMLElement[]}\n\t\t * @slot\n\t\t * @public\n\t\t */\n\t\t \"sideContent\": {\n\t\t\ttype: HTMLElement,\n\t\t},\n\n\t},\n\tevents: /** @lends sap.ui.webcomponents.fiori.DynamicSideContent.prototype */ {\n\n\t\t/**\n\t\t * Fires when the current breakpoint has been changed.\n\t\t * @event sap.ui.webcomponents.fiori.DynamicSideContent#layout-change\n\t\t * @param {string} currentBreakpoint the current breakpoint.\n\t\t * @param {string} previousBreakpoint the breakpoint that was active before change to current breakpoint.\n\t\t * @param {boolean} mainContentVisible visibility of the main content.\n\t\t * @param {boolean} sideContentVisible visibility of the side content.\n\t\t * @public\n\t\t */\n\t\t\"layout-change\": {\n\t\t\tdetail: {\n\t\t\t\tcurrentBreakpoint: {\n\t\t\t\t\ttype: String,\n\t\t\t\t},\n\t\t\t\tpreviousBreakpoint: {\n\t\t\t\t\ttype: String,\n\t\t\t\t},\n\t\t\t\tmainContentVisible: {\n\t\t\t\t\ttype: Boolean,\n\t\t\t\t},\n\t\t\t\tsideContentVisible: {\n\t\t\t\t\ttype: Boolean,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\n\t},\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * The DynamicSideContent (<code>ui5-dynamic-side-content</code>) is a layout component that allows additional content\n * to be displayed in a way that flexibly adapts to different screen sizes. The side\n * content appears in a container next to or directly below the main content\n * (it doesn't overlay). When the side content is triggered, the main content becomes\n * narrower (if appearing side-by-side). The side content contains a separate scrollbar\n * when appearing next to the main content.\n *\n *\n * <h3>Usage</h3>\n *\n * <i>When to use?</i>\n *\n * Use this component if you want to display relevant information that is not critical\n * for users to complete a task. Users should have access to all the key functions and\n * critical information in the app even if they do not see the side content. This is\n * important because on smaller screen sizes it may be difficult to display the side\n * content in a way that is easily accessible for the user.\n *\n * <i>When not to use?</i>\n *\n * Don't use it if you want to display navigation or critical information that prevents\n * users from completing a task when they have no access to the side content.\n *\n *\n * <h3>Responsive Behavior</h3>\n *\n * Screen width > 1440px\n *\n * <ul><li>Main vs. side content ratio is 75 vs. 25 percent (with a minimum of 320px\n * each).</li>\n * <li>If the application defines a trigger, the side content can be hidden.</li></ul>\n *\n * Screen width <= 1440px and > 1024px\n *\n * <ul><li>Main vs. side content ratio is 66.666 vs. 33.333 percent (with a minimum of\n * 320px each). If the side content width falls below 320 px, it automatically slides\n * under the main content, unless the app development team specifies that it should\n * disappear.</li></ul>\n *\n * Screen width <= 1024px and > 720px\n *\n * <ul><li>The side content ratio is fixed to 340px, and the main content takes the rest\n * of the width. Only if the <code>sideContentFallDown</code> is set to <code>OnMinimumWidth</code>\n * and screen width is <= 960px and > 720px the side content falls below the main content.</li></ul>\n *\n * Screen width <= 720px (for example on a mobile device)\n *\n * <ul><li>In this case, the side content automatically disappears from the screen (unless\n * specified to stay under the content by setting of <code>sideContentVisibility</code>\n * property to <code>AlwaysShow</code>) and can be triggered from a pre-set trigger\n * (specified within the app). When the side content is triggered, it replaces the main\n * content. We recommend that you always place the trigger for the side content in the\n * same location, such as in the app footer.</li></ul>\n *\n * A special case allows switching the comparison mode between the main and side content.\n * In this case, the screen is split into 50:50 percent for main vs. side content. The\n * responsive behavior of the equal split is the same as in the standard view - the\n * side content disappears on screen widths of less than 720 px and can only be\n * viewed by triggering it.\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents-fiori/dist/DynamicSideContent\";</code>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.fiori.DynamicSideContent\n * @extends sap.ui.webcomponents.base.UI5Element\n * @tagname ui5-dynamic-side-content\n * @public\n * @since 1.1.0\n */\nclass DynamicSideContent extends UI5Element {\n\tconstructor() {\n\t\tsuper();\n\t\tthis._handleResizeBound = this.handleResize.bind(this);\n\t}\n\n\tstatic get metadata() {\n\t\treturn metadata;\n\t}\n\n\tstatic get styles() {\n\t\treturn DynamicSideContentCss;\n\t}\n\n\tstatic get render() {\n\t\treturn litRender;\n\t}\n\n\tstatic get template() {\n\t\treturn DynamicSideContentTemplate;\n\t}\n\n\tstatic async onDefine() {\n\t\tDynamicSideContent.i18nBundle = await getI18nBundle(\"@ui5/webcomponents-fiori\");\n\t}\n\n\tonAfterRendering() {\n\t\tthis._resizeContents();\n\t}\n\n\tonEnterDOM() {\n\t\tResizeHandler.register(this, this._handleResizeBound);\n\t}\n\n\tonExitDOM() {\n\t\tResizeHandler.deregister(this, this._handleResizeBound);\n\t}\n\n\t/**\n\t * Toggles visibility of main and side contents on S screen size (mobile device).\n\t * @public\n\t */\n\t toggleContents() {\n\t\tif (this.breakpoint === this.sizeS && this.sideContentVisibility !== SideContentVisibility.AlwaysShow) {\n\t\t\tthis._toggled = !this._toggled;\n\t\t}\n\t}\n\n\tget classes() {\n\t\tconst gridPrefix = \"ui5-dsc-span\",\n\t\t\tmcSpan = this._toggled ? this._scSpan : this._mcSpan,\n\t\t\tscSpan = this._toggled ? this._mcSpan : this._scSpan,\n\t\t\tclasses = {\n\t\t\t\tmain: {\n\t\t\t\t\t\"ui5-dsc-main\": true,\n\t\t\t\t},\n\t\t\t\tside: {\n\t\t\t\t\t\"ui5-dsc-side\": true,\n\t\t\t\t},\n\t\t\t};\n\n\t\tclasses.main[`${gridPrefix}-${mcSpan}`] = true;\n\t\tclasses.side[`${gridPrefix}-${scSpan}`] = true;\n\n\t\treturn classes;\n\t}\n\n\tget styles() {\n\t\tconst isToggled = this.breakpoint === this.sizeS && this._toggled,\n\t\t\tmcSpan = isToggled ? this._scSpan : this._mcSpan,\n\t\t\tscSpan = isToggled ? this._mcSpan : this._scSpan,\n\t\t\tcontentHeight = this.breakpoint === this.sizeS && this.sideContentVisibility !== SideContentVisibility.AlwaysShow ? \"100%\" : \"auto\";\n\n\t\treturn {\n\t\t\troot: {\n\t\t\t\t\"flex-wrap\": this._mcSpan === \"12\" ? \"wrap\" : \"nowrap\",\n\t\t\t},\n\t\t\tmain: {\n\t\t\t\t\"height\": mcSpan === this.span12 ? contentHeight : \"100%\",\n\t\t\t\t\"order\": this.sideContentPosition === SideContentPosition.Start ? 2 : 1,\n\t\t\t},\n\t\t\tside: {\n\t\t\t\t\"height\": scSpan === this.span12 ? contentHeight : \"100%\",\n\t\t\t\t\"order\": this.sideContentPosition === SideContentPosition.Start ? 1 : 2,\n\t\t\t},\n\t\t};\n\t}\n\n\tget accInfo() {\n\t\treturn {\n\t\t\t\"label\": DynamicSideContent.i18nBundle.getText(DSC_SIDE_ARIA_LABEL),\n\t\t};\n\t}\n\n\tget sizeS() {\n\t\treturn \"S\";\n\t}\n\n\tget sizeM() {\n\t\treturn \"M\";\n\t}\n\n\tget sizeL() {\n\t\treturn \"L\";\n\t}\n\n\tget sizeXL() {\n\t\treturn \"XL\";\n\t}\n\n\tget span0() {\n\t\treturn \"0\";\n\t}\n\n\tget span3() {\n\t\treturn \"3\";\n\t}\n\n\tget span4() {\n\t\treturn \"4\";\n\t}\n\n\tget span6() {\n\t\treturn \"6\";\n\t}\n\n\tget span8() {\n\t\treturn \"8\";\n\t}\n\n\tget span9() {\n\t\treturn \"9\";\n\t}\n\n\tget span12() {\n\t\treturn \"12\";\n\t}\n\n\tget spanFixed() {\n\t\treturn \"fixed\";\n\t}\n\n\tget containerWidth() {\n\t\treturn this.parentElement.clientWidth;\n\t}\n\n\tget breakpoint() {\n\t\tlet size;\n\n\t\tif (this.containerWidth <= S_M_BREAKPOINT) {\n\t\t\tsize = this.sizeS;\n\t\t} else if (this.containerWidth > S_M_BREAKPOINT && this.containerWidth <= M_L_BREAKPOINT) {\n\t\t\tsize = this.sizeM;\n\t\t} else if (this.containerWidth > M_L_BREAKPOINT && this.containerWidth <= L_XL_BREAKPOINT) {\n\t\t\tsize = this.sizeL;\n\t\t} else {\n\t\t\tsize = this.sizeXL;\n\t\t}\n\n\t\treturn size;\n\t}\n\n\thandleResize() {\n\t\tthis._resizeContents();\n\t}\n\n\t_resizeContents() {\n\t\tlet mainSize,\n\t\t\tsideSize,\n\t\t\tsideVisible;\n\n\t\t// initial set contents sizes\n\t\tswitch (this.breakpoint) {\n\t\tcase this.sizeS:\n\t\t\tmainSize = this.span12;\n\t\t\tsideSize = this.span12;\n\t\t\tbreak;\n\t\tcase this.sizeM:\n\t\t\tif (this.sideContentFallDown === SideContentFallDown.BelowXL\n\t\t\t\t|| this.sideContentFallDown === SideContentFallDown.BelowL\n\t\t\t\t|| (this.containerWidth <= MINIMUM_WIDTH_BREAKPOINT && this.sideContentFallDown === SideContentFallDown.OnMinimumWidth)) {\n\t\t\t\tmainSize = this.span12;\n\t\t\t\tsideSize = this.span12;\n\t\t\t} else {\n\t\t\t\tmainSize = this.equalSplit ? this.span6 : this.spanFixed;\n\t\t\t\tsideSize = this.equalSplit ? this.span6 : this.spanFixed;\n\t\t\t}\n\t\t\tsideVisible = this.sideContentVisibility === SideContentVisibility.ShowAboveS\n\t\t\t\t|| this.sideContentVisibility === SideContentVisibility.AlwaysShow;\n\t\t\tbreak;\n\t\tcase this.sizeL:\n\t\t\tif (this.sideContentFallDown === SideContentFallDown.BelowXL) {\n\t\t\t\tmainSize = this.span12;\n\t\t\t\tsideSize = this.span12;\n\t\t\t} else {\n\t\t\t\tmainSize = this.equalSplit ? this.span6 : this.span8;\n\t\t\t\tsideSize = this.equalSplit ? this.span6 : this.span4;\n\t\t\t}\n\t\t\tsideVisible = this.sideContentVisibility === SideContentVisibility.ShowAboveS\n\t\t\t\t|| this.sideContentVisibility === SideContentVisibility.ShowAboveM\n\t\t\t\t|| this.sideContentVisibility === SideContentVisibility.AlwaysShow;\n\t\t\tbreak;\n\t\tcase this.sizeXL:\n\t\t\tmainSize = this.equalSplit ? this.span6 : this.span9;\n\t\t\tsideSize = this.equalSplit ? this.span6 : this.span3;\n\t\t\tsideVisible = this.sideContentVisibility !== SideContentVisibility.NeverShow;\n\t\t}\n\n\t\tif (this.sideContentVisibility === SideContentVisibility.AlwaysShow) {\n\t\t\tsideVisible = true;\n\t\t}\n\n\t\t// modify sizes of the contents depending on hideMainContent and hideSideContent properties\n\t\tif (this.hideSideContent) {\n\t\t\tmainSize = this.hideMainContent ? this.span0 : this.span12;\n\t\t\tsideSize = this.span0;\n\t\t\tsideVisible = false;\n\t\t}\n\n\t\tif (this.hideMainContent) {\n\t\t\tmainSize = this.span0;\n\t\t\tsideSize = this.hideSideContent ? this.span0 : this.span12;\n\t\t\tsideVisible = true;\n\t\t}\n\n\t\t// set final sizes of the contents\n\t\tif (!sideVisible) {\n\t\t\tmainSize = this.span12;\n\t\t\tsideSize = this.span0;\n\t\t}\n\n\t\t// fire \"layout-change\" event\n\t\tif (this._currentBreakpoint !== this.breakpoint) {\n\t\t\tconst eventParams = {\n\t\t\t\tcurrentBreakpoint: this.breakpoint,\n\t\t\t\tpreviousBreakpoint: this._currentBreakpoint,\n\t\t\t\tmainContentVisible: mainSize !== this.span0,\n\t\t\t\tsideContentVisible: sideSize !== this.span0,\n\t\t\t};\n\t\t\tthis.fireEvent(\"layout-change\", eventParams);\n\t\t\tthis._currentBreakpoint = this.breakpoint;\n\t\t}\n\n\t\t// update contents sizes\n\t\tthis._setSpanSizes(mainSize, sideSize);\n\t}\n\n\t_setSpanSizes(mainSize, sideSize) {\n\t\tthis._mcSpan = mainSize;\n\t\tthis._scSpan = sideSize;\n\t\tif (this.breakpoint !== this.sizeS) {\n\t\t\tthis._toggled = false;\n\t\t}\n\t}\n}\n\nDynamicSideContent.define();\n\nexport default DynamicSideContent;\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,4CAA4C;AACnE,SAASC,aAAa,QAAQ,4CAA4C;AAC1E,OAAOC,SAAS,MAAM,sDAAsD;AAC5E,OAAOC,aAAa,MAAM,wDAAwD;AAClF,OAAOC,mBAAmB,MAAM,gCAAgC;AAChE,OAAOC,qBAAqB,MAAM,kCAAkC;AACpE,OAAOC,mBAAmB,MAAM,gCAAgC;AAChE,OAAOC,0BAA0B,MAAM,yDAAyD;;AAEhG;AACA,OAAOC,qBAAqB,MAAM,8CAA8C;;AAEhF;AACA,SACCC,mBAAmB,QACb,mCAAmC;;AAE1C;AACA,MAAMC,cAAc,GAAG,GAAG;EAAE;EAC3BC,cAAc,GAAG,IAAI;EAAE;EACvBC,eAAe,GAAG,IAAI;EAAE;EACxBC,wBAAwB,GAAG,GAAG,CAAC,CAAC;;AAEjC;AACA;AACA;AACA,MAAMC,QAAQ,GAAG;EAChBC,GAAG,EAAE,0BAA0B;EAC/BC,YAAY,EAAE,IAAI;EAClBC,UAAU,EAAE,qEAAsE;IAEjF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACGC,eAAe,EAAE;MACjBC,IAAI,EAAEC;IACP,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACEC,eAAe,EAAE;MAChBF,IAAI,EAAEC;IACP,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACGE,mBAAmB,EAAE;MACrBH,IAAI,EAAEf,mBAAmB;MACzBmB,YAAY,EAAEnB,mBAAmB,CAACoB;IACnC,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEC,qBAAqB,EAAE;MACtBN,IAAI,EAAEd,qBAAqB;MAC3BkB,YAAY,EAAElB,qBAAqB,CAACqB;IACrC,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEC,mBAAmB,EAAE;MACpBR,IAAI,EAAEb,mBAAmB;MACzBiB,YAAY,EAAEjB,mBAAmB,CAACsB;IACnC,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEC,UAAU,EAAE;MACXV,IAAI,EAAEC;IACP,CAAC;IAED;AACF;AACA;IACEU,OAAO,EAAE;MACRX,IAAI,EAAEY,MAAM;MACZR,YAAY,EAAE,GAAG;MACjBS,WAAW,EAAE;IACd,CAAC;IAED;AACF;AACA;IACGC,OAAO,EAAE;MACTd,IAAI,EAAEY,MAAM;MACZR,YAAY,EAAE,GAAG;MACjBS,WAAW,EAAE;IACd,CAAC;IAED;AACF;AACA;IACGE,QAAQ,EAAE;MACVf,IAAI,EAAEC,OAAO;MACbY,WAAW,EAAE;IACd,CAAC;IAED;AACF;AACA;IACGG,kBAAkB,EAAE;MACpBhB,IAAI,EAAEY,MAAM;MACZC,WAAW,EAAE;IACd;EAED,CAAC;EACDI,KAAK,EAAE,qEAAsE;IAE5E;AACF;AACA;AACA;AACA;AACA;AACA;IACE,SAAS,EAAE;MACVjB,IAAI,EAAEkB;IACP,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;IACG,aAAa,EAAE;MACflB,IAAI,EAAEkB;IACP;EAED,CAAC;EACDC,MAAM,EAAE,qEAAsE;IAE7E;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,eAAe,EAAE;MAChBC,MAAM,EAAE;QACPC,iBAAiB,EAAE;UAClBrB,IAAI,EAAEY;QACP,CAAC;QACDU,kBAAkB,EAAE;UACnBtB,IAAI,EAAEY;QACP,CAAC;QACDW,kBAAkB,EAAE;UACnBvB,IAAI,EAAEC;QACP,CAAC;QACDuB,kBAAkB,EAAE;UACnBxB,IAAI,EAAEC;QACP;MACD;IACD;EAED;AACD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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"},"metadata":{},"sourceType":"module"}