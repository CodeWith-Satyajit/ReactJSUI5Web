{"ast":null,"code":"import { getTheme as getConfiguredTheme } from \"../InitialConfiguration.js\";\nimport { reRenderAllUI5Elements } from \"../Render.js\";\nimport applyTheme from \"../theming/applyTheme.js\";\nlet theme;\nconst getTheme = () => {\n  if (theme === undefined) {\n    theme = getConfiguredTheme();\n  }\n  return theme;\n};\nconst setTheme = async newTheme => {\n  if (theme === newTheme) {\n    return;\n  }\n  theme = newTheme;\n\n  // Update CSS Custom Properties\n  await applyTheme(theme);\n  await reRenderAllUI5Elements({\n    themeAware: true\n  });\n};\n\n/**\n * Returns if the given theme name is the one currently applied.\n * @private\n * @param {String}\n * @returns {boolean}\n */\nconst isTheme = _theme => {\n  const currentTheme = getTheme();\n  return currentTheme === _theme || currentTheme === `${_theme}_exp`;\n};\n\n/**\n * Returns if the current theme is part of given theme family\n * @private\n * @param {String} the theme family\n * @returns {boolean}\n */\nconst isThemeFamily = _theme => {\n  return getTheme().startsWith(_theme);\n};\nexport { getTheme, setTheme, isTheme, isThemeFamily };","map":{"version":3,"names":["getTheme","getConfiguredTheme","reRenderAllUI5Elements","applyTheme","theme","undefined","setTheme","newTheme","themeAware","isTheme","_theme","currentTheme","isThemeFamily","startsWith"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/node_modules/@ui5/webcomponents-base/dist/config/Theme.js"],"sourcesContent":["import { getTheme as getConfiguredTheme } from \"../InitialConfiguration.js\";\nimport { reRenderAllUI5Elements } from \"../Render.js\";\nimport applyTheme from \"../theming/applyTheme.js\";\n\nlet theme;\n\nconst getTheme = () => {\n\tif (theme === undefined) {\n\t\ttheme = getConfiguredTheme();\n\t}\n\n\treturn theme;\n};\n\nconst setTheme = async newTheme => {\n\tif (theme === newTheme) {\n\t\treturn;\n\t}\n\n\ttheme = newTheme;\n\n\t// Update CSS Custom Properties\n\tawait applyTheme(theme);\n\tawait reRenderAllUI5Elements({ themeAware: true });\n};\n\n/**\n * Returns if the given theme name is the one currently applied.\n * @private\n * @param {String}\n * @returns {boolean}\n */\nconst isTheme = _theme => {\n\tconst currentTheme = getTheme();\n\treturn currentTheme === _theme || currentTheme === `${_theme}_exp`;\n};\n\n/**\n * Returns if the current theme is part of given theme family\n * @private\n * @param {String} the theme family\n * @returns {boolean}\n */\nconst isThemeFamily = _theme => {\n\treturn getTheme().startsWith(_theme);\n};\n\nexport {\n\tgetTheme,\n\tsetTheme,\n\tisTheme,\n\tisThemeFamily,\n};\n"],"mappings":"AAAA,SAASA,QAAQ,IAAIC,kBAAkB,QAAQ,4BAA4B;AAC3E,SAASC,sBAAsB,QAAQ,cAAc;AACrD,OAAOC,UAAU,MAAM,0BAA0B;AAEjD,IAAIC,KAAK;AAET,MAAMJ,QAAQ,GAAG,MAAM;EACtB,IAAII,KAAK,KAAKC,SAAS,EAAE;IACxBD,KAAK,GAAGH,kBAAkB,EAAE;EAC7B;EAEA,OAAOG,KAAK;AACb,CAAC;AAED,MAAME,QAAQ,GAAG,MAAMC,QAAQ,IAAI;EAClC,IAAIH,KAAK,KAAKG,QAAQ,EAAE;IACvB;EACD;EAEAH,KAAK,GAAGG,QAAQ;;EAEhB;EACA,MAAMJ,UAAU,CAACC,KAAK,CAAC;EACvB,MAAMF,sBAAsB,CAAC;IAAEM,UAAU,EAAE;EAAK,CAAC,CAAC;AACnD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,OAAO,GAAGC,MAAM,IAAI;EACzB,MAAMC,YAAY,GAAGX,QAAQ,EAAE;EAC/B,OAAOW,YAAY,KAAKD,MAAM,IAAIC,YAAY,KAAM,GAAED,MAAO,MAAK;AACnE,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,MAAME,aAAa,GAAGF,MAAM,IAAI;EAC/B,OAAOV,QAAQ,EAAE,CAACa,UAAU,CAACH,MAAM,CAAC;AACrC,CAAC;AAED,SACCV,QAAQ,EACRM,QAAQ,EACRG,OAAO,EACPG,aAAa"},"metadata":{},"sourceType":"module"}