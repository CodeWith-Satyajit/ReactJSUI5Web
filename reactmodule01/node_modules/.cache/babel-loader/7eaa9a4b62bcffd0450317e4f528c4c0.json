{"ast":null,"code":"import { attachLanguageChange } from \"../locale/languageChange.js\";\nimport getLocale from \"../locale/getLocale.js\";\nimport { DEFAULT_LOCALE, SUPPORTED_LOCALES } from \"../generated/AssetParameters.js\";\nimport { getFeature } from \"../FeaturesRegistry.js\";\nconst localeDataMap = new Map();\nconst loaders = new Map();\nconst cldrPromises = new Map();\nconst reportedErrors = new Set();\nlet warningShown = false;\nconst M_ISO639_OLD_TO_NEW = {\n  \"iw\": \"he\",\n  \"ji\": \"yi\",\n  \"in\": \"id\"\n};\nconst _showAssetsWarningOnce = localeId => {\n  if (warningShown) {\n    return;\n  }\n  console.warn(`[LocaleData] Supported locale \"${localeId}\" not configured, import the \"Assets.js\" module from the webcomponents package you are using.`); /* eslint-disable-line */\n\n  warningShown = true;\n};\nconst calcLocale = (language, region, script) => {\n  // normalize language and handle special cases\n  language = language && M_ISO639_OLD_TO_NEW[language] || language;\n  // Special case 1: in an SAP context, the inclusive language code \"no\" always means Norwegian Bokmal (\"nb\")\n  if (language === \"no\") {\n    language = \"nb\";\n  }\n  // Special case 2: for Chinese, derive a default region from the script (this behavior is inherited from Java)\n  if (language === \"zh\" && !region) {\n    if (script === \"Hans\") {\n      region = \"CN\";\n    } else if (script === \"Hant\") {\n      region = \"TW\";\n    }\n  }\n\n  // Special case 3: for Serbian, there are cyrillic and latin scripts, \"sh\" and \"sr-latn\" map to \"latin\", \"sr\" maps to cyrillic.\n  if (language === \"sh\" || language === \"sr\" && script === \"Latn\") {\n    language = \"sr\";\n    region = \"Latn\";\n  }\n\n  // try language + region\n  let localeId = `${language}_${region}`;\n  if (SUPPORTED_LOCALES.includes(localeId)) {\n    if (loaders.has(localeId)) {\n      // supported and has loader\n      return localeId;\n    }\n\n    // supported, no loader - fallback to default and warn\n    _showAssetsWarningOnce(localeId);\n    return DEFAULT_LOCALE;\n  }\n\n  // not supported, try language only\n  localeId = language;\n  if (SUPPORTED_LOCALES.includes(localeId)) {\n    if (loaders.has(localeId)) {\n      // supported and has loader\n      return localeId;\n    }\n\n    // supported, no loader - fallback to default and warn\n    _showAssetsWarningOnce(localeId);\n    return DEFAULT_LOCALE;\n  }\n\n  // not supported - fallback to default locale\n  return DEFAULT_LOCALE;\n};\n\n// internal set data\nconst setLocaleData = (localeId, content) => {\n  localeDataMap.set(localeId, content);\n};\n\n// external getSync\nconst getLocaleData = localeId => {\n  // if there is no loader, the default fallback was fetched and a warning was given - use default locale instead\n  if (!loaders.has(localeId)) {\n    localeId = DEFAULT_LOCALE;\n  }\n  const content = localeDataMap.get(localeId);\n  if (!content) {\n    throw new Error(`CLDR data for locale ${localeId} is not loaded!`);\n  }\n  return content;\n};\n\n// load bundle over the network once\nconst _loadCldrOnce = localeId => {\n  const loadCldr = loaders.get(localeId);\n  if (!cldrPromises.get(localeId)) {\n    cldrPromises.set(localeId, loadCldr(localeId));\n  }\n  return cldrPromises.get(localeId);\n};\n\n// external getAsync\nconst fetchCldr = async (language, region, script) => {\n  const localeId = calcLocale(language, region, script);\n\n  // reuse OpenUI5 CLDR if present\n  const OpenUI5Support = getFeature(\"OpenUI5Support\");\n  if (OpenUI5Support) {\n    const cldrContent = OpenUI5Support.getLocaleDataObject();\n    if (cldrContent) {\n      // only if openui5 actually returned valid content\n      setLocaleData(localeId, cldrContent);\n      return;\n    }\n  }\n\n  // fetch it\n  try {\n    const cldrContent = await _loadCldrOnce(localeId);\n    setLocaleData(localeId, cldrContent);\n  } catch (e) {\n    if (!reportedErrors.has(e.message)) {\n      reportedErrors.add(e.message);\n      console.error(e.message); /* eslint-disable-line */\n    }\n  }\n};\n\nconst registerLocaleDataLoader = (localeId, loader) => {\n  loaders.set(localeId, loader);\n};\n\n// register default loader for \"en\" from ui5 CDN (dev workflow without assets)\nregisterLocaleDataLoader(\"en\", async runtimeLocaleId => {\n  return (await fetch(`https://sdk.openui5.org/1.103.0/resources/sap/ui/core/cldr/en.json`)).json();\n});\n\n// When the language changes dynamically (the user calls setLanguage),\n// re-fetch the required CDRD data.\nattachLanguageChange(() => {\n  const locale = getLocale();\n  return fetchCldr(locale.getLanguage(), locale.getRegion(), locale.getScript());\n});\nexport { registerLocaleDataLoader, fetchCldr, getLocaleData };","map":{"version":3,"names":["attachLanguageChange","getLocale","DEFAULT_LOCALE","SUPPORTED_LOCALES","getFeature","localeDataMap","Map","loaders","cldrPromises","reportedErrors","Set","warningShown","M_ISO639_OLD_TO_NEW","_showAssetsWarningOnce","localeId","console","warn","calcLocale","language","region","script","includes","has","setLocaleData","content","set","getLocaleData","get","Error","_loadCldrOnce","loadCldr","fetchCldr","OpenUI5Support","cldrContent","getLocaleDataObject","e","message","add","error","registerLocaleDataLoader","loader","runtimeLocaleId","fetch","json","locale","getLanguage","getRegion","getScript"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/node_modules/@ui5/webcomponents-base/dist/asset-registries/LocaleData.js"],"sourcesContent":["import { attachLanguageChange } from \"../locale/languageChange.js\";\nimport getLocale from \"../locale/getLocale.js\";\nimport { DEFAULT_LOCALE, SUPPORTED_LOCALES } from \"../generated/AssetParameters.js\";\nimport { getFeature } from \"../FeaturesRegistry.js\";\n\nconst localeDataMap = new Map();\nconst loaders = new Map();\nconst cldrPromises = new Map();\nconst reportedErrors = new Set();\nlet warningShown = false;\n\nconst M_ISO639_OLD_TO_NEW = {\n\t\"iw\": \"he\",\n\t\"ji\": \"yi\",\n\t\"in\": \"id\",\n};\n\nconst _showAssetsWarningOnce = localeId => {\n\tif (warningShown) {\n\t\treturn;\n\t}\n\n\tconsole.warn(`[LocaleData] Supported locale \"${localeId}\" not configured, import the \"Assets.js\" module from the webcomponents package you are using.`); /* eslint-disable-line */\n\n\twarningShown = true;\n};\n\nconst calcLocale = (language, region, script) => {\n\t// normalize language and handle special cases\n\tlanguage = (language && M_ISO639_OLD_TO_NEW[language]) || language;\n\t// Special case 1: in an SAP context, the inclusive language code \"no\" always means Norwegian Bokmal (\"nb\")\n\tif (language === \"no\") {\n\t\tlanguage = \"nb\";\n\t}\n\t// Special case 2: for Chinese, derive a default region from the script (this behavior is inherited from Java)\n\tif (language === \"zh\" && !region) {\n\t\tif (script === \"Hans\") {\n\t\t\tregion = \"CN\";\n\t\t} else if (script === \"Hant\") {\n\t\t\tregion = \"TW\";\n\t\t}\n\t}\n\n\t// Special case 3: for Serbian, there are cyrillic and latin scripts, \"sh\" and \"sr-latn\" map to \"latin\", \"sr\" maps to cyrillic.\n\tif (language === \"sh\" || (language === \"sr\" && script === \"Latn\")) {\n\t\tlanguage = \"sr\";\n\t\tregion = \"Latn\";\n\t}\n\n\t// try language + region\n\tlet localeId = `${language}_${region}`;\n\tif (SUPPORTED_LOCALES.includes(localeId)) {\n\t\tif (loaders.has(localeId)) {\n\t\t\t// supported and has loader\n\t\t\treturn localeId;\n\t\t}\n\n\t\t// supported, no loader - fallback to default and warn\n\t\t_showAssetsWarningOnce(localeId);\n\t\treturn DEFAULT_LOCALE;\n\t}\n\n\t// not supported, try language only\n\tlocaleId = language;\n\tif (SUPPORTED_LOCALES.includes(localeId)) {\n\t\tif (loaders.has(localeId)) {\n\t\t\t// supported and has loader\n\t\t\treturn localeId;\n\t\t}\n\n\t\t// supported, no loader - fallback to default and warn\n\t\t_showAssetsWarningOnce(localeId);\n\t\treturn DEFAULT_LOCALE;\n\t}\n\n\t// not supported - fallback to default locale\n\treturn DEFAULT_LOCALE;\n};\n\n// internal set data\nconst setLocaleData = (localeId, content) => {\n\tlocaleDataMap.set(localeId, content);\n};\n\n// external getSync\nconst getLocaleData = localeId => {\n\t// if there is no loader, the default fallback was fetched and a warning was given - use default locale instead\n\tif (!loaders.has(localeId)) {\n\t\tlocaleId = DEFAULT_LOCALE;\n\t}\n\n\tconst content = localeDataMap.get(localeId);\n\tif (!content) {\n\t\tthrow new Error(`CLDR data for locale ${localeId} is not loaded!`);\n\t}\n\n\treturn content;\n};\n\n// load bundle over the network once\nconst _loadCldrOnce = localeId => {\n\tconst loadCldr = loaders.get(localeId);\n\n\tif (!cldrPromises.get(localeId)) {\n\t\tcldrPromises.set(localeId, loadCldr(localeId));\n\t}\n\n\treturn cldrPromises.get(localeId);\n};\n\n// external getAsync\nconst fetchCldr = async (language, region, script) => {\n\tconst localeId = calcLocale(language, region, script);\n\n\t// reuse OpenUI5 CLDR if present\n\tconst OpenUI5Support = getFeature(\"OpenUI5Support\");\n\tif (OpenUI5Support) {\n\t\tconst cldrContent = OpenUI5Support.getLocaleDataObject();\n\t\tif (cldrContent) {\n\t\t\t// only if openui5 actually returned valid content\n\t\t\tsetLocaleData(localeId, cldrContent);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// fetch it\n\ttry {\n\t\tconst cldrContent = await _loadCldrOnce(localeId);\n\t\tsetLocaleData(localeId, cldrContent);\n\t} catch (e) {\n\t\tif (!reportedErrors.has(e.message)) {\n\t\t\treportedErrors.add(e.message);\n\t\t\tconsole.error(e.message); /* eslint-disable-line */\n\t\t}\n\t}\n};\n\nconst registerLocaleDataLoader = (localeId, loader) => {\n\tloaders.set(localeId, loader);\n};\n\n// register default loader for \"en\" from ui5 CDN (dev workflow without assets)\nregisterLocaleDataLoader(\"en\", async runtimeLocaleId => {\n\treturn (await fetch(`https://sdk.openui5.org/1.103.0/resources/sap/ui/core/cldr/en.json`)).json();\n});\n\n// When the language changes dynamically (the user calls setLanguage),\n// re-fetch the required CDRD data.\nattachLanguageChange(() => {\n\tconst locale = getLocale();\n\treturn fetchCldr(locale.getLanguage(), locale.getRegion(), locale.getScript());\n});\n\nexport {\n\tregisterLocaleDataLoader,\n\tfetchCldr,\n\tgetLocaleData,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}