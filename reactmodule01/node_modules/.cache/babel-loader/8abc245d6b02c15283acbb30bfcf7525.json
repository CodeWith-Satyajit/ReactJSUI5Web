{"ast":null,"code":"import ValueState from \"@ui5/webcomponents-base/dist/types/ValueState.js\";\nimport ListItem from \"./ListItem.js\";\nimport Icon from \"./Icon.js\";\nimport Avatar from \"./Avatar.js\";\nimport WrappingType from \"./types/WrappingType.js\";\nimport StandardListItemTemplate from \"./generated/templates/StandardListItemTemplate.lit.js\";\n\n/**\n * @public\n */\nconst metadata = {\n  tag: \"ui5-li\",\n  properties: /** @lends sap.ui.webcomponents.main.StandardListItem.prototype */{\n    /**\n     * Defines the description displayed right under the item text, if such is present.\n     * @type {string}\n     * @defaultvalue: \"\"\n     * @public\n     * @since 0.8.0\n     */\n    description: {\n      type: String\n    },\n    /**\n     * Defines the <code>icon</code> source URI.\n     * <br><br>\n     * <b>Note:</b>\n     * SAP-icons font provides numerous built-in icons. To find all the available icons, see the\n     * <ui5-link target=\"_blank\" href=\"https://sdk.openui5.org/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer</ui5-link>.\n     *\n     * @type {string}\n     * @public\n     */\n    icon: {\n      type: String\n    },\n    /**\n     * Defines whether the <code>icon</code> should be displayed in the beginning of the list item or in the end.\n     * <br><br>\n     * <b>Note:</b> If <code>image</code> is set, the <code>icon</code> would be displayed after the <code>image</code>.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    iconEnd: {\n      type: Boolean\n    },\n    /**\n     * Defines the <code>image</code> source URI.\n     * <br><br>\n     * <b>Note:</b> The <code>image</code> would be displayed in the beginning of the list item.\n     *\n     * @type {string}\n     * @public\n     */\n    image: {\n      type: String\n    },\n    /**\n     * Defines the <code>additionalText</code>, displayed in the end of the list item.\n     * @type {string}\n     * @public\n     * @since 1.0.0-rc.15\n     */\n    additionalText: {\n      type: String\n    },\n    /**\n     * Defines the state of the <code>additionalText</code>.\n     * <br>\n     * Available options are: <code>\"None\"</code> (by default), <code>\"Success\"</code>, <code>\"Warning\"</code>, <code>\"Information\"</code> and <code>\"Error\"</code>.\n     * @type {sap.ui.webcomponents.base.types.ValueState}\n     * @defaultvalue \"None\"\n     * @public\n     * @since 1.0.0-rc.15\n     */\n    additionalTextState: {\n      type: ValueState,\n      defaultValue: ValueState.None\n    },\n    /**\n     * Defines the text alternative of the component.\n     * Note: If not provided a default text alternative will be set, if present.\n     *\n     * @type {string}\n     * @defaultvalue \"\"\n     * @public\n     * @since 1.0.0-rc.15\n     */\n    accessibleName: {\n      type: String\n    },\n    /**\n     * Defines if the text of the component should wrap, they truncate by default.\n     *\n     * <br><br>\n     * <b>Note:</b> this property takes affect only if text node is provided to default slot of the component\n     * @type {sap.ui.webcomponents.main.types.WrappingType}\n     * @defaultvalue \"None\"\n     * @private\n     * @since 1.5.0\n     */\n    wrappingType: {\n      type: WrappingType,\n      defaultValue: WrappingType.None\n    },\n    /**\n     * Indicates if the list item has text content.\n     * @type {boolean}\n     * @private\n     */\n    hasTitle: {\n      type: Boolean\n    }\n  },\n  slots: /** @lends sap.ui.webcomponents.main.StandardListItem.prototype */{\n    /**\n     * Defines the text of the component.\n     * <br><br>\n     * <b>Note:</b> Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.\n     *\n     * @type {Node[]}\n     * @slot\n     * @public\n     */\n    \"default\": {\n      type: Node\n    }\n  }\n};\n\n/**\n * @class\n * The <code>ui5-li</code> represents the simplest type of item for a <code>ui5-list</code>.\n *\n * This is a list item,\n * providing the most common use cases such as <code>text</code>,\n * <code>image</code> and <code>icon</code>.\n *\n * <h3>CSS Shadow Parts</h3>\n *\n * <ui5-link target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/::part\">CSS Shadow Parts</ui5-link> allow developers to style elements inside the Shadow DOM.\n * <br>\n * The <code>ui5-li</code> exposes the following CSS Shadow Parts:\n * <ul>\n * <li>title - Used to style the title of the list item</li>\n * <li>description - Used to style the description of the list item</li>\n * <li>additional-text - Used to style the additionalText of the list item</li>\n * <li>icon - Used to style the icon of the list item</li>\n * </ul>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.StandardListItem\n * @extends sap.ui.webcomponents.main.ListItem\n * @tagname ui5-li\n * @implements sap.ui.webcomponents.main.IListItem\n * @public\n */\nclass StandardListItem extends ListItem {\n  static get template() {\n    return StandardListItemTemplate;\n  }\n  static get metadata() {\n    return metadata;\n  }\n  onBeforeRendering() {\n    super.onBeforeRendering(...arguments);\n    this.hasTitle = !!this.textContent;\n  }\n  get displayImage() {\n    return !!this.image;\n  }\n  get displayIconBegin() {\n    return this.icon && !this.iconEnd;\n  }\n  get displayIconEnd() {\n    return this.icon && this.iconEnd;\n  }\n  static get dependencies() {\n    return [...ListItem.dependencies, Icon, Avatar];\n  }\n}\nStandardListItem.define();\nexport default StandardListItem;","map":{"version":3,"names":["ValueState","ListItem","Icon","Avatar","WrappingType","StandardListItemTemplate","metadata","tag","properties","description","type","String","icon","iconEnd","Boolean","image","additionalText","additionalTextState","defaultValue","None","accessibleName","wrappingType","hasTitle","slots","Node","StandardListItem","template","onBeforeRendering","textContent","displayImage","displayIconBegin","displayIconEnd","dependencies","define"],"sources":["/home/user/projects/reactwithcap01/reactmodule01/node_modules/@ui5/webcomponents/dist/StandardListItem.js"],"sourcesContent":["import ValueState from \"@ui5/webcomponents-base/dist/types/ValueState.js\";\nimport ListItem from \"./ListItem.js\";\nimport Icon from \"./Icon.js\";\nimport Avatar from \"./Avatar.js\";\nimport WrappingType from \"./types/WrappingType.js\";\nimport StandardListItemTemplate from \"./generated/templates/StandardListItemTemplate.lit.js\";\n\n/**\n * @public\n */\nconst metadata = {\n\ttag: \"ui5-li\",\n\tproperties: /** @lends sap.ui.webcomponents.main.StandardListItem.prototype */ {\n\n\t\t/**\n\t\t * Defines the description displayed right under the item text, if such is present.\n\t\t * @type {string}\n\t\t * @defaultvalue: \"\"\n\t\t * @public\n\t\t * @since 0.8.0\n\t\t */\n\t\tdescription: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Defines the <code>icon</code> source URI.\n\t\t * <br><br>\n\t\t * <b>Note:</b>\n\t\t * SAP-icons font provides numerous built-in icons. To find all the available icons, see the\n\t\t * <ui5-link target=\"_blank\" href=\"https://sdk.openui5.org/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer</ui5-link>.\n\t\t *\n\t\t * @type {string}\n\t\t * @public\n\t\t */\n\t\ticon: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Defines whether the <code>icon</code> should be displayed in the beginning of the list item or in the end.\n\t\t * <br><br>\n\t\t * <b>Note:</b> If <code>image</code> is set, the <code>icon</code> would be displayed after the <code>image</code>.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\ticonEnd: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines the <code>image</code> source URI.\n\t\t * <br><br>\n\t\t * <b>Note:</b> The <code>image</code> would be displayed in the beginning of the list item.\n\t\t *\n\t\t * @type {string}\n\t\t * @public\n\t\t */\n\t\timage: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Defines the <code>additionalText</code>, displayed in the end of the list item.\n\t\t * @type {string}\n\t\t * @public\n\t\t * @since 1.0.0-rc.15\n\t\t */\n\t\tadditionalText: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Defines the state of the <code>additionalText</code>.\n\t\t * <br>\n\t\t * Available options are: <code>\"None\"</code> (by default), <code>\"Success\"</code>, <code>\"Warning\"</code>, <code>\"Information\"</code> and <code>\"Error\"</code>.\n\t\t * @type {sap.ui.webcomponents.base.types.ValueState}\n\t\t * @defaultvalue \"None\"\n\t\t * @public\n\t\t * @since 1.0.0-rc.15\n\t\t */\n\t\tadditionalTextState: {\n\t\t\ttype: ValueState,\n\t\t\tdefaultValue: ValueState.None,\n\t\t},\n\n\t\t/**\n\t\t * Defines the text alternative of the component.\n\t\t * Note: If not provided a default text alternative will be set, if present.\n\t\t *\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @public\n\t\t * @since 1.0.0-rc.15\n\t\t */\n\t\taccessibleName: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Defines if the text of the component should wrap, they truncate by default.\n\t\t *\n\t\t * <br><br>\n\t\t * <b>Note:</b> this property takes affect only if text node is provided to default slot of the component\n\t\t * @type {sap.ui.webcomponents.main.types.WrappingType}\n\t\t * @defaultvalue \"None\"\n\t\t * @private\n\t\t * @since 1.5.0\n\t\t */\n\t\twrappingType: {\n\t\t\ttype: WrappingType,\n\t\t\tdefaultValue: WrappingType.None,\n\t\t},\n\n\t\t/**\n\t\t * Indicates if the list item has text content.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\thasTitle: {\n\t\t\ttype: Boolean,\n\t\t},\n\t},\n\tslots: /** @lends sap.ui.webcomponents.main.StandardListItem.prototype */ {\n\t\t/**\n\t\t * Defines the text of the component.\n\t\t * <br><br>\n\t\t * <b>Note:</b> Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.\n\t\t *\n\t\t * @type {Node[]}\n\t\t * @slot\n\t\t * @public\n\t\t */\n\t\t\"default\": {\n\t\t\ttype: Node,\n\t\t},\n\t},\n};\n\n/**\n * @class\n * The <code>ui5-li</code> represents the simplest type of item for a <code>ui5-list</code>.\n *\n * This is a list item,\n * providing the most common use cases such as <code>text</code>,\n * <code>image</code> and <code>icon</code>.\n *\n * <h3>CSS Shadow Parts</h3>\n *\n * <ui5-link target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/::part\">CSS Shadow Parts</ui5-link> allow developers to style elements inside the Shadow DOM.\n * <br>\n * The <code>ui5-li</code> exposes the following CSS Shadow Parts:\n * <ul>\n * <li>title - Used to style the title of the list item</li>\n * <li>description - Used to style the description of the list item</li>\n * <li>additional-text - Used to style the additionalText of the list item</li>\n * <li>icon - Used to style the icon of the list item</li>\n * </ul>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.StandardListItem\n * @extends sap.ui.webcomponents.main.ListItem\n * @tagname ui5-li\n * @implements sap.ui.webcomponents.main.IListItem\n * @public\n */\nclass StandardListItem extends ListItem {\n\tstatic get template() {\n\t\treturn StandardListItemTemplate;\n\t}\n\n\tstatic get metadata() {\n\t\treturn metadata;\n\t}\n\n\tonBeforeRendering(...params) {\n\t\tsuper.onBeforeRendering(...params);\n\t\tthis.hasTitle = !!this.textContent;\n\t}\n\n\tget displayImage() {\n\t\treturn !!this.image;\n\t}\n\n\tget displayIconBegin() {\n\t\treturn (this.icon && !this.iconEnd);\n\t}\n\n\tget displayIconEnd() {\n\t\treturn (this.icon && this.iconEnd);\n\t}\n\n\tstatic get dependencies() {\n\t\treturn [\n\t\t\t...ListItem.dependencies,\n\t\t\tIcon,\n\t\t\tAvatar,\n\t\t];\n\t}\n}\n\nStandardListItem.define();\n\nexport default StandardListItem;\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,kDAAkD;AACzE,OAAOC,QAAQ,MAAM,eAAe;AACpC,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAOC,MAAM,MAAM,aAAa;AAChC,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,wBAAwB,MAAM,uDAAuD;;AAE5F;AACA;AACA;AACA,MAAMC,QAAQ,GAAG;EAChBC,GAAG,EAAE,QAAQ;EACbC,UAAU,EAAE,kEAAmE;IAE9E;AACF;AACA;AACA;AACA;AACA;AACA;IACEC,WAAW,EAAE;MACZC,IAAI,EAAEC;IACP,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEC,IAAI,EAAE;MACLF,IAAI,EAAEC;IACP,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEE,OAAO,EAAE;MACRH,IAAI,EAAEI;IACP,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACEC,KAAK,EAAE;MACNL,IAAI,EAAEC;IACP,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;IACEK,cAAc,EAAE;MACfN,IAAI,EAAEC;IACP,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEM,mBAAmB,EAAE;MACpBP,IAAI,EAAEV,UAAU;MAChBkB,YAAY,EAAElB,UAAU,CAACmB;IAC1B,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEC,cAAc,EAAE;MACfV,IAAI,EAAEC;IACP,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEU,YAAY,EAAE;MACbX,IAAI,EAAEN,YAAY;MAClBc,YAAY,EAAEd,YAAY,CAACe;IAC5B,CAAC;IAED;AACF;AACA;AACA;AACA;IACEG,QAAQ,EAAE;MACTZ,IAAI,EAAEI;IACP;EACD,CAAC;EACDS,KAAK,EAAE,kEAAmE;IACzE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,SAAS,EAAE;MACVb,IAAI,EAAEc;IACP;EACD;AACD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,gBAAgB,SAASxB,QAAQ,CAAC;EACvC,WAAWyB,QAAQ,GAAG;IACrB,OAAOrB,wBAAwB;EAChC;EAEA,WAAWC,QAAQ,GAAG;IACrB,OAAOA,QAAQ;EAChB;EAEAqB,iBAAiB,GAAY;IAC5B,KAAK,CAACA,iBAAiB,CAAC,YAAS,CAAC;IAClC,IAAI,CAACL,QAAQ,GAAG,CAAC,CAAC,IAAI,CAACM,WAAW;EACnC;EAEA,IAAIC,YAAY,GAAG;IAClB,OAAO,CAAC,CAAC,IAAI,CAACd,KAAK;EACpB;EAEA,IAAIe,gBAAgB,GAAG;IACtB,OAAQ,IAAI,CAAClB,IAAI,IAAI,CAAC,IAAI,CAACC,OAAO;EACnC;EAEA,IAAIkB,cAAc,GAAG;IACpB,OAAQ,IAAI,CAACnB,IAAI,IAAI,IAAI,CAACC,OAAO;EAClC;EAEA,WAAWmB,YAAY,GAAG;IACzB,OAAO,CACN,GAAG/B,QAAQ,CAAC+B,YAAY,EACxB9B,IAAI,EACJC,MAAM,CACN;EACF;AACD;AAEAsB,gBAAgB,CAACQ,MAAM,EAAE;AAEzB,eAAeR,gBAAgB"},"metadata":{},"sourceType":"module"}